{"version":3,"file":"orbity.min.js","sources":["../src/orbity.js"],"sourcesContent":["class Orbity {\n  /**\n   * Creates an instance of Orbity.\n   * @param {HTMLCanvasElement} canvas - The canvas element where the 3D tag cloud will be rendered.\n   * @param {Object} options - Configuration options for the tag cloud.\n   * @param {number} [options.radius=150] - Radius of the 3D sphere or other shapes.\n   * @param {number} [options.speed=0.002] - Speed of rotation.\n   * @param {number} [options.easing=0.05] - Easing factor for smooth rotation.\n   * @param {boolean} [options.paused=false] - Whether the animation starts paused.\n   * @param {boolean} [options.enableTouch=true] - Enable touch interaction.\n   * @param {boolean} [options.enableOrientation=false] - Enable device orientation interaction.\n   * @param {number} [options.maxVelocity=0.05] - Maximum velocity for rotation.\n   * @param {string} [options.shape=\"sphere\"] - Shape of the tag cloud (e.g., \"sphere\", \"cube\", \"pyramid\").\n   */\n  constructor(canvas, options = {}) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.tags = [];\n    this.settings = Object.assign(\n      {\n        radius: 150,\n        speed: 1,\n        easing: 0.1,\n        paused: false,\n        enableTouch: true,\n        enableOrientation: false,\n        maxVelocity: 0.5,\n        shape: \"sphere\",\n      },\n      options\n    );\n    this.rotation = { x: 0, y: 0 };\n    this.velocity = { x: 0.01, y: 0.01 };\n    this.touch = { x: 0, y: 0, active: false };\n    this.animFrame = null;\n    this._events = { tagClick: [], tagHover: [], tagLeave: [] };\n    this._hoveredIndex = null;\n    this._init();\n  }\n\n  _init() {\n    this._resize();\n    window.addEventListener(\"resize\", () => this._resize());\n    this._bindTouch();\n    this._bindMouse();\n    this._bindOrientation();\n    this._attachInteraction();\n    this.canvas.setAttribute(\"role\", \"img\");\n    this.canvas.setAttribute(\"aria-label\", \"3D tag cloud visualization\");\n    this._animate();\n  }\n\n  _resize() {\n    this.canvas.width = this.canvas.offsetWidth;\n    this.canvas.height = this.canvas.offsetHeight;\n    this.center = { x: this.canvas.width / 2, y: this.canvas.height / 2 };\n    this._positionTags();\n  }\n\n  setTags(dataArray) {\n    this.tags = dataArray.map((data, i) => ({\n      ...data,\n      angleX: Math.random() * 2 * Math.PI,\n      angleY: Math.random() * Math.PI,\n      index: i,\n      _screen: {},\n    }));\n    this._positionTags();\n  }\n\n  _getRandomAngle() {\n    return Math.random() * 2 * Math.PI;\n  }\n\n  addTag(tagData) {\n    if (!this._validateTag(tagData)) return;\n    this.tags.push({\n      ...tagData,\n      angleX: this._getRandomAngle(),\n      angleY: this._getRandomAngle(),\n      index: this.tags.length,\n      _screen: {},\n    });\n    this._positionTags();\n  }\n\n  removeTag(index) {\n    this.tags.splice(index, 1);\n    this._positionTags();\n  }\n\n  updateTag(index, data) {\n    if (!this.tags[index]) {\n      console.error(`Tag at index ${index} does not exist.`);\n      return;\n    }\n    Object.assign(this.tags[index], data);\n    this._positionTags();\n  }\n\n  clearTags() {\n    this.tags = [];\n  }\n\n  updateOptions(newOptions) {\n    this.settings = { ...this.settings, ...newOptions };\n\n    if (newOptions.radius !== undefined || newOptions.shape !== undefined) {\n      this._positionTags();\n    }\n\n    if (newOptions.enableTouch !== undefined) {\n      this._bindTouch();\n    }\n\n    if (newOptions.enableOrientation !== undefined) {\n      this._bindOrientation();\n    }\n\n    if (newOptions.paused !== undefined) {\n      if (newOptions.paused) {\n        this.pause();\n      } else {\n        this.resume();\n      }\n    }\n  }\n\n  _bindTouch() {\n    if (!this.settings.enableTouch) return;\n\n    let lastX = 0;\n    let lastY = 0;\n    let velocityX = 0;\n    let velocityY = 0;\n\n    this.canvas.addEventListener(\"touchstart\", (e) => {\n      this.touch.active = true;\n      lastX = e.touches[0].clientX;\n      lastY = e.touches[0].clientY;\n      velocityX = 0;\n      velocityY = 0;\n    });\n\n    this.canvas.addEventListener(\n      \"touchmove\",\n      (e) => {\n        if (!this.touch.active) return;\n\n        const dx = e.touches[0].clientX - lastX;\n        const dy = e.touches[0].clientY - lastY;\n\n        velocityX = Math.min(\n          dx * this.settings.speed,\n          this.settings.maxVelocity\n        );\n        velocityY = Math.min(\n          dy * this.settings.speed,\n          this.settings.maxVelocity\n        );\n\n        this.velocity.x =\n          Math.sign(velocityY) *\n          Math.min(Math.abs(velocityY), this.settings.maxVelocity);\n        this.velocity.y =\n          Math.sign(velocityX) *\n          Math.min(Math.abs(velocityX), this.settings.maxVelocity);\n\n        lastX = e.touches[0].clientX;\n        lastY = e.touches[0].clientY;\n\n        e.preventDefault();\n      },\n      { passive: false }\n    );\n\n    this.canvas.addEventListener(\"touchend\", () => {\n      this.touch.active = false;\n\n      this.velocity.x =\n        Math.sign(velocityY) *\n        Math.min(Math.abs(velocityY), this.settings.maxVelocity);\n      this.velocity.y =\n        Math.sign(velocityX) *\n        Math.min(Math.abs(velocityX), this.settings.maxVelocity);\n    });\n  }\n\n  _bindMouse() {\n    let isDragging = false;\n    let lastX = 0;\n    let lastY = 0;\n    let velocityX = 0;\n    let velocityY = 0;\n\n    this.canvas.addEventListener(\"mousedown\", (e) => {\n      isDragging = true;\n      lastX = e.clientX;\n      lastY = e.clientY;\n      velocityX = 0;\n      velocityY = 0;\n    });\n\n    this.canvas.addEventListener(\"mousemove\", (e) => {\n      if (!isDragging) return;\n\n      const dx = e.clientX - lastX;\n      const dy = e.clientY - lastY;\n\n      velocityX = Math.min(dx * this.settings.speed, this.settings.maxVelocity);\n      velocityY = Math.min(dy * this.settings.speed, this.settings.maxVelocity);\n\n      this.velocity.x =\n        Math.sign(velocityY) *\n        Math.min(Math.abs(velocityY), this.settings.maxVelocity);\n      this.velocity.y =\n        Math.sign(velocityX) *\n        Math.min(Math.abs(velocityX), this.settings.maxVelocity);\n\n      lastX = e.clientX;\n      lastY = e.clientY;\n    });\n\n    this.canvas.addEventListener(\"mouseup\", () => {\n      isDragging = false;\n\n      this.velocity.x =\n        Math.sign(velocityY) *\n        Math.min(Math.abs(velocityY), this.settings.maxVelocity);\n      this.velocity.y =\n        Math.sign(velocityX) *\n        Math.min(Math.abs(velocityX), this.settings.maxVelocity);\n    });\n\n    this.canvas.addEventListener(\"mouseleave\", () => {\n      isDragging = false;\n    });\n  }\n\n  _bindOrientation() {\n    if (!this.settings.enableOrientation) return;\n\n    let lastUpdate = 0;\n    const throttleDelay = 100;\n\n    const handleOrientation = (e) => {\n      const now = Date.now();\n      if (now - lastUpdate < throttleDelay) return;\n      lastUpdate = now;\n\n      const { gamma = 0, beta = 0 } = e;\n      this.velocity.x = gamma * 0.0005;\n      this.velocity.y = beta * 0.0005;\n    };\n\n    window.addEventListener(\"deviceorientation\", handleOrientation);\n  }\n\n  _attachInteraction() {\n    this.canvas.addEventListener(\"click\", this._onCanvasClick.bind(this));\n    this.canvas.addEventListener(\n      \"mousemove\",\n      this._onCanvasMouseMove.bind(this)\n    );\n    this.canvas.addEventListener(\n      \"mouseleave\",\n      this._onCanvasMouseLeave.bind(this)\n    );\n  }\n\n  _onCanvasClick(e) {\n    const pt = this._getPointer(e);\n    const tag = this._getTagAt(pt);\n    if (tag) this._events.tagClick.forEach((cb) => cb(tag));\n  }\n\n  _onCanvasMouseMove(e) {\n    const pt = this._getPointer(e);\n    const tag = this._getTagAt(pt);\n    if (tag && tag.index !== this._hoveredIndex) {\n      if (this._hoveredIndex !== null) {\n        const prev = this.tags[this._hoveredIndex];\n        this._events.tagLeave.forEach((cb) => cb(prev));\n      }\n      this._hoveredIndex = tag.index;\n      this._events.tagHover.forEach((cb) => cb(tag));\n    } else if (!tag && this._hoveredIndex !== null) {\n      const prev = this.tags[this._hoveredIndex];\n      this._events.tagLeave.forEach((cb) => cb(prev));\n      this._hoveredIndex = null;\n    }\n  }\n\n  _onCanvasMouseLeave() {\n    if (this._hoveredIndex !== null) {\n      const prev = this.tags[this._hoveredIndex];\n      this._events.tagLeave.forEach((cb) => cb(prev));\n      this._hoveredIndex = null;\n    }\n  }\n\n  _getPointer(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    return { x: e.clientX - rect.left, y: e.clientY - rect.top };\n  }\n\n  _getTagAt(pt) {\n    for (let i = this.tags.length - 1; i >= 0; i--) {\n      const tag = this.tags[i];\n      const s = tag._screen;\n      if (!s) continue;\n      const dx = pt.x - s.x;\n      const dy = pt.y - s.y;\n      if (Math.abs(dx) <= s.width / 2 && Math.abs(dy) <= s.height / 2)\n        return tag;\n    }\n    return null;\n  }\n\n  _positionTags() {\n    if (!this.tags.length) return;\n\n    const R = this.settings.radius;\n    const N = this.tags.length;\n    const shape = this.settings.shape || \"sphere\";\n\n    switch (shape) {\n      case \"cube\":\n        const side = Math.ceil(Math.cbrt(N));\n        this.tags.forEach((tag, i) => {\n          const x = (i % side) - side / 2 + 0.5;\n          const y = (Math.floor(i / side) % side) - side / 2 + 0.5;\n          const z = Math.floor(i / (side * side)) - side / 2 + 0.5;\n          tag.x = x * (R / side) * 2;\n          tag.y = y * (R / side) * 2;\n          tag.z = z * (R / side) * 2;\n        });\n        break;\n      case \"pyramid\":\n        let currentIndex = 0;\n        const levels = Math.ceil(Math.sqrt(N));\n        for (let level = 0; level < levels; level++) {\n          const levelSize = levels - level;\n          const height = (R / levels) * level;\n          const levelRadius = (R / levels) * (levels - level);\n\n          for (let i = 0; i < levelSize * levelSize && currentIndex < N; i++) {\n            const row = Math.floor(i / levelSize) - levelSize / 2 + 0.5;\n            const col = (i % levelSize) - levelSize / 2 + 0.5;\n\n            this.tags[currentIndex].x = (col * levelRadius) / levelSize;\n            this.tags[currentIndex].y = -height;\n            this.tags[currentIndex].z = (row * levelRadius) / levelSize;\n\n            currentIndex++;\n          }\n        }\n        break;\n      case \"helix\":\n        const turns = 2;\n        const spacing = (2 * R) / N;\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI * turns;\n          const height = -R + i * spacing;\n          tag.x = R * Math.cos(angle);\n          tag.y = height;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n      case \"ring\":\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI;\n          tag.x = R * Math.cos(angle);\n          tag.y = 0;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n      case \"verticalRing\":\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI;\n          tag.x = 0;\n          tag.y = R * Math.sin(angle);\n          tag.z = R * Math.cos(angle);\n        });\n        break;\n      case \"cylinder\":\n        const heightStep = (2 * R) / N;\n        const circumferenceTags = Math.ceil(Math.sqrt(N));\n        const verticalTags = Math.ceil(N / circumferenceTags);\n\n        this.tags.forEach((tag, i) => {\n          const level = Math.floor(i / circumferenceTags);\n          const angle =\n            (i % circumferenceTags) * ((2 * Math.PI) / circumferenceTags);\n          const height = -R + level * heightStep;\n\n          tag.x = R * Math.cos(angle);\n          tag.y = height;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n      case \"sphere\":\n      default:\n        this.tags.forEach((tag, i) => {\n          const k = -1 + (2 * i) / (N - 1);\n          const phi = Math.acos(k);\n          const theta = Math.sqrt(N * Math.PI) * phi;\n          tag.x = R * Math.sin(phi) * Math.cos(theta);\n          tag.y = R * Math.sin(phi) * Math.sin(theta);\n          tag.z = R * Math.cos(phi);\n        });\n        break;\n    }\n  }\n\n  _draw() {\n    const { ctx, canvas, center } = this;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const sortedTags = [...this.tags].sort((a, b) => b.z - a.z);\n\n    for (const tag of sortedTags) {\n      const scale = (center.x * 2) / (center.x * 2 + tag.z);\n      const x = tag.x * scale + center.x;\n      const y = tag.y * scale + center.y;\n      const fontSize = (tag.fontSize || 15) * scale;\n      const text = tag.text || \"\";\n\n      const minOpacity = 0.2;\n      const maxOpacity = 1.0;\n      const normalizedZ = (tag.z + center.x) / (2 * center.x);\n      let opacity = Math.max(\n        minOpacity,\n        maxOpacity - normalizedZ * (maxOpacity - minOpacity)\n      );\n      opacity = Math.round(opacity * 10) / 10;\n      ctx.globalAlpha = opacity;\n      ctx.fillStyle = tag.color || \"#fff\";\n      ctx.font = `${fontSize}px sans-serif`;\n      const metrics = ctx.measureText(text);\n      tag._screen = {\n        x,\n        y,\n        width: metrics.width,\n        height: fontSize,\n      };\n      ctx.fillText(text, x - metrics.width / 2, y + fontSize / 2);\n    }\n  }\n\n  _animate() {\n    if (this.settings.paused) return;\n\n    this.rotation.x +=\n      (this.velocity.x - this.rotation.x) * this.settings.easing;\n    this.rotation.y +=\n      (this.velocity.y - this.rotation.y) * this.settings.easing;\n\n    this.rotation.x += this.settings.speed;\n    this.rotation.y += this.settings.speed;\n\n    const shape = this.settings.shape || \"sphere\";\n    if (shape === \"ring\" || shape === \"helix\") {\n      this.rotation.x = 0;\n    } else if (shape === \"verticalRing\") {\n      this.rotation.y = 0;\n    }\n\n    const cosY = Math.cos(this.rotation.y),\n      sinY = Math.sin(this.rotation.y);\n    const cosX = Math.cos(this.rotation.x),\n      sinX = Math.sin(this.rotation.x);\n\n    this.tags.forEach((tag) => {\n      let { x, y, z } = tag;\n\n      let nx = x * cosY - z * sinY;\n      let nz = x * sinY + z * cosY;\n      let ny = y * cosX - nz * sinX;\n      nz = y * sinX + nz * cosX;\n\n      tag.x = nx;\n      tag.y = ny;\n      tag.z = nz;\n    });\n\n    this._draw();\n\n    this.animFrame = requestAnimationFrame(this._animate.bind(this));\n  }\n\n  pause() {\n    this.settings.paused = true;\n    if (this.animFrame) cancelAnimationFrame(this.animFrame);\n    this._events.pause?.forEach((cb) => cb());\n  }\n\n  resume() {\n    this.settings.paused = false;\n    this._animate();\n    this._events.resume?.forEach((cb) => cb());\n  }\n\n  destroy() {\n    this.pause();\n    window.removeEventListener(\"resize\", this._resize);\n    this.canvas.removeEventListener(\"touchstart\", this._bindTouch);\n    this.canvas.removeEventListener(\"mousemove\", this._onCanvasMouseMove);\n    this.canvas.removeEventListener(\"mouseleave\", this._onCanvasMouseLeave);\n    this.canvas.removeEventListener(\"click\", this._onCanvasClick);\n    window.removeEventListener(\"deviceorientation\", this._bindOrientation);\n    this.canvas.replaceWith(this.canvas.cloneNode(true));\n    this.tags = [];\n  }\n}\n\nexport default Orbity;"],"names":["constructor","canvas","options","this","ctx","getContext","tags","settings","Object","assign","radius","speed","easing","paused","enableTouch","enableOrientation","maxVelocity","shape","rotation","x","y","velocity","touch","active","animFrame","_events","tagClick","tagHover","tagLeave","_hoveredIndex","_init","_resize","window","addEventListener","_bindTouch","_bindMouse","_bindOrientation","_attachInteraction","setAttribute","_animate","width","offsetWidth","height","offsetHeight","center","_positionTags","setTags","dataArray","map","data","i","angleX","Math","random","PI","angleY","index","_screen","_getRandomAngle","addTag","tagData","_validateTag","push","length","removeTag","splice","updateTag","console","error","clearTags","updateOptions","newOptions","undefined","pause","resume","lastX","lastY","velocityX","velocityY","e","touches","clientX","clientY","dx","dy","min","sign","abs","preventDefault","passive","isDragging","lastUpdate","now","Date","gamma","beta","_onCanvasClick","bind","_onCanvasMouseMove","_onCanvasMouseLeave","pt","_getPointer","tag","_getTagAt","forEach","cb","prev","rect","getBoundingClientRect","left","top","s","R","N","side","ceil","cbrt","floor","z","currentIndex","levels","sqrt","level","levelSize","levelRadius","row","col","turns","spacing","angle","cos","sin","heightStep","circumferenceTags","k","phi","acos","theta","_draw","clearRect","sortedTags","sort","a","b","scale","fontSize","text","minOpacity","maxOpacity","normalizedZ","opacity","max","round","globalAlpha","fillStyle","color","font","metrics","measureText","fillText","cosY","sinY","cosX","sinX","nx","nz","ny","requestAnimationFrame","cancelAnimationFrame","destroy","removeEventListener","replaceWith","cloneNode"],"mappings":"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"}