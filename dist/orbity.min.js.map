{"version":3,"file":"orbity.min.js","sources":["../src/orbity.js"],"sourcesContent":["/* Orbity.js is inspired by tagcanvas.js \nlink to tagcanvas.js: https://www.goat1000.com/tagcanvas.php\nThanks to the original author for the inspiration! */\n\nconst DEFAULT_SHAPE = \"sphere\";\n\nclass Orbity {\n  /**\n   * Creates an instance of Orbity.\n   * @param {HTMLCanvasElement} canvas - The canvas element where the 3D tag cloud will be rendered.\n   * @param {Object} options - Configuration options for the tag cloud.\n   * @param {number} [options.radius=150] - Radius of the 3D sphere or other shapes.\n   * @param {number} [options.speed=0.002] - Speed of rotation.\n   * @param {number} [options.easing=0.05] - Easing factor for smooth rotation.\n   * @param {boolean} [options.paused=false] - Whether the animation starts paused.\n   * @param {boolean} [options.enableTouch=true] - Enable touch interaction.\n   * @param {boolean} [options.enableOrientation=false] - Enable device orientation interaction.\n   * @param {number} [options.maxVelocity=0.05] - Maximum velocity for rotation.\n   * @param {string} [options.shape=DEFAULT_SHAPE] - Shape of the tag cloud (e.g., \"sphere\", \"cube\", \"plane\", \"helix\", \"ring\", \"verticalRing\", \"cylinder\", \"pyramid\").\n   * @param {boolean} [options.enableDrag=true] - Enable drag interaction.\n   * @param {boolean} [options.enableClick=true] - Enable click interaction.\n   * @param {boolean} [options.hoverEffect=true] - Enable/disable hover effects.\n   * @param {boolean} [options.clickEffect=true] - Enable/disable click effects.\n   * @param {number} [options.hoverScale=1.2] - Scale factor for hover effect.\n   * @param {string} [options.hoverColor=\"#ff0\"] - Color change on hover.\n   * @param {number} [options.hoverOpacity=1.0] - Opacity change on hover.\n   * @param {string} [options.customFont=\"sans-serif\"] - Default font family.\n   * @param {string} [options.customFontWeight=\"normal\"] - Default font weight.\n   */\n  constructor(canvas, options = {}) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.tags = [];\n    this.settings = Object.assign(\n      {\n        radius: 150,\n        speed: 1,\n        easing: 0.1,\n        enableEasing: true,\n        paused: false,\n        enableTouch: true,\n        enableOrientation: false,\n        maxVelocity: 0.5,\n        shape: DEFAULT_SHAPE,\n        enableDrag: true,\n        enableClick: true,\n        autoSpin: true,\n        hoverEffect: true,\n        clickEffect: true,\n        hoverScale: 1.2,\n        hoverColor: \"#ff0\",\n        hoverOpacity: 1.0,\n        customFont: \"sans-serif\",\n        customFontWeight: \"normal\",\n      },\n      options\n    );\n    this.rotation = { x: 0, y: 0 };\n    this.velocity = { x: 0, y: 0 };\n    this.touch = { x: 0, y: 0, active: false };\n    this.animFrame = null;\n    this._events = { tagClick: [], tagHover: [], tagLeave: [] };\n    this._hoveredIndex = null;\n\n    this.settings.easing = Math.min(Math.max(this.settings.easing, 0.01), 0.5);\n    this.settings.speed = Math.min(Math.max(this.settings.speed, 0.1), 5);\n    this._orientationHandler = this._handleOrientation.bind(this);\n    this._touchStartHandler = this._onTouchStart.bind(this);\n    this._touchMoveHandler = this._onTouchMove.bind(this);\n    this._mouseMoveHandler = this._onCanvasMouseMove.bind(this);\n    this._mouseLeaveHandler = this._onCanvasMouseLeave.bind(this);\n    this._clickHandler = this._onCanvasClick.bind(this);\n    this._init();\n  }\n\n  /**\n   * Throttles a function to limit its execution rate.\n   * @private\n   * @param {Function} func - The function to throttle.\n   * @param {number} limit - The time limit in milliseconds.\n   * @returns {Function} The throttled function.\n   */\n  _throttle(func, limit) {\n    let lastFunc;\n    let lastRan;\n    return function (...args) {\n      const context = this;\n      if (!lastRan) {\n        func.apply(context, args);\n        lastRan = Date.now();\n      } else {\n        clearTimeout(lastFunc);\n        lastFunc = setTimeout(function () {\n          if (Date.now() - lastRan >= limit) {\n            func.apply(context, args);\n            lastRan = Date.now();\n          }\n        }, limit - (Date.now() - lastRan));\n      }\n    };\n  }\n\n  /**\n   * Initializes the Orbity instance by setting up the canvas, event listeners, and starting the animation.\n   * @private\n   */\n  _init() {\n    this._resize = this._throttle(this._resize.bind(this), 200);\n    this._onCanvasMouseMove = this._throttle(\n      this._onCanvasMouseMove.bind(this),\n      50\n    );\n    window.addEventListener(\"resize\", this._resize);\n    this._bindTouch();\n    this._bindMouse();\n    this._bindOrientation();\n    this._attachInteraction();\n    this.canvas.setAttribute(\"role\", \"img\");\n    this.canvas.setAttribute(\"aria-label\", \"3D tag cloud visualization\");\n    this._resize();\n    this._positionTags();\n    this._animate();\n  }\n\n  /**\n   * Resizes the canvas to match its container and recalculates the center and tag positions.\n   * @private\n   */\n  _resize() {\n    this.canvas.width = this.canvas.offsetWidth;\n    this.canvas.height = this.canvas.offsetHeight;\n    this.center = { x: this.canvas.width / 2, y: this.canvas.height / 2 };\n    this._positionTags();\n  }\n\n  /**\n   * Sets the tags to be displayed in the 3D tag cloud.\n   * @param {Array<Object>} dataArray - Array of tag data objects.\n   * Each object should have the following properties:\n   *   - text {string}: The text of the tag.\n   *   - color {string}: The color of the tag (e.g., \"#fff\").\n   *   - fontSize {number} (optional): The font size of the tag.\n   */\n  setTags(dataArray) {\n    this.tags = dataArray.map((data, i) => ({\n      ...data,\n      angleX: Math.random() * 2 * Math.PI,\n      angleY: Math.random() * Math.PI,\n      index: i,\n      _screen: {},\n      _scale: 1,\n      _color: data.color,\n      _opacity: 1,\n    }));\n    this._positionTags();\n    this._draw();\n  }\n\n  /**\n   * Generates a random angle for tag positioning.\n   * @private\n   * @returns {number} A random angle in radians.\n   */\n  _getRandomAngle() {\n    return Math.random() * 2 * Math.PI;\n  }\n\n  /**\n   * Adds a single tag to the 3D tag cloud.\n   * @param {Object} tagData - Data for the new tag.\n   *   - text {string}: The text of the tag.\n   *   - color {string}: The color of the tag (e.g., \"#fff\").\n   *   - fontSize {number} (optional): The font size of the tag.\n   */\n  addTag(tagData) {\n    if (!this._validateTag(tagData)) return;\n    this.tags.push({\n      ...tagData,\n      angleX: this._getRandomAngle(),\n      angleY: this._getRandomAngle(),\n      index: this.tags.length,\n      _screen: {},\n      _scale: 1,\n      _color: tagData.color,\n      _opacity: 1,\n    });\n    this._positionTags();\n  }\n\n  /**\n   * Removes a tag from the 3D tag cloud by its index.\n   * @param {number} index - Index of the tag to remove.\n   */\n  removeTag(index) {\n    this.tags.splice(index, 1);\n    this._positionTags();\n  }\n\n  /**\n   * Updates the data of an existing tag.\n   * @param {number} index - Index of the tag to update.\n   * @param {Object} data - New data for the tag.\n   */\n  updateTag(index, data) {\n    if (!this.tags[index]) {\n      console.error(`Tag at index ${index} does not exist.`);\n      return;\n    }\n    Object.assign(this.tags[index], data, {\n      _scale: 1,\n      _color: data.color || this.tags[index].color,\n      _opacity: 1,\n    });\n    this._positionTags();\n  }\n\n  /**\n   * Clears all tags from the 3D tag cloud.\n   */\n  clearTags() {\n    this.tags = [];\n  }\n\n  /**\n   * Updates the configuration options for the Orbity instance.\n   * @param {Object} newOptions - New configuration options.\n   */\n  updateOptions(newOptions) {\n    this.settings = { ...this.settings, ...newOptions };\n\n    if (newOptions.easing !== undefined) {\n      if (typeof newOptions.easing !== \"number\") {\n        console.error(\"Invalid easing: must be a number\");\n        this.settings.easing = 0.1;\n      } else {\n        this.settings.easing = newOptions.easing;\n      }\n    }\n\n    if (newOptions.speed !== undefined) {\n      if (typeof newOptions.speed !== \"number\") {\n        console.error(\"Invalid speed: must be a \");\n        this.settings.speed = 1;\n      } else {\n        this.settings.speed = newOptions.speed;\n      }\n    }\n\n    if (newOptions.radius !== undefined) {\n      if (typeof newOptions.radius !== \"number\" || newOptions.radius <= 0) {\n        console.error(\"Invalid radius: must be a positive number.\");\n        this.settings.radius = 150;\n      }\n    }\n\n    if (newOptions.shape !== undefined) {\n      const validShapes = [\n        \"sphere\",\n        \"cube\",\n        \"plane\",\n        \"helix\",\n        \"ring\",\n        \"verticalRing\",\n        \"cylinder\",\n        \"pyramid\",\n      ];\n      if (!validShapes.includes(newOptions.shape)) {\n        console.error(\n          `Invalid shape: must be one of ${validShapes.join(\", \")}.`\n        );\n        this.settings.shape = DEFAULT_SHAPE;\n      }\n    }\n\n    if (newOptions.maxVelocity !== undefined) {\n      if (\n        typeof newOptions.maxVelocity !== \"number\" ||\n        newOptions.maxVelocity < 0\n      ) {\n        console.error(\"Invalid maxVelocity: must be a non-negative number.\");\n        this.settings.maxVelocity = 0.5;\n      }\n    }\n\n    if (newOptions.radius !== undefined || newOptions.shape !== undefined) {\n      this._positionTags();\n    }\n\n    if (newOptions.enableTouch !== undefined) {\n      if (newOptions.enableTouch) {\n        this._bindTouch();\n      } else {\n        this.canvas.removeEventListener(\"touchstart\", this._touchStartHandler);\n        this.canvas.removeEventListener(\"touchmove\", this._touchMoveHandler);\n        this.canvas.removeEventListener(\"touchend\", this._bindTouch);\n      }\n    }\n\n    if (newOptions.enableOrientation !== undefined) {\n      if (newOptions.enableOrientation) {\n        this._bindOrientation();\n      } else {\n        window.removeEventListener(\n          \"deviceorientation\",\n          this._orientationHandler\n        );\n      }\n    }\n\n    if (newOptions.enableClick !== undefined) {\n      if (newOptions.enableClick) {\n        this.canvas.addEventListener(\"click\", this._clickHandler);\n      } else {\n        this.canvas.removeEventListener(\"click\", this._clickHandler);\n      }\n    }\n\n    if (newOptions.paused !== undefined) {\n      if (newOptions.paused) {\n        this.pause();\n      } else {\n        this.resume();\n      }\n    }\n  }\n\n  /**\n   * Validates the tag data.\n   * @private\n   * @param {Object} tagData - Data for the tag.\n   * @returns {boolean} True if the tag data is valid, false otherwise.\n   */\n  _validateTag(tagData) {\n    if (!tagData.text || typeof tagData.text !== \"string\") {\n      console.error(\"Invalid tag: 'text' is required and must be a string.\");\n      return false;\n    }\n    if (!tagData.color || !/^#[0-9A-F]{6}$/i.test(tagData.color)) {\n      console.error(\"Invalid tag: 'color' must be a valid hex color code.\");\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles drag-like interactions for rotating the tag cloud.\n   * @private\n   */\n  _bindDragEvents(startEvent, moveEvent, endEvent, getPosition) {\n    let isDragging = false;\n    let lastX = 0;\n    let lastY = 0;\n\n    const startHandler = (e) => {\n      isDragging = true;\n      const pos = getPosition(e);\n      lastX = pos.x;\n      lastY = pos.y;\n\n      if (this.velocity.x === 0 && this.velocity.y === 0) {\n        this.velocity.x = this.settings.speed * 0.1;\n        this.velocity.y = this.settings.speed * 0.1;\n      }\n    };\n\n    const moveHandler = (e) => {\n      if (!isDragging) return;\n\n      const pos = getPosition(e);\n      const dx = pos.x - lastX;\n      const dy = pos.y - lastY;\n\n      if (this.settings.maxVelocity > 0) {\n        this.velocity.x = Math.min(\n          Math.max(dy * this.settings.speed, -this.settings.maxVelocity),\n          this.settings.maxVelocity\n        );\n        this.velocity.y = Math.min(\n          Math.max(dx * this.settings.speed, -this.settings.maxVelocity),\n          this.settings.maxVelocity\n        );\n      } else {\n        this.velocity.x = dy * this.settings.speed * 0.1;\n        this.velocity.y = dx * this.settings.speed * 0.1;\n      }\n\n      lastX = pos.x;\n      lastY = pos.y;\n\n      if (e.preventDefault) e.preventDefault();\n    };\n\n    const endHandler = () => {\n      isDragging = false;\n      this._applyDragEasing();\n    };\n\n    const leaveHandler = () => {\n      if (isDragging) {\n        isDragging = false;\n        this._applyDragEasing();\n      }\n    };\n\n    this.canvas.addEventListener(startEvent, startHandler);\n    this.canvas.addEventListener(moveEvent, moveHandler, { passive: false });\n    this.canvas.addEventListener(endEvent, endHandler);\n    this.canvas.addEventListener(\"mouseleave\", leaveHandler);\n  }\n\n  /**\n   * Handles touch interactions for rotating the tag cloud.\n   * @private\n   */\n  _bindTouch() {\n    if (!this.settings.enableTouch) return;\n\n    this._bindDragEvents(\"touchstart\", \"touchmove\", \"touchend\", (e) => ({\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n    }));\n  }\n\n  /**\n   * Handles the touch start event to initiate touch interaction.\n   * @private\n   * @param {TouchEvent} event - The touch start event.\n   */\n  _onTouchStart(event) {\n    if (event.touches.length === 1) {\n      const touch = event.touches[0];\n      this.touch.x = touch.clientX;\n      this.touch.y = touch.clientY;\n      this.touch.active = true;\n    }\n  }\n\n  /**\n   * Handles the touch move event to update touch interaction.\n   * @private\n   * @param {TouchEvent} event - The touch move event.\n   */\n  _onTouchMove(event) {\n    if (event.touches.length === 1 && this.touch.active) {\n      const touch = event.touches[0];\n      const dx = touch.clientX - this.touch.x;\n      const dy = touch.clientY - this.touch.y;\n\n      if (this.settings.maxVelocity > 0) {\n        this.velocity.x = Math.min(\n          Math.max(dy * this.settings.speed, -this.settings.maxVelocity),\n          this.settings.maxVelocity\n        );\n        this.velocity.y = Math.min(\n          Math.max(dx * this.settings.speed, -this.settings.maxVelocity),\n          this.settings.maxVelocity\n        );\n      } else {\n        this.velocity.x = dy * this.settings.speed * 0.1;\n        this.velocity.y = dx * this.settings.speed * 0.1;\n      }\n\n      this.touch.x = touch.clientX;\n      this.touch.y = touch.clientY;\n\n      if (event.preventDefault) event.preventDefault();\n    }\n  }\n\n  /**\n   * Handles mouse interactions for rotating the tag cloud.\n   * @private\n   */\n  _bindMouse() {\n    if (!this.settings.enableDrag) return;\n\n    this._bindDragEvents(\"mousedown\", \"mousemove\", \"mouseup\", (e) => ({\n      x: e.clientX,\n      y: e.clientY,\n    }));\n\n    this.canvas.addEventListener(\"mouseleave\", () => {\n      this._applyDragEasing();\n    });\n  }\n\n  _applyDragEasing() {\n    const easingFactor = 0.97;\n    const stopThreshold = 0.005;\n\n    const easeOut = () => {\n      this.velocity.x *= easingFactor;\n      this.velocity.y *= easingFactor;\n\n      if (Math.abs(this.velocity.x) < stopThreshold) this.velocity.x = 0;\n      if (Math.abs(this.velocity.y) < stopThreshold) this.velocity.y = 0;\n\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n        requestAnimationFrame(easeOut);\n      }\n    };\n\n    easeOut();\n  }\n\n  /**\n   * Handles device orientation interactions for rotating the tag cloud.\n   * @private\n   */\n  _bindOrientation() {\n    if (!this.settings.enableOrientation) return;\n\n    let lastUpdate = 0;\n    const throttleDelay = 100;\n\n    const handleOrientation = (e) => {\n      const now = Date.now();\n      if (now - lastUpdate < throttleDelay) return;\n      lastUpdate = now;\n\n      const { gamma = 0, beta = 0 } = e;\n      this.velocity.x = gamma * 0.0005;\n      this.velocity.y = beta * 0.0005;\n    };\n\n    window.addEventListener(\"deviceorientation\", handleOrientation);\n  }\n\n  /**\n   * Handles device orientation events to update the rotation velocity.\n   * @private\n   * @param {DeviceOrientationEvent} event - The device orientation event.\n   */\n  _handleOrientation(event) {\n    const { beta, gamma } = event;\n    if (beta !== null && gamma !== null) {\n      this.velocity.x = gamma * 0.0005;\n      this.velocity.y = beta * 0.0005;\n    }\n  }\n\n  /**\n   * Attaches mouse interaction events for the tag cloud.\n   * @private\n   */\n  _attachInteraction() {\n    if (this.settings.enableClick) {\n      this.canvas.addEventListener(\"click\", this._onCanvasClick.bind(this));\n    }\n    this.canvas.addEventListener(\n      \"mousemove\",\n      this._onCanvasMouseMove.bind(this)\n    );\n    this.canvas.addEventListener(\n      \"mouseleave\",\n      this._onCanvasMouseLeave.bind(this)\n    );\n  }\n\n  _onCanvasClick(e) {\n    const pt = this._getPointer(e);\n    const tag = this._getTagAt(pt);\n\n    if (tag && this.settings.clickEffect) {\n      tag._scale = this.settings.hoverScale * 1.1;\n      setTimeout(() => {\n        tag._scale = this.settings.hoverScale;\n      }, 200);\n    }\n\n    const dx = pt.x - this.center.x;\n    const dy = pt.y - this.center.y;\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    const velocityMagnitude =\n      this.settings.maxVelocity > 0\n        ? this.settings.maxVelocity * 0.2\n        : this.settings.speed * 0.1;\n\n    this.velocity.x =\n      -(dy / distance) * velocityMagnitude || this.settings.speed * 0.1;\n    this.velocity.y =\n      -(dx / distance) * velocityMagnitude || this.settings.speed * 0.1;\n  }\n\n  _onCanvasMouseMove(e) {\n    const pt = this._getPointer(e);\n    const tag = this._getTagAt(pt);\n\n    if (tag && tag.index !== this._hoveredIndex) {\n      if (this._hoveredIndex !== null) {\n        const prev = this.tags[this._hoveredIndex];\n        prev._scale = 1;\n        prev._color = prev.color;\n        prev._opacity = 1;\n        this._events.tagLeave.forEach((cb) => cb(prev));\n      }\n      this._hoveredIndex = tag.index;\n      if (this.settings.hoverEffect) {\n        tag._scale = this.settings.hoverScale;\n        tag._color = this.settings.hoverColor || tag.color;\n        tag._opacity = this.settings.hoverOpacity;\n      }\n      this._events.tagHover.forEach((cb) => cb(tag));\n    } else if (!tag && this._hoveredIndex !== null) {\n      const prev = this.tags[this._hoveredIndex];\n      prev._scale = 1;\n      prev._color = prev.color;\n      prev._opacity = 1;\n      this._events.tagLeave.forEach((cb) => cb(prev));\n      this._hoveredIndex = null;\n    }\n  }\n\n  _onCanvasMouseLeave() {\n    if (this._hoveredIndex !== null) {\n      const prev = this.tags[this._hoveredIndex];\n      prev._scale = 1;\n      prev._color = prev.color;\n      prev._opacity = 1;\n      this._events.tagLeave.forEach((cb) => cb(prev));\n      this._hoveredIndex = null;\n    }\n  }\n\n  _getPointer(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    return { x: e.clientX - rect.left, y: e.clientY - rect.top };\n  }\n\n  _getTagAt(pt) {\n    for (let i = this.tags.length - 1; i >= 0; i--) {\n      const tag = this.tags[i];\n      const s = tag._screen;\n      if (!s) continue;\n      const dx = pt.x - s.x;\n      const dy = pt.y - s.y;\n      if (Math.abs(dx) <= s.width / 2 && Math.abs(dy) <= s.height / 2)\n        return tag;\n    }\n    return null;\n  }\n\n  _positionTags() {\n    if (!this.tags.length) return;\n\n    const R = this.settings.radius;\n    const N = this.tags.length;\n    const shape = this.settings.shape || DEFAULT_SHAPE;\n\n    switch (shape) {\n      case \"cube\":\n        const side = Math.ceil(Math.cbrt(N));\n        this.tags.forEach((tag, i) => {\n          const x = (i % side) - side / 2 + 0.5;\n          const y = (Math.floor(i / side) % side) - side / 2 + 0.5;\n          const z = Math.floor(i / (side * side)) - side / 2 + 0.5;\n          tag.x = x * (R / side) * 2;\n          tag.y = y * (R / side) * 2;\n          tag.z = z * (R / side) * 2;\n        });\n        break;\n      case \"plane\":\n        const rows = Math.ceil(Math.sqrt(N));\n        const cols = Math.ceil(N / rows);\n        const cellWidth = (2 * R) / cols;\n        const cellHeight = (2 * R) / rows;\n        this.tags.forEach((tag, i) => {\n          const row = Math.floor(i / cols);\n          const col = i % cols;\n\n          tag.x = col * cellWidth - R + cellWidth / 2;\n          tag.y = row * cellHeight - R + cellHeight / 2;\n          tag.z = 0;\n        });\n        break;\n      case \"pyramid\":\n        const levels = Math.ceil(Math.sqrt(N));\n        let index = 0;\n        for (let level = 0; level < levels; level++) {\n          const levelSize = levels - level;\n          const y = (level / levels) * R * 2 - R;\n          for (let i = 0; i < levelSize && index < N; i++, index++) {\n            const angle = (i / levelSize) * 2 * Math.PI;\n            const radius = (R * (levels - level)) / levels;\n            this.tags[index].x = radius * Math.cos(angle);\n            this.tags[index].y = y;\n            this.tags[index].z = radius * Math.sin(angle);\n          }\n        }\n        break;\n      case \"helix\":\n        const turns = 2;\n        const spacing = (2 * R) / N;\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI * turns;\n          const height = -R + i * spacing;\n          tag.x = R * Math.cos(angle);\n          tag.y = height;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n      case \"ring\":\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI;\n          tag.x = R * Math.cos(angle);\n          tag.y = 0;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n      case \"verticalRing\":\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI;\n          tag.x = 0;\n          tag.y = R * Math.sin(angle);\n          tag.z = R * Math.cos(angle);\n        });\n        break;\n      case \"cylinder\":\n        const heightStep = (2 * R) / N;\n        const circumferenceTags = Math.ceil(Math.sqrt(N));\n\n        this.tags.forEach((tag, i) => {\n          const level = Math.floor(i / circumferenceTags);\n          const angle =\n            (i % circumferenceTags) * ((2 * Math.PI) / circumferenceTags);\n          const height = -R + level * heightStep;\n          tag.x = R * Math.cos(angle);\n          tag.y = height;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n      case \"sphere\":\n      default:\n        this.tags.forEach((tag, i) => {\n          const k = -1 + (2 * i) / (N - 1);\n          const phi = Math.acos(k);\n          const theta = Math.sqrt(N * Math.PI) * phi;\n          tag.x = R * Math.sin(phi) * Math.cos(theta);\n          tag.y = R * Math.sin(phi) * Math.sin(theta);\n          tag.z = R * Math.cos(phi);\n        });\n        break;\n    }\n  }\n\n  _draw() {\n    const { ctx, canvas, center } = this;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const sortedTags = [...this.tags]\n      .filter(\n        (tag) =>\n          tag &&\n          typeof tag.text === \"string\" &&\n          typeof tag.x === \"number\" &&\n          typeof tag.y === \"number\" &&\n          typeof tag.z === \"number\"\n      )\n      .sort((a, b) => b.z - a.z);\n\n    for (const tag of sortedTags) {\n      try {\n        const denominator = center.x * 2 + tag.z;\n        const scale = denominator > 0 ? (center.x * 2) / denominator : 1;\n\n        const x = isFinite(tag.x * scale + center.x)\n          ? tag.x * scale + center.x\n          : center.x;\n        const y = isFinite(tag.y * scale + center.y)\n          ? tag.y * scale + center.y\n          : center.y;\n        const fontSize = isFinite(\n          (tag.fontSize || 15) * scale * (tag._scale || 1)\n        )\n          ? (tag.fontSize || 15) * scale * (tag._scale || 1)\n          : 15;\n\n        const text = tag.text;\n\n        const opacity = tag._opacity !== undefined ? tag._opacity : 1;\n        ctx.globalAlpha = opacity;\n        ctx.fillStyle = tag._color || tag.color || \"#fff\";\n        ctx.font = `${this.settings.customFontWeight} ${fontSize}px ${this.settings.customFont}`;\n        const metrics = ctx.measureText(text);\n\n        tag._screen = {\n          x,\n          y,\n          width: metrics.width,\n          height: fontSize,\n        };\n        ctx.fillText(text, x - metrics.width / 2, y + fontSize / 2);\n      } catch (error) {\n        console.error(\"Error drawing tag:\", tag, error);\n      }\n    }\n  }\n\n  _animate() {\n    if (this.settings.paused) return;\n\n    if (this.settings.autoSpin) {\n      if (\n        this.settings.maxVelocity === 0 &&\n        this.velocity.x === 0 &&\n        this.velocity.y === 0\n      ) {\n        this.velocity.x = this.settings.speed * 0.1;\n        this.velocity.y = this.settings.speed * 0.1;\n      }\n    } else if (this.velocity.x === 0 && this.velocity.y === 0) {\n    }\n\n    if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n      if (this.settings.enableEasing) {\n        this.rotation.x +=\n          (this.velocity.x - this.rotation.x) * this.settings.easing;\n        this.rotation.y +=\n          (this.velocity.y - this.rotation.y) * this.settings.easing;\n      } else {\n        this.rotation.x += this.velocity.x;\n        this.rotation.y += this.velocity.y;\n      }\n\n      const shape = this.settings.shape || DEFAULT_SHAPE;\n      if (shape === \"ring\" || shape === \"helix\") {\n        this.rotation.x = 0;\n      } else if (shape === \"verticalRing\") {\n        this.rotation.y = 0;\n      }\n\n      const cosY = Math.cos(this.rotation.y),\n        sinY = Math.sin(this.rotation.y);\n      const cosX = Math.cos(this.rotation.x),\n        sinX = Math.sin(this.rotation.x);\n\n      this.tags.forEach((tag) => {\n        let { x, y, z } = tag;\n\n        let nx = x * cosY - z * sinY;\n        let nz = x * sinY + z * cosY;\n        let ny = y * cosX - nz * sinX;\n        nz = y * sinX + nz * cosX;\n        tag.x = nx;\n        tag.y = ny;\n        tag.z = nz;\n      });\n    }\n\n    this._draw();\n    this.animFrame = requestAnimationFrame(this._animate.bind(this));\n  }\n\n  /**\n   * Pauses the animation of the tag cloud.\n   */\n  pause() {\n    this.settings.paused = true;\n    if (this.animFrame) cancelAnimationFrame(this.animFrame);\n    this._events.pause?.forEach((cb) => cb());\n  }\n\n  /**\n   * Resumes the animation of the tag cloud.\n   */\n  resume() {\n    this.settings.paused = false;\n    this._animate();\n    this._events.resume?.forEach((cb) => cb());\n  }\n\n  /**\n   * Destroys the Orbity instance, removing all event listeners and clearing the canvas.\n   */\n  destroy() {\n    this.pause();\n    window.removeEventListener(\"resize\", this._resize);\n    this.canvas.removeEventListener(\"touchstart\", this._touchStartHandler);\n    this.canvas.removeEventListener(\"touchmove\", this._touchMoveHandler);\n    this.canvas.removeEventListener(\"touchend\", this._bindTouch);\n    this.canvas.removeEventListener(\"mousedown\", this._bindMouse);\n    this.canvas.removeEventListener(\"mousemove\", this._onCanvasMouseMove);\n    this.canvas.removeEventListener(\"mouseup\", this._bindMouse);\n    this.canvas.removeEventListener(\"mouseleave\", this._onCanvasMouseLeave);\n    this.canvas.removeEventListener(\"click\", this._onCanvasClick);\n    window.removeEventListener(\"deviceorientation\", this._orientationHandler);\n    if (this.canvas.parentNode) {\n      this.canvas.replaceWith(this.canvas.cloneNode(true));\n    }\n    this.tags = [];\n  }\n}\nexport default Orbity;\n"],"names":["DEFAULT_SHAPE","constructor","canvas","options","this","ctx","getContext","tags","settings","Object","assign","radius","speed","easing","enableEasing","paused","enableTouch","enableOrientation","maxVelocity","shape","enableDrag","enableClick","autoSpin","hoverEffect","clickEffect","hoverScale","hoverColor","hoverOpacity","customFont","customFontWeight","rotation","x","y","velocity","touch","active","animFrame","_events","tagClick","tagHover","tagLeave","_hoveredIndex","Math","min","max","_orientationHandler","_handleOrientation","bind","_touchStartHandler","_onTouchStart","_touchMoveHandler","_onTouchMove","_mouseMoveHandler","_onCanvasMouseMove","_mouseLeaveHandler","_onCanvasMouseLeave","_clickHandler","_onCanvasClick","_init","_throttle","func","limit","lastFunc","lastRan","args","context","clearTimeout","setTimeout","Date","now","apply","_resize","window","addEventListener","_bindTouch","_bindMouse","_bindOrientation","_attachInteraction","setAttribute","_positionTags","_animate","width","offsetWidth","height","offsetHeight","center","setTags","dataArray","map","data","i","angleX","random","PI","angleY","index","_screen","_scale","_color","color","_opacity","_draw","_getRandomAngle","addTag","tagData","_validateTag","push","length","removeTag","splice","updateTag","console","error","clearTags","updateOptions","newOptions","undefined","validShapes","includes","join","removeEventListener","pause","resume","text","test","_bindDragEvents","startEvent","moveEvent","endEvent","getPosition","isDragging","lastX","lastY","e","pos","dx","dy","preventDefault","passive","_applyDragEasing","touches","clientX","clientY","event","easeOut","abs","requestAnimationFrame","lastUpdate","gamma","beta","pt","_getPointer","tag","_getTagAt","distance","sqrt","velocityMagnitude","prev","forEach","cb","rect","getBoundingClientRect","left","top","s","R","N","side","ceil","cbrt","floor","z","rows","cols","cellWidth","cellHeight","row","col","levels","level","levelSize","angle","cos","sin","turns","spacing","heightStep","circumferenceTags","k","phi","acos","theta","clearRect","sortedTags","filter","sort","a","b","denominator","scale","isFinite","fontSize","opacity","globalAlpha","fillStyle","font","metrics","measureText","fillText","cosY","sinY","cosX","sinX","nx","nz","ny","cancelAnimationFrame","destroy","parentNode","replaceWith","cloneNode"],"mappings":"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"}