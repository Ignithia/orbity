{"version":3,"file":"orbity.min.js","sources":["../src/orbity.js"],"sourcesContent":["/* Orbity.js is inspired by tagcanvas.js \nlink to tagcanvas.js: https://www.goat1000.com/tagcanvas.php\nThanks to the original author for the inspiration! */\n\nconst DEFAULT_SHAPE = \"sphere\";\n\nclass Orbity {\n  /**\n   * Creates an instance of Orbity.\n   * @param {HTMLCanvasElement} canvas - The canvas element where the 3D tag cloud will be rendered.\n   * @param {Object} options - Configuration options for the tag cloud.\n   * @param {number} [options.radius=150] - Radius of the 3D sphere or other shapes.\n   * @param {number} [options.speed=0.002] - Speed of rotation.\n   * @param {number} [options.easing=0.05] - Easing factor for smooth rotation.\n   * @param {boolean} [options.paused=false] - Whether the animation starts paused.\n   * @param {boolean} [options.enableTouch=true] - Enable touch interaction.\n   * @param {boolean} [options.enableOrientation=false] - Enable device orientation interaction.\n   * @param {number} [options.maxVelocity=0.05] - Maximum velocity for rotation.\n   * @param {string} [options.shape=DEFAULT_SHAPE] - Shape of the tag cloud (e.g., \"sphere\", \"cube\", \"plane\", \"helix\", \"ring\", \"verticalRing\", \"cylinder\", \"pyramid\", \"torus\").\n   * @param {boolean} [options.enableDrag=true] - Enable drag interaction.\n   * @param {boolean} [options.enableClick=true] - Enable click interaction.\n   * @param {boolean} [options.hoverEffect=true] - Enable/disable hover effects.\n   * @param {boolean} [options.clickEffect=true] - Enable/disable click effects.\n   * @param {number} [options.hoverScale=1.2] - Scale factor for hover effect.\n   * @param {string} [options.hoverColor=\"#ff0\"] - Color change on hover.\n   * @param {number} [options.hoverOpacity=1.0] - Opacity change on hover.\n   * @param {string} [options.customFont=\"sans-serif\"] - Default font family.\n   * @param {string} [options.customFontWeight=\"normal\"] - Default font weight.\n   * @param {number} [options.majorRadius] - Major radius for the torus shape.\n   * @param {number} [options.minorRadius] - Minor radius for the torus shape.\n   */\n  constructor(canvas, options = {}) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.tags = [];\n    this.settings = Object.assign(\n      {\n        radius: 150,\n        speed: 1,\n        easing: 0.1,\n        enableEasing: true,\n        paused: false,\n        enableTouch: true,\n        enableOrientation: false,\n        maxVelocity: 0.5,\n        shape: DEFAULT_SHAPE,\n        enableDrag: true,\n        enableClick: true,\n        autoSpin: true,\n        hoverEffect: true,\n        clickEffect: true,\n        hoverScale: 1.2,\n        hoverColor: \"#ff0\",\n        hoverOpacity: 1.0,\n        customFont: \"sans-serif\",\n        customFontWeight: \"normal\",\n      },\n      options\n    );\n    this.rotation = { x: 0, y: 0 };\n    this.velocity = { x: 0, y: 0 };\n\n    if (this.settings.autoSpin) {\n      this.velocity.x = this.settings.speed * 0.1;\n      this.velocity.y = this.settings.speed * 0.1;\n    }\n\n    this.touch = { x: 0, y: 0, active: false };\n    this.animFrame = null;\n    this._events = { tagClick: [], tagHover: [], tagLeave: [] };\n    this._hoveredIndex = null;\n    this.undoStack = [];\n    this.redoStack = [];\n\n    this.settings.easing = Math.min(Math.max(this.settings.easing, 0.01), 0.5);\n    this.settings.speed = Math.min(Math.max(this.settings.speed, 0.1), 5);\n    this._orientationHandler = this._handleOrientation.bind(this);\n    this._touchStartHandler = this._onTouchStart.bind(this);\n    this._touchMoveHandler = this._onTouchMove.bind(this);\n    this._mouseMoveHandler = this._onCanvasMouseMove.bind(this);\n    this._mouseLeaveHandler = this._onCanvasMouseLeave.bind(this);\n    this._clickHandler = this._onCanvasClick.bind(this);\n    this._init();\n  }\n\n  /**\n   * Throttles a function to limit its execution rate.\n   * @private\n   * @param {Function} func - The function to throttle.\n   * @param {number} limit - The time limit in milliseconds.\n   * @returns {Function} The throttled function.\n   */\n  _throttle(func, limit) {\n    let lastFunc;\n    let lastRan;\n    return function (...args) {\n      const context = this;\n      if (!lastRan) {\n        func.apply(context, args);\n        lastRan = Date.now();\n      } else {\n        clearTimeout(lastFunc);\n        lastFunc = setTimeout(function () {\n          if (Date.now() - lastRan >= limit) {\n            func.apply(context, args);\n            lastRan = Date.now();\n          }\n        }, limit - (Date.now() - lastRan));\n      }\n    };\n  }\n\n  /**\n   * Initializes the Orbity instance by setting up the canvas, event listeners, and starting the animation.\n   * @private\n   */\n  _init() {\n    this._resize = this._throttle(this._resize.bind(this), 200);\n    this._onCanvasMouseMove = this._throttle(\n      this._onCanvasMouseMove.bind(this),\n      50\n    );\n    window.addEventListener(\"resize\", this._resize);\n    this._bindTouch();\n    this._bindMouse();\n    this._bindOrientation();\n    this._attachInteraction();\n    this.canvas.setAttribute(\"role\", \"img\");\n    this.canvas.setAttribute(\"aria-label\", \"3D tag cloud visualization\");\n    this._resize();\n    this._positionTags();\n    this._animate();\n  }\n\n  /**\n   * Resizes the canvas to match its container and recalculates the center and tag positions.\n   * @private\n   */\n  _resize() {\n    this.canvas.width = this.canvas.offsetWidth;\n    this.canvas.height = this.canvas.offsetHeight;\n    this.center = { x: this.canvas.width / 2, y: this.canvas.height / 2 };\n    this._positionTags();\n  }\n\n  /**\n   * Sets the tags to be displayed in the 3D tag cloud.\n   * @param {Array<Object>} dataArray - Array of tag data objects.\n   * Each object should have the following properties:\n   *   - text {string}: The text of the tag.\n   *   - color {string}: The color of the tag (e.g., \"#fff\").\n   *   - fontSize {number} (optional): The font size of the tag.\n   */\n  setTags(dataArray) {\n    this.tags = dataArray.map((data, i) => ({\n      ...data,\n      angleX: Math.random() * 2 * Math.PI,\n      angleY: Math.random() * Math.PI,\n      index: i,\n      _screen: {},\n      _scale: 1,\n      _color: data.color,\n      _opacity: 1,\n    }));\n    this._positionTags();\n    this._draw();\n  }\n\n  /**\n   * Generates a random angle for tag positioning.\n   * @private\n   * @returns {number} A random angle in radians.\n   */\n  _getRandomAngle() {\n    return Math.random() * 2 * Math.PI;\n  }\n\n  /**\n   * Adds a single tag to the 3D tag cloud and records the action for undo/redo.\n   * @param {Object} tagData - Data for the new tag.\n   */\n  addTag(tagData) {\n    if (!this._validateTag(tagData)) return;\n    const newTag = {\n      ...tagData,\n      angleX: this._getRandomAngle(),\n      angleY: this._getRandomAngle(),\n      index: this.tags.length,\n      _screen: {},\n      _scale: 1,\n      _color: tagData.color,\n      _opacity: 1,\n    };\n    this.tags.push(newTag);\n    this.undoStack.push({ action: \"add\", tag: newTag });\n    this.redoStack = [];\n    this._positionTags();\n  }\n\n  /**\n   * Removes a tag from the 3D tag cloud by its index and records the action for undo/redo.\n   * @param {number} index - Index of the tag to remove.\n   */\n  removeTag(index) {\n    if (index < 0 || index >= this.tags.length) return;\n    const removedTag = this.tags.splice(index, 1)[0];\n    this.undoStack.push({ action: \"remove\", tag: removedTag, index });\n    this.redoStack = [];\n    this._positionTags();\n  }\n\n  /**\n   * Updates the data of an existing tag and records the action for undo/redo.\n   * @param {number} index - Index of the tag to update.\n   * @param {Object} data - New data for the tag.\n   */\n  updateTag(index, data) {\n    if (!this.tags[index]) {\n      console.error(`Tag at index ${index} does not exist.`);\n      return;\n    }\n    const oldData = { ...this.tags[index] };\n    Object.assign(this.tags[index], data, {\n      _scale: 1,\n      _color: data.color || this.tags[index].color,\n      _opacity: 1,\n    });\n    this.undoStack.push({\n      action: \"update\",\n      oldData,\n      newData: { ...this.tags[index] },\n    });\n    this.redoStack = [];\n    this._positionTags();\n  }\n\n  /**\n   * Undoes the last tag-related action.\n   */\n  undo() {\n    if (this.undoStack.length === 0) return;\n    const lastAction = this.undoStack.pop();\n    this.redoStack.push(lastAction);\n\n    switch (lastAction.action) {\n      case \"add\":\n        this.tags.pop();\n        break;\n      case \"remove\":\n        this.tags.splice(lastAction.index, 0, lastAction.tag);\n        break;\n      case \"update\":\n        Object.assign(this.tags[lastAction.oldData.index], lastAction.oldData);\n        break;\n    }\n    this._positionTags();\n  }\n\n  /**\n   * Redoes the last undone action.\n   */\n  redo() {\n    if (this.redoStack.length === 0) return;\n    const lastAction = this.redoStack.pop();\n    this.undoStack.push(lastAction);\n\n    switch (lastAction.action) {\n      case \"add\":\n        this.tags.push(lastAction.tag);\n        break;\n      case \"remove\":\n        this.tags.splice(lastAction.index, 1);\n        break;\n      case \"update\":\n        Object.assign(this.tags[lastAction.newData.index], lastAction.newData);\n        break;\n    }\n    this._positionTags();\n  }\n\n  /**\n   * Clears all tags from the 3D tag cloud.\n   */\n  clearTags() {\n    this.tags = [];\n  }\n\n  /**\n   * Updates the configuration options for the Orbity instance.\n   * @param {Object} newOptions - New configuration options.\n   */\n  updateOptions(newOptions) {\n    this.settings = { ...this.settings, ...newOptions };\n\n    if (newOptions.easing !== undefined) {\n      if (typeof newOptions.easing !== \"number\") {\n        console.error(\"Invalid easing: must be a number\");\n        this.settings.easing = 0.1;\n      } else {\n        this.settings.easing = newOptions.easing;\n      }\n    }\n\n    if (newOptions.speed !== undefined) {\n      if (typeof newOptions.speed !== \"number\") {\n        console.error(\"Invalid speed: must be a \");\n        this.settings.speed = 1;\n      } else {\n        this.settings.speed = newOptions.speed;\n      }\n    }\n\n    if (newOptions.radius !== undefined) {\n      if (typeof newOptions.radius !== \"number\" || newOptions.radius <= 0) {\n        console.error(\"Invalid radius: must be a positive number.\");\n        this.settings.radius = 150;\n      }\n    }\n\n    if (newOptions.shape !== undefined) {\n      const validShapes = [\n        \"sphere\",\n        \"cube\",\n        \"plane\",\n        \"helix\",\n        \"ring\",\n        \"verticalRing\",\n        \"cylinder\",\n        \"pyramid\",\n        \"torus\",\n      ];\n      if (!validShapes.includes(newOptions.shape)) {\n        console.error(\n          `Invalid shape: must be one of ${validShapes.join(\", \")}.`\n        );\n        this.settings.shape = DEFAULT_SHAPE;\n      }\n    }\n\n    if (newOptions.maxVelocity !== undefined) {\n      if (\n        typeof newOptions.maxVelocity !== \"number\" ||\n        newOptions.maxVelocity < 0\n      ) {\n        console.error(\"Invalid maxVelocity: must be a non-negative number.\");\n        this.settings.maxVelocity = 0.5;\n      }\n    }\n\n    if (newOptions.radius !== undefined || newOptions.shape !== undefined) {\n      this._positionTags();\n    }\n\n    if (newOptions.enableTouch !== undefined) {\n      if (newOptions.enableTouch) {\n        this._bindTouch();\n      } else {\n        this.canvas.removeEventListener(\"touchstart\", this._touchStartHandler);\n        this.canvas.removeEventListener(\"touchmove\", this._touchMoveHandler);\n        this.canvas.removeEventListener(\"touchend\", this._bindTouch);\n      }\n    }\n\n    if (newOptions.enableOrientation !== undefined) {\n      if (newOptions.enableOrientation) {\n        this._bindOrientation();\n      } else {\n        window.removeEventListener(\n          \"deviceorientation\",\n          this._orientationHandler\n        );\n      }\n    }\n\n    if (newOptions.enableClick !== undefined) {\n      if (newOptions.enableClick) {\n        this.canvas.addEventListener(\"click\", this._clickHandler);\n      } else {\n        this.canvas.removeEventListener(\"click\", this._clickHandler);\n      }\n    }\n\n    if (newOptions.paused !== undefined) {\n      if (newOptions.paused) {\n        this.pause();\n      } else {\n        this.resume();\n      }\n    }\n  }\n\n  /**\n   * Validates the tag data.\n   * @private\n   * @param {Object} tagData - Data for the tag.\n   * @returns {boolean} True if the tag data is valid, false otherwise.\n   */\n  _validateTag(tagData) {\n    if (!tagData.text || typeof tagData.text !== \"string\") {\n      console.error(\"Invalid tag: 'text' is required and must be a string.\");\n      return false;\n    }\n    if (!tagData.color || !/^#[0-9A-F]{6}$/i.test(tagData.color)) {\n      console.error(\"Invalid tag: 'color' must be a valid hex color code.\");\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles drag-like interactions for rotating the tag cloud.\n   * @private\n   */\n  _bindDragEvents(startEvent, moveEvent, endEvent, getPosition) {\n    let isDragging = false;\n    let lastX = 0;\n    let lastY = 0;\n\n    const startHandler = (e) => {\n      isDragging = true;\n      const pos = getPosition(e);\n      lastX = pos.x;\n      lastY = pos.y;\n\n      if (this.velocity.x === 0 && this.velocity.y === 0) {\n        this.velocity.x = this.settings.speed * 0.1;\n        this.velocity.y = this.settings.speed * 0.1;\n      }\n    };\n\n    const moveHandler = (e) => {\n      if (!isDragging) return;\n\n      const pos = getPosition(e);\n      const dx = pos.x - lastX;\n      const dy = pos.y - lastY;\n\n      if (this.settings.maxVelocity > 0) {\n        this.velocity.x = Math.min(\n          Math.max(dy * this.settings.speed, -this.settings.maxVelocity),\n          this.settings.maxVelocity\n        );\n        this.velocity.y = Math.min(\n          Math.max(dx * this.settings.speed, -this.settings.maxVelocity),\n          this.settings.maxVelocity\n        );\n      } else {\n        this.velocity.x = dy * this.settings.speed * 0.1;\n        this.velocity.y = dx * this.settings.speed * 0.1;\n      }\n\n      lastX = pos.x;\n      lastY = pos.y;\n\n      if (e.preventDefault) e.preventDefault();\n    };\n\n    const endHandler = () => {\n      isDragging = false;\n      this._applyDragEasing();\n    };\n\n    const leaveHandler = () => {\n      if (isDragging) {\n        isDragging = false;\n        this._applyDragEasing();\n      }\n    };\n\n    this.canvas.addEventListener(startEvent, startHandler);\n    this.canvas.addEventListener(moveEvent, moveHandler, { passive: false });\n    this.canvas.addEventListener(endEvent, endHandler);\n    this.canvas.addEventListener(\"mouseleave\", leaveHandler);\n  }\n\n  /**\n   * Handles touch interactions for rotating the tag cloud.\n   * @private\n   */\n  _bindTouch() {\n    if (!this.settings.enableTouch) return;\n\n    this._bindDragEvents(\"touchstart\", \"touchmove\", \"touchend\", (e) => ({\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n    }));\n  }\n\n  /**\n   * Handles the touch start event to initiate touch interaction.\n   * @private\n   * @param {TouchEvent} event - The touch start event.\n   */\n  _onTouchStart(event) {\n    if (event.touches.length === 1) {\n      const touch = event.touches[0];\n      this.touch.x = touch.clientX;\n      this.touch.y = touch.clientY;\n      this.touch.active = true;\n    }\n  }\n\n  /**\n   * Handles the touch move event to update touch interaction.\n   * @private\n   * @param {TouchEvent} event - The touch move event.\n   */\n  _onTouchMove(event) {\n    if (event.touches.length === 1 && this.touch.active) {\n      const touch = event.touches[0];\n      const dx = touch.clientX - this.touch.x;\n      const dy = touch.clientY - this.touch.y;\n\n      if (this.settings.maxVelocity > 0) {\n        this.velocity.x = Math.min(\n          Math.max(dy * this.settings.speed, -this.settings.maxVelocity),\n          this.settings.maxVelocity\n        );\n        this.velocity.y = Math.min(\n          Math.max(dx * this.settings.speed, -this.settings.maxVelocity),\n          this.settings.maxVelocity\n        );\n      } else {\n        this.velocity.x = dy * this.settings.speed * 0.1;\n        this.velocity.y = dx * this.settings.speed * 0.1;\n      }\n\n      this.touch.x = touch.clientX;\n      this.touch.y = touch.clientY;\n\n      if (event.preventDefault) event.preventDefault();\n    }\n  }\n\n  /**\n   * Handles mouse interactions for rotating the tag cloud.\n   * @private\n   */\n  _bindMouse() {\n    if (!this.settings.enableDrag) return;\n\n    this._bindDragEvents(\"mousedown\", \"mousemove\", \"mouseup\", (e) => ({\n      x: e.clientX,\n      y: e.clientY,\n    }));\n\n    this.canvas.addEventListener(\"mouseleave\", () => {\n      this._applyDragEasing();\n    });\n  }\n\n  _applyDragEasing() {\n    const easingFactor = 0.97;\n    const stopThreshold = 0.005;\n\n    const easeOut = () => {\n      this.velocity.x *= easingFactor;\n      this.velocity.y *= easingFactor;\n\n      if (Math.abs(this.velocity.x) < stopThreshold) this.velocity.x = 0;\n      if (Math.abs(this.velocity.y) < stopThreshold) this.velocity.y = 0;\n\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n        requestAnimationFrame(easeOut);\n      }\n    };\n\n    easeOut();\n  }\n\n  /**\n   * Handles device orientation interactions for rotating the tag cloud.\n   * @private\n   */\n  _bindOrientation() {\n    if (!this.settings.enableOrientation) return;\n\n    let lastUpdate = 0;\n    const throttleDelay = 100;\n\n    const handleOrientation = (e) => {\n      const now = Date.now();\n      if (now - lastUpdate < throttleDelay) return;\n      lastUpdate = now;\n\n      const { gamma = 0, beta = 0 } = e;\n      this.velocity.x = gamma * 0.0005;\n      this.velocity.y = beta * 0.0005;\n    };\n\n    window.addEventListener(\"deviceorientation\", handleOrientation);\n  }\n\n  /**\n   * Handles device orientation events to update the rotation velocity.\n   * @private\n   * @param {DeviceOrientationEvent} event - The device orientation event.\n   */\n  _handleOrientation(event) {\n    const { beta, gamma } = event;\n    if (beta !== null && gamma !== null) {\n      this.velocity.x = gamma * 0.0005;\n      this.velocity.y = beta * 0.0005;\n    }\n  }\n\n  /**\n   * Attaches mouse interaction events for the tag cloud.\n   * @private\n   */\n  _attachInteraction() {\n    if (this.settings.enableClick) {\n      this.canvas.addEventListener(\"click\", this._onCanvasClick.bind(this));\n    }\n    this.canvas.addEventListener(\n      \"mousemove\",\n      this._onCanvasMouseMove.bind(this)\n    );\n    this.canvas.addEventListener(\n      \"mouseleave\",\n      this._onCanvasMouseLeave.bind(this)\n    );\n  }\n\n  _onCanvasClick(e) {\n    const pt = this._getPointer(e);\n    const tag = this._getTagAt(pt);\n\n    if (tag && this.settings.clickEffect) {\n      tag._scale = this.settings.hoverScale * 1.1;\n      setTimeout(() => {\n        tag._scale = this.settings.hoverScale;\n      }, 200);\n    }\n\n    const dx = pt.x - this.center.x;\n    const dy = pt.y - this.center.y;\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    const velocityMagnitude =\n      this.settings.maxVelocity > 0\n        ? this.settings.maxVelocity * 0.2\n        : this.settings.speed * 0.1;\n\n    this.velocity.x =\n      -(dy / distance) * velocityMagnitude || this.settings.speed * 0.1;\n    this.velocity.y =\n      -(dx / distance) * velocityMagnitude || this.settings.speed * 0.1;\n  }\n\n  _onCanvasMouseMove(e) {\n    const pt = this._getPointer(e);\n    const tag = this._getTagAt(pt);\n\n    if (tag && tag.index !== this._hoveredIndex) {\n      if (this._hoveredIndex !== null) {\n        const prev = this.tags[this._hoveredIndex];\n        prev._scale = 1;\n        prev._color = prev.color;\n        prev._opacity = 1;\n        this._events.tagLeave.forEach((cb) => cb(prev));\n      }\n      this._hoveredIndex = tag.index;\n      if (this.settings.hoverEffect) {\n        tag._scale = this.settings.hoverScale;\n        tag._color = this.settings.hoverColor || tag.color;\n        tag._opacity = this.settings.hoverOpacity;\n      }\n      this._events.tagHover.forEach((cb) => cb(tag));\n    } else if (!tag && this._hoveredIndex !== null) {\n      const prev = this.tags[this._hoveredIndex];\n      prev._scale = 1;\n      prev._color = prev.color;\n      prev._opacity = 1;\n      this._events.tagLeave.forEach((cb) => cb(prev));\n      this._hoveredIndex = null;\n    }\n  }\n\n  _onCanvasMouseLeave() {\n    if (this._hoveredIndex !== null) {\n      const prev = this.tags[this._hoveredIndex];\n      prev._scale = 1;\n      prev._color = prev.color;\n      prev._opacity = 1;\n      this._events.tagLeave.forEach((cb) => cb(prev));\n      this._hoveredIndex = null;\n    }\n  }\n\n  _getPointer(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    return { x: e.clientX - rect.left, y: e.clientY - rect.top };\n  }\n\n  _getTagAt(pt) {\n    for (let i = this.tags.length - 1; i >= 0; i--) {\n      const tag = this.tags[i];\n      const s = tag._screen;\n      if (!s) continue;\n      const dx = pt.x - s.x;\n      const dy = pt.y - s.y;\n      if (Math.abs(dx) <= s.width / 2 && Math.abs(dy) <= s.height / 2)\n        return tag;\n    }\n    return null;\n  }\n\n  _positionTags() {\n    if (!this.tags.length) return;\n\n    const R = this.settings.radius;\n    const N = this.tags.length;\n    const shape = this.settings.shape || DEFAULT_SHAPE;\n\n    switch (shape) {\n      case \"torus\":\n        const majorRadius = this.settings.majorRadius || R * 0.6; // Default major radius\n        const minorRadius = this.settings.minorRadius || R * 0.3; // Default minor radius\n        const majorSteps = Math.ceil(Math.sqrt(N)); // Steps around the major circle\n        const minorSteps = Math.ceil(N / majorSteps); // Steps around the minor circle\n\n        this.tags.forEach((tag, i) => {\n          const majorAngle = (i % majorSteps) * ((2 * Math.PI) / majorSteps);\n          const minorAngle =\n            Math.floor(i / majorSteps) * ((2 * Math.PI) / minorSteps);\n\n          const x =\n            (majorRadius + minorRadius * Math.cos(minorAngle)) *\n            Math.cos(majorAngle);\n          const y =\n            (majorRadius + minorRadius * Math.cos(minorAngle)) *\n            Math.sin(majorAngle);\n          const z = minorRadius * Math.sin(minorAngle);\n\n          tag.x = x;\n          tag.y = y;\n          tag.z = z;\n        });\n        break;\n\n      case \"cube\":\n        const side = Math.ceil(Math.cbrt(N));\n        const threshold = 0.1; // Threshold to avoid placing tags near the center\n        let validTags = 0;\n\n        this.tags.forEach((tag) => {\n          let x, y, z;\n\n          // Find the next valid position\n          do {\n            x = (validTags % side) - side / 2 + 0.5;\n            y = (Math.floor(validTags / side) % side) - side / 2 + 0.5;\n            z = Math.floor(validTags / (side * side)) - side / 2 + 0.5;\n            validTags++;\n          } while (\n            Math.abs(x) < threshold &&\n            Math.abs(y) < threshold &&\n            Math.abs(z) < threshold\n          );\n\n          tag.x = x * (R / side) * 2;\n          tag.y = y * (R / side) * 2;\n          tag.z = z * (R / side) * 2;\n        });\n        break;\n\n      case \"pyramid\":\n        const levels = Math.ceil(Math.sqrt(N));\n        let index = 0;\n        for (let level = 0; level < levels; level++) {\n          const levelSize = levels - level;\n          const y = (level / levels) * R * 2 - R;\n          for (let i = 0; i < levelSize && index < N; i++, index++) {\n            const angle = (i / levelSize) * 2 * Math.PI;\n            const radius = (R * (levels - level)) / levels;\n            this.tags[index].x = radius * Math.cos(angle);\n            this.tags[index].y = y;\n            this.tags[index].z = radius * Math.sin(angle);\n          }\n        }\n        break;\n      case \"helix\":\n        const turns = 2;\n        const spacing = (2 * R) / N;\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI * turns;\n          const height = -R + i * spacing;\n          tag.x = R * Math.cos(angle);\n          tag.y = height;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n      case \"ring\":\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI;\n          tag.x = R * Math.cos(angle);\n          tag.y = 0;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n      case \"verticalRing\":\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI;\n          tag.x = 0;\n          tag.y = R * Math.sin(angle);\n          tag.z = R * Math.cos(angle);\n        });\n        break;\n      case \"cylinder\":\n        const heightStep = (2 * R) / Math.ceil(N / 10); // Adjust height step for spacing\n        const circumferenceTags = Math.ceil(Math.sqrt(N));\n        this.tags.forEach((tag, i) => {\n          const level = Math.floor(i / circumferenceTags);\n          const angle =\n            (i % circumferenceTags) * ((2 * Math.PI) / circumferenceTags);\n          const height = -R + level * heightStep;\n          tag.x = R * Math.cos(angle);\n          tag.y = height;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n\n      case \"sphere\":\n      default:\n        const goldenRatio = (1 + Math.sqrt(5)) / 2;\n        const angleIncrement = Math.PI * 2 * goldenRatio;\n        this.tags.forEach((tag, i) => {\n          const t = i / N;\n          const inclination = Math.acos(1 - 2 * t);\n          const azimuth = angleIncrement * i;\n          tag.x = R * Math.sin(inclination) * Math.cos(azimuth);\n          tag.y = R * Math.sin(inclination) * Math.sin(azimuth);\n          tag.z = R * Math.cos(inclination);\n        });\n        break;\n    }\n  }\n\n  _draw() {\n    const { ctx, canvas, center } = this;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const sortedTags = [...this.tags]\n      .filter(\n        (tag) =>\n          tag &&\n          typeof tag.text === \"string\" &&\n          typeof tag.x === \"number\" &&\n          typeof tag.y === \"number\" &&\n          typeof tag.z === \"number\"\n      )\n      .sort((a, b) => b.z - a.z);\n\n    for (const tag of sortedTags) {\n      try {\n        const denominator = center.x * 2 + tag.z;\n        const scale = denominator > 0 ? (center.x * 2) / denominator : 1;\n\n        const x = isFinite(tag.x * scale + center.x)\n          ? tag.x * scale + center.x\n          : center.x;\n        const y = isFinite(tag.y * scale + center.y)\n          ? tag.y * scale + center.y\n          : center.y;\n        const fontSize = isFinite(\n          (tag.fontSize || 15) * scale * (tag._scale || 1)\n        )\n          ? (tag.fontSize || 15) * scale * (tag._scale || 1)\n          : 15;\n\n        const text = tag.text;\n\n        const maxZ = center.x * 2;\n        const minZ = -center.x * 2;\n        const normalizedZ = (tag.z - minZ) / (maxZ - minZ);\n        const opacity = Math.max(0.2, Math.min(1, normalizedZ));\n\n        ctx.globalAlpha = opacity;\n        ctx.fillStyle = tag._color || tag.color || \"#fff\";\n        ctx.font = `${this.settings.customFontWeight} ${fontSize}px ${this.settings.customFont}`;\n        const metrics = ctx.measureText(text);\n\n        tag._screen = {\n          x,\n          y,\n          width: metrics.width,\n          height: fontSize,\n        };\n        ctx.fillText(text, x - metrics.width / 2, y + fontSize / 2);\n      } catch (error) {\n        console.error(\"Error drawing tag:\", tag, error);\n      }\n    }\n  }\n\n  _animate() {\n    if (this.settings.paused) return;\n\n    if (this.settings.autoSpin) {\n      if (\n        this.settings.maxVelocity === 0 &&\n        this.velocity.x === 0 &&\n        this.velocity.y === 0\n      ) {\n        this.velocity.x = this.settings.speed * 0.1;\n        this.velocity.y = this.settings.speed * 0.1;\n      }\n    } else if (this.velocity.x === 0 && this.velocity.y === 0) {\n    }\n\n    if (this.velocity.x !== 0 || this.velocity.y !== 0) {\n      if (this.settings.enableEasing) {\n        this.rotation.x +=\n          (this.velocity.x - this.rotation.x) * this.settings.easing;\n        this.rotation.y +=\n          (this.velocity.y - this.rotation.y) * this.settings.easing;\n      } else {\n        this.rotation.x += this.velocity.x;\n        this.rotation.y += this.velocity.y;\n      }\n\n      const shape = this.settings.shape || DEFAULT_SHAPE;\n      if (shape === \"ring\" || shape === \"helix\") {\n        this.rotation.x = 0;\n      } else if (shape === \"verticalRing\") {\n        this.rotation.y = 0;\n      }\n\n      const cosY = Math.cos(this.rotation.y),\n        sinY = Math.sin(this.rotation.y);\n      const cosX = Math.cos(this.rotation.x),\n        sinX = Math.sin(this.rotation.x);\n\n      this.tags.forEach((tag) => {\n        let { x, y, z } = tag;\n\n        let nx = x * cosY - z * sinY;\n        let nz = x * sinY + z * cosY;\n        let ny = y * cosX - nz * sinX;\n        nz = y * sinX + nz * cosX;\n        tag.x = nx;\n        tag.y = ny;\n        tag.z = nz;\n      });\n    }\n\n    this._draw();\n    this.animFrame = requestAnimationFrame(this._animate.bind(this));\n  }\n\n  /**\n   * Pauses the animation of the tag cloud.\n   */\n  pause() {\n    this.settings.paused = true;\n    if (this.animFrame) cancelAnimationFrame(this.animFrame);\n    this._events.pause?.forEach((cb) => cb());\n  }\n\n  /**\n   * Resumes the animation of the tag cloud.\n   */\n  resume() {\n    this.settings.paused = false;\n    this._animate();\n    this._events.resume?.forEach((cb) => cb());\n  }\n\n  /**\n   * Destroys the Orbity instance, removing all event listeners and clearing the canvas.\n   */\n  destroy() {\n    this.pause();\n    window.removeEventListener(\"resize\", this._resize);\n    this.canvas.removeEventListener(\"touchstart\", this._touchStartHandler);\n    this.canvas.removeEventListener(\"touchmove\", this._touchMoveHandler);\n    this.canvas.removeEventListener(\"touchend\", this._bindTouch);\n    this.canvas.removeEventListener(\"mousedown\", this._bindMouse);\n    this.canvas.removeEventListener(\"mousemove\", this._onCanvasMouseMove);\n    this.canvas.removeEventListener(\"mouseup\", this._bindMouse);\n    this.canvas.removeEventListener(\"mouseleave\", this._onCanvasMouseLeave);\n    this.canvas.removeEventListener(\"click\", this._onCanvasClick);\n    window.removeEventListener(\"deviceorientation\", this._orientationHandler);\n    if (this.canvas.parentNode) {\n      this.canvas.replaceWith(this.canvas.cloneNode(true));\n    }\n    this.tags = [];\n  }\n}\nexport default Orbity;\n"],"names":["DEFAULT_SHAPE","constructor","canvas","options","this","ctx","getContext","tags","settings","Object","assign","radius","speed","easing","enableEasing","paused","enableTouch","enableOrientation","maxVelocity","shape","enableDrag","enableClick","autoSpin","hoverEffect","clickEffect","hoverScale","hoverColor","hoverOpacity","customFont","customFontWeight","rotation","x","y","velocity","touch","active","animFrame","_events","tagClick","tagHover","tagLeave","_hoveredIndex","undoStack","redoStack","Math","min","max","_orientationHandler","_handleOrientation","bind","_touchStartHandler","_onTouchStart","_touchMoveHandler","_onTouchMove","_mouseMoveHandler","_onCanvasMouseMove","_mouseLeaveHandler","_onCanvasMouseLeave","_clickHandler","_onCanvasClick","_init","_throttle","func","limit","lastFunc","lastRan","args","context","clearTimeout","setTimeout","Date","now","apply","_resize","window","addEventListener","_bindTouch","_bindMouse","_bindOrientation","_attachInteraction","setAttribute","_positionTags","_animate","width","offsetWidth","height","offsetHeight","center","setTags","dataArray","map","data","i","angleX","random","PI","angleY","index","_screen","_scale","_color","color","_opacity","_draw","_getRandomAngle","addTag","tagData","_validateTag","newTag","length","push","action","tag","removeTag","removedTag","splice","updateTag","console","error","oldData","newData","undo","lastAction","pop","redo","clearTags","updateOptions","newOptions","undefined","validShapes","includes","join","removeEventListener","pause","resume","text","test","_bindDragEvents","startEvent","moveEvent","endEvent","getPosition","isDragging","lastX","lastY","e","pos","dx","dy","preventDefault","passive","_applyDragEasing","touches","clientX","clientY","event","easeOut","abs","requestAnimationFrame","lastUpdate","gamma","beta","pt","_getPointer","_getTagAt","distance","sqrt","velocityMagnitude","prev","forEach","cb","rect","getBoundingClientRect","left","top","s","R","N","majorRadius","minorRadius","majorSteps","ceil","minorSteps","majorAngle","minorAngle","floor","cos","sin","z","side","cbrt","threshold","validTags","levels","level","levelSize","angle","turns","spacing","heightStep","circumferenceTags","goldenRatio","angleIncrement","t","inclination","acos","azimuth","clearRect","sortedTags","filter","sort","a","b","denominator","scale","isFinite","fontSize","maxZ","minZ","normalizedZ","opacity","globalAlpha","fillStyle","font","metrics","measureText","fillText","cosY","sinY","cosX","sinX","nx","nz","ny","cancelAnimationFrame","destroy","parentNode","replaceWith","cloneNode"],"mappings":"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"}