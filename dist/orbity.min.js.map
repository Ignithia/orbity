{"version":3,"file":"orbity.min.js","sources":["../src/orbity.js"],"sourcesContent":["/* Orbity.js is inspired by tagcanvas.js \nlink to tagcanvas.js: https://www.goat1000.com/tagcanvas.php\nThanks to the original author for the inspiration! */\n\nclass Orbity {\n  /**\n   * Creates an instance of Orbity.\n   * @param {HTMLCanvasElement} canvas - The canvas element where the 3D tag cloud will be rendered.\n   * @param {Object} options - Configuration options for the tag cloud.\n   * @param {number} [options.radius=150] - Radius of the 3D sphere or other shapes.\n   * @param {number} [options.speed=0.002] - Speed of rotation.\n   * @param {number} [options.easing=0.05] - Easing factor for smooth rotation.\n   * @param {boolean} [options.paused=false] - Whether the animation starts paused.\n   * @param {boolean} [options.enableTouch=true] - Enable touch interaction.\n   * @param {boolean} [options.enableOrientation=false] - Enable device orientation interaction.\n   * @param {number} [options.maxVelocity=0.05] - Maximum velocity for rotation.\n   * @param {string} [options.shape=\"sphere\"] - Shape of the tag cloud (e.g., \"sphere\", \"cube\", \"pyramid\").\n   */\n  constructor(canvas, options = {}) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.tags = [];\n    this.settings = Object.assign(\n      {\n        radius: 150,\n        speed: 1,\n        easing: 0.1,\n        paused: false,\n        enableTouch: true,\n        enableOrientation: false,\n        maxVelocity: 0.5,\n        shape: \"sphere\",\n      },\n      options\n    );\n    this.rotation = { x: 0, y: 0 };\n    this.velocity = { x: 0.01, y: 0.01 };\n    this.touch = { x: 0, y: 0, active: false };\n    this.animFrame = null;\n    this._events = { tagClick: [], tagHover: [], tagLeave: [] };\n    this._hoveredIndex = null;\n    this._init();\n  }\n\n  /**\n   * Initializes the Orbity instance by setting up the canvas, event listeners, and starting the animation.\n   * @private\n   */\n  _init() {\n    this._resize();\n    window.addEventListener(\"resize\", () => this._resize());\n    this._bindTouch();\n    this._bindMouse();\n    this._bindOrientation();\n    this._attachInteraction();\n    this.canvas.setAttribute(\"role\", \"img\");\n    this.canvas.setAttribute(\"aria-label\", \"3D tag cloud visualization\");\n    this._animate();\n  }\n\n  /**\n   * Resizes the canvas to match its container and recalculates the center and tag positions.\n   * @private\n   */\n  _resize() {\n    this.canvas.width = this.canvas.offsetWidth;\n    this.canvas.height = this.canvas.offsetHeight;\n    this.center = { x: this.canvas.width / 2, y: this.canvas.height / 2 };\n    this._positionTags();\n  }\n\n  /**\n   * Sets the tags to be displayed in the 3D tag cloud.\n   * @param {Array<Object>} dataArray - Array of tag data objects.\n   * Each object should have the following properties:\n   *   - text {string}: The text of the tag.\n   *   - color {string}: The color of the tag (e.g., \"#fff\").\n   *   - fontSize {number} (optional): The font size of the tag.\n   */\n  setTags(dataArray) {\n    this.tags = dataArray.map((data, i) => ({\n      ...data,\n      angleX: Math.random() * 2 * Math.PI,\n      angleY: Math.random() * Math.PI,\n      index: i,\n      _screen: {},\n    }));\n    this._positionTags();\n  }\n\n  /**\n   * Generates a random angle for tag positioning.\n   * @private\n   * @returns {number} A random angle in radians.\n   */\n  _getRandomAngle() {\n    return Math.random() * 2 * Math.PI;\n  }\n\n  /**\n   * Adds a single tag to the 3D tag cloud.\n   * @param {Object} tagData - Data for the new tag.\n   *   - text {string}: The text of the tag.\n   *   - color {string}: The color of the tag (e.g., \"#fff\").\n   *   - fontSize {number} (optional): The font size of the tag.\n   */\n  addTag(tagData) {\n    if (!this._validateTag(tagData)) return;\n    this.tags.push({\n      ...tagData,\n      angleX: this._getRandomAngle(),\n      angleY: this._getRandomAngle(),\n      index: this.tags.length,\n      _screen: {},\n    });\n    this._positionTags();\n  }\n\n  /**\n   * Removes a tag from the 3D tag cloud by its index.\n   * @param {number} index - Index of the tag to remove.\n   */\n  removeTag(index) {\n    this.tags.splice(index, 1);\n    this._positionTags();\n  }\n\n  /**\n   * Updates the data of an existing tag.\n   * @param {number} index - Index of the tag to update.\n   * @param {Object} data - New data for the tag.\n   */\n  updateTag(index, data) {\n    if (!this.tags[index]) {\n      console.error(`Tag at index ${index} does not exist.`);\n      return;\n    }\n    Object.assign(this.tags[index], data);\n    this._positionTags();\n  }\n\n  /**\n   * Clears all tags from the 3D tag cloud.\n   */\n  clearTags() {\n    this.tags = [];\n  }\n\n  /**\n   * Updates the configuration options for the Orbity instance.\n   * @param {Object} newOptions - New configuration options.\n   */\n  updateOptions(newOptions) {\n    this.settings = { ...this.settings, ...newOptions };\n\n    if (newOptions.radius !== undefined || newOptions.shape !== undefined) {\n      this._positionTags();\n    }\n\n    if (newOptions.enableTouch !== undefined) {\n      this._bindTouch();\n    }\n\n    if (newOptions.enableOrientation !== undefined) {\n      this._bindOrientation();\n    }\n\n    if (newOptions.paused !== undefined) {\n      if (newOptions.paused) {\n        this.pause();\n      } else {\n        this.resume();\n      }\n    }\n  }\n\n  /**\n   * Validates the tag data.\n   * @private\n   * @param {Object} tagData - Data for the tag.\n   * @returns {boolean} True if the tag data is valid, false otherwise.\n   */\n  _validateTag(tagData) {\n    if (!tagData.text || typeof tagData.text !== \"string\") {\n      console.error(\"Invalid tag: 'text' is required and must be a string.\");\n      return false;\n    }\n    if (!tagData.color || !/^#[0-9A-F]{6}$/i.test(tagData.color)) {\n      console.error(\"Invalid tag: 'color' must be a valid hex color code.\");\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles touch interactions for rotating the tag cloud.\n   * @private\n   */\n  _bindTouch() {\n    if (!this.settings.enableTouch) return;\n\n    let lastX = 0;\n    let lastY = 0;\n    let velocityX = 0;\n    let velocityY = 0;\n\n    this.canvas.addEventListener(\"touchstart\", (e) => {\n      this.touch.active = true;\n      lastX = e.touches[0].clientX;\n      lastY = e.touches[0].clientY;\n      velocityX = 0;\n      velocityY = 0;\n    });\n\n    this.canvas.addEventListener(\n      \"touchmove\",\n      (e) => {\n        if (!this.touch.active) return;\n\n        const dx = e.touches[0].clientX - lastX;\n        const dy = e.touches[0].clientY - lastY;\n\n        // Calculate velocity and clamp it to maxVelocity\n        velocityX = Math.min(\n          dx * this.settings.speed,\n          this.settings.maxVelocity\n        );\n        velocityY = Math.min(\n          dy * this.settings.speed,\n          this.settings.maxVelocity\n        );\n\n        this.velocity.x =\n          Math.sign(velocityY) *\n          Math.min(Math.abs(velocityY), this.settings.maxVelocity); // Invert Y-axis for natural rotation\n        this.velocity.y =\n          Math.sign(velocityX) *\n          Math.min(Math.abs(velocityX), this.settings.maxVelocity);\n\n        lastX = e.touches[0].clientX;\n        lastY = e.touches[0].clientY;\n\n        e.preventDefault();\n      },\n      { passive: false }\n    );\n\n    this.canvas.addEventListener(\"touchend\", () => {\n      this.touch.active = false;\n\n      // Continue rotation with the last velocity\n      this.velocity.x =\n        Math.sign(velocityY) *\n        Math.min(Math.abs(velocityY), this.settings.maxVelocity);\n      this.velocity.y =\n        Math.sign(velocityX) *\n        Math.min(Math.abs(velocityX), this.settings.maxVelocity);\n    });\n  }\n\n  /**\n   * Handles mouse interactions for rotating the tag cloud.\n   * @private\n   */\n  _bindMouse() {\n    let isDragging = false;\n    let lastX = 0;\n    let lastY = 0;\n    let velocityX = 0;\n    let velocityY = 0;\n\n    this.canvas.addEventListener(\"mousedown\", (e) => {\n      isDragging = true;\n      lastX = e.clientX;\n      lastY = e.clientY;\n      velocityX = 0;\n      velocityY = 0;\n    });\n\n    this.canvas.addEventListener(\"mousemove\", (e) => {\n      if (!isDragging) return;\n\n      const dx = e.clientX - lastX;\n      const dy = e.clientY - lastY;\n\n      // Calculate velocity and clamp it to maxVelocity\n      velocityX = Math.min(dx * this.settings.speed, this.settings.maxVelocity);\n      velocityY = Math.min(dy * this.settings.speed, this.settings.maxVelocity);\n\n      this.velocity.x =\n        Math.sign(velocityY) *\n        Math.min(Math.abs(velocityY), this.settings.maxVelocity); // Invert Y-axis for natural rotation\n      this.velocity.y =\n        Math.sign(velocityX) *\n        Math.min(Math.abs(velocityX), this.settings.maxVelocity);\n\n      lastX = e.clientX;\n      lastY = e.clientY;\n    });\n\n    this.canvas.addEventListener(\"mouseup\", () => {\n      isDragging = false;\n\n      // Continue rotation with the last velocity\n      this.velocity.x =\n        Math.sign(velocityY) *\n        Math.min(Math.abs(velocityY), this.settings.maxVelocity);\n      this.velocity.y =\n        Math.sign(velocityX) *\n        Math.min(Math.abs(velocityX), this.settings.maxVelocity);\n    });\n\n    this.canvas.addEventListener(\"mouseleave\", () => {\n      isDragging = false;\n    });\n  }\n\n  /**\n   * Handles device orientation interactions for rotating the tag cloud.\n   * @private\n   */\n  _bindOrientation() {\n    if (!this.settings.enableOrientation) return;\n\n    let lastUpdate = 0;\n    const throttleDelay = 100; // Update every 100ms\n\n    const handleOrientation = (e) => {\n      const now = Date.now();\n      if (now - lastUpdate < throttleDelay) return;\n      lastUpdate = now;\n\n      const { gamma = 0, beta = 0 } = e;\n      this.velocity.x = gamma * 0.0005;\n      this.velocity.y = beta * 0.0005;\n    };\n\n    window.addEventListener(\"deviceorientation\", handleOrientation);\n  }\n\n  /**\n   * Attaches mouse interaction events for the tag cloud.\n   * @private\n   */\n  _attachInteraction() {\n    this.canvas.addEventListener(\"click\", this._onCanvasClick.bind(this));\n    this.canvas.addEventListener(\n      \"mousemove\",\n      this._onCanvasMouseMove.bind(this)\n    );\n    this.canvas.addEventListener(\n      \"mouseleave\",\n      this._onCanvasMouseLeave.bind(this)\n    );\n  }\n\n  _onCanvasClick(e) {\n    const pt = this._getPointer(e);\n    const tag = this._getTagAt(pt);\n    if (tag) this._events.tagClick.forEach((cb) => cb(tag));\n  }\n\n  _onCanvasMouseMove(e) {\n    const pt = this._getPointer(e);\n    const tag = this._getTagAt(pt);\n    if (tag && tag.index !== this._hoveredIndex) {\n      if (this._hoveredIndex !== null) {\n        const prev = this.tags[this._hoveredIndex];\n        this._events.tagLeave.forEach((cb) => cb(prev));\n      }\n      this._hoveredIndex = tag.index;\n      this._events.tagHover.forEach((cb) => cb(tag));\n    } else if (!tag && this._hoveredIndex !== null) {\n      const prev = this.tags[this._hoveredIndex];\n      this._events.tagLeave.forEach((cb) => cb(prev));\n      this._hoveredIndex = null;\n    }\n  }\n\n  _onCanvasMouseLeave() {\n    if (this._hoveredIndex !== null) {\n      const prev = this.tags[this._hoveredIndex];\n      this._events.tagLeave.forEach((cb) => cb(prev));\n      this._hoveredIndex = null;\n    }\n  }\n\n  _getPointer(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    return { x: e.clientX - rect.left, y: e.clientY - rect.top };\n  }\n\n  _getTagAt(pt) {\n    for (let i = this.tags.length - 1; i >= 0; i--) {\n      const tag = this.tags[i];\n      const s = tag._screen;\n      if (!s) continue;\n      const dx = pt.x - s.x;\n      const dy = pt.y - s.y;\n      if (Math.abs(dx) <= s.width / 2 && Math.abs(dy) <= s.height / 2)\n        return tag;\n    }\n    return null;\n  }\n\n  _positionTags() {\n    if (!this.tags.length) return;\n\n    const R = this.settings.radius;\n    const N = this.tags.length;\n    const shape = this.settings.shape || \"sphere\";\n\n    switch (shape) {\n      case \"cube\":\n        const side = Math.ceil(Math.cbrt(N));\n        this.tags.forEach((tag, i) => {\n          const x = (i % side) - side / 2 + 0.5;\n          const y = (Math.floor(i / side) % side) - side / 2 + 0.5;\n          const z = Math.floor(i / (side * side)) - side / 2 + 0.5;\n          tag.x = x * (R / side) * 2;\n          tag.y = y * (R / side) * 2;\n          tag.z = z * (R / side) * 2;\n        });\n        break;\n      case \"pyramid\":\n        let currentIndex = 0;\n        const levels = Math.ceil(Math.sqrt(N));\n        for (let level = 0; level < levels; level++) {\n          const levelSize = levels - level;\n          const height = (R / levels) * level;\n          const levelRadius = (R / levels) * (levels - level);\n\n          for (let i = 0; i < levelSize * levelSize && currentIndex < N; i++) {\n            const row = Math.floor(i / levelSize) - levelSize / 2 + 0.5;\n            const col = (i % levelSize) - levelSize / 2 + 0.5;\n\n            this.tags[currentIndex].x = (col * levelRadius) / levelSize;\n            this.tags[currentIndex].y = -height;\n            this.tags[currentIndex].z = (row * levelRadius) / levelSize;\n\n            currentIndex++;\n          }\n        }\n        break;\n      case \"helix\":\n        const turns = 2;\n        const spacing = (2 * R) / N;\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI * turns;\n          const height = -R + i * spacing;\n          tag.x = R * Math.cos(angle);\n          tag.y = height;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n      case \"ring\":\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI;\n          tag.x = R * Math.cos(angle);\n          tag.y = 0;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n      case \"verticalRing\":\n        this.tags.forEach((tag, i) => {\n          const angle = (i / N) * 2 * Math.PI;\n          tag.x = 0;\n          tag.y = R * Math.sin(angle);\n          tag.z = R * Math.cos(angle);\n        });\n        break;\n      case \"cylinder\":\n        const heightStep = (2 * R) / N;\n        const circumferenceTags = Math.ceil(Math.sqrt(N));\n        const verticalTags = Math.ceil(N / circumferenceTags);\n\n        this.tags.forEach((tag, i) => {\n          const level = Math.floor(i / circumferenceTags);\n          const angle =\n            (i % circumferenceTags) * ((2 * Math.PI) / circumferenceTags);\n          const height = -R + level * heightStep;\n\n          tag.x = R * Math.cos(angle);\n          tag.y = height;\n          tag.z = R * Math.sin(angle);\n        });\n        break;\n      case \"sphere\":\n      default:\n        this.tags.forEach((tag, i) => {\n          const k = -1 + (2 * i) / (N - 1);\n          const phi = Math.acos(k);\n          const theta = Math.sqrt(N * Math.PI) * phi;\n          tag.x = R * Math.sin(phi) * Math.cos(theta);\n          tag.y = R * Math.sin(phi) * Math.sin(theta);\n          tag.z = R * Math.cos(phi);\n        });\n        break;\n    }\n  }\n\n  _draw() {\n    const { ctx, canvas, center } = this;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const sortedTags = [...this.tags].sort((a, b) => b.z - a.z);\n\n    for (const tag of sortedTags) {\n      const scale = (center.x * 2) / (center.x * 2 + tag.z);\n      const x = tag.x * scale + center.x;\n      const y = tag.y * scale + center.y;\n      const fontSize = (tag.fontSize || 15) * scale;\n      const text = tag.text || \"\";\n\n      const minOpacity = 0.2;\n      const maxOpacity = 1.0;\n      const normalizedZ = (tag.z + center.x) / (2 * center.x);\n      let opacity = Math.max(\n        minOpacity,\n        maxOpacity - normalizedZ * (maxOpacity - minOpacity)\n      );\n      opacity = Math.round(opacity * 10) / 10;\n      ctx.globalAlpha = opacity;\n      ctx.fillStyle = tag.color || \"#fff\";\n      ctx.font = `${fontSize}px sans-serif`;\n      const metrics = ctx.measureText(text);\n      tag._screen = {\n        x,\n        y,\n        width: metrics.width,\n        height: fontSize,\n      };\n      ctx.fillText(text, x - metrics.width / 2, y + fontSize / 2);\n    }\n  }\n\n  _animate() {\n    if (this.settings.paused) return;\n\n    this.rotation.x +=\n      (this.velocity.x - this.rotation.x) * this.settings.easing;\n    this.rotation.y +=\n      (this.velocity.y - this.rotation.y) * this.settings.easing;\n\n    this.rotation.x += this.settings.speed;\n    this.rotation.y += this.settings.speed;\n\n    const shape = this.settings.shape || \"sphere\";\n    if (shape === \"ring\" || shape === \"helix\") {\n      this.rotation.x = 0;\n    } else if (shape === \"verticalRing\") {\n      this.rotation.y = 0;\n    }\n\n    const cosY = Math.cos(this.rotation.y),\n      sinY = Math.sin(this.rotation.y);\n    const cosX = Math.cos(this.rotation.x),\n      sinX = Math.sin(this.rotation.x);\n\n    this.tags.forEach((tag) => {\n      let { x, y, z } = tag;\n\n      let nx = x * cosY - z * sinY;\n      let nz = x * sinY + z * cosY;\n      let ny = y * cosX - nz * sinX;\n      nz = y * sinX + nz * cosX;\n\n      tag.x = nx;\n      tag.y = ny;\n      tag.z = nz;\n    });\n\n    this._draw();\n\n    this.animFrame = requestAnimationFrame(this._animate.bind(this));\n  }\n\n  /**\n   * Pauses the animation of the tag cloud.\n   */\n  pause() {\n    this.settings.paused = true;\n    if (this.animFrame) cancelAnimationFrame(this.animFrame);\n    this._events.pause?.forEach((cb) => cb());\n  }\n\n  /**\n   * Resumes the animation of the tag cloud.\n   */\n  resume() {\n    this.settings.paused = false;\n    this._animate();\n    this._events.resume?.forEach((cb) => cb());\n  }\n\n  /**\n   * Destroys the Orbity instance, removing all event listeners and clearing the canvas.\n   */\n  destroy() {\n    this.pause();\n    window.removeEventListener(\"resize\", this._resize);\n    this.canvas.removeEventListener(\"touchstart\", this._bindTouch);\n    this.canvas.removeEventListener(\"mousemove\", this._onCanvasMouseMove);\n    this.canvas.removeEventListener(\"mouseleave\", this._onCanvasMouseLeave);\n    this.canvas.removeEventListener(\"click\", this._onCanvasClick);\n    window.removeEventListener(\"deviceorientation\", this._bindOrientation);\n    this.canvas.replaceWith(this.canvas.cloneNode(true));\n    this.tags = [];\n  }\n}\nexport default Orbity;\n"],"names":["constructor","canvas","options","this","ctx","getContext","tags","settings","Object","assign","radius","speed","easing","paused","enableTouch","enableOrientation","maxVelocity","shape","rotation","x","y","velocity","touch","active","animFrame","_events","tagClick","tagHover","tagLeave","_hoveredIndex","_init","_resize","window","addEventListener","_bindTouch","_bindMouse","_bindOrientation","_attachInteraction","setAttribute","_animate","width","offsetWidth","height","offsetHeight","center","_positionTags","setTags","dataArray","map","data","i","angleX","Math","random","PI","angleY","index","_screen","_getRandomAngle","addTag","tagData","_validateTag","push","length","removeTag","splice","updateTag","console","error","clearTags","updateOptions","newOptions","undefined","pause","resume","text","color","test","lastX","lastY","velocityX","velocityY","e","touches","clientX","clientY","dx","dy","min","sign","abs","preventDefault","passive","isDragging","lastUpdate","now","Date","gamma","beta","_onCanvasClick","bind","_onCanvasMouseMove","_onCanvasMouseLeave","pt","_getPointer","tag","_getTagAt","forEach","cb","prev","rect","getBoundingClientRect","left","top","s","R","N","side","ceil","cbrt","floor","z","currentIndex","levels","sqrt","level","levelSize","levelRadius","row","col","turns","spacing","angle","cos","sin","heightStep","circumferenceTags","k","phi","acos","theta","_draw","clearRect","sortedTags","sort","a","b","scale","fontSize","minOpacity","maxOpacity","normalizedZ","opacity","max","round","globalAlpha","fillStyle","font","metrics","measureText","fillText","cosY","sinY","cosX","sinX","nx","nz","ny","requestAnimationFrame","cancelAnimationFrame","destroy","removeEventListener","replaceWith","cloneNode"],"mappings":"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"}