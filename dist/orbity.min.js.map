{"version":3,"file":"orbity.min.js","sources":["../src/orbity.js"],"sourcesContent":["/* Orbity.js is inspired by tagcanvas.js \r\nlink to tagcanvas.js: https://www.goat1000.com/tagcanvas.php\r\nThanks to the original author for the inspiration! */\r\n\r\nconst DEFAULT_SHAPE = \"sphere\";\r\n\r\n// Add default easing profiles\r\nconst EASING_PROFILES = {\r\n  Snappy: { easeIn: 0.2, friction: 0.9 },\r\n  Smooth: { easeIn: 0.1, friction: 0.95 },\r\n  Marathon: { easeIn: 0.05, friction: 0.99 },\r\n};\r\n\r\nclass Orbity {\r\n  /**\r\n   * Creates an instance of Orbity.\r\n   * @param {HTMLCanvasElement} canvas - The canvas element where the 3D tag cloud will be rendered.\r\n   * @param {Object} options - Configuration options for the tag cloud.\r\n   * @param {number} [options.radius=150] - Radius of the 3D sphere or other shapes.\r\n   * @param {number} [options.speed=0.002] - Speed of rotation.\r\n   * @param {number} [options.easing=0.05] - Easing factor for smooth rotation.\r\n   * @param {boolean} [options.paused=false] - Whether the animation starts paused.\r\n   * @param {boolean} [options.enableTouch=true] - Enable touch interaction.\r\n   * @param {boolean} [options.enableOrientation=false] - Enable device orientation interaction.\r\n   * @param {number} [options.maxVelocity=0.05] - Maximum velocity for rotation.\r\n   * @param {string} [options.shape=DEFAULT_SHAPE] - Shape of the tag cloud (e.g., \"sphere\", \"cube\", \"plane\", \"helix\", \"ring\", \"verticalRing\", \"cylinder\", \"pyramid\", \"torus\").\r\n   * @param {boolean} [options.enableDrag=true] - Enable drag interaction.\r\n   * @param {boolean} [options.enableClick=true] - Enable click interaction.\r\n   * @param {boolean} [options.hoverEffect=true] - Enable/disable hover effects.\r\n   * @param {boolean} [options.clickEffect=true] - Enable/disable click effects.\r\n   * @param {number} [options.hoverScale=1.2] - Scale factor for hover effect.\r\n   * @param {string} [options.hoverColor=\"#ff0\"] - Color change on hover.\r\n   * @param {number} [options.hoverOpacity=1.0] - Opacity change on hover.\r\n   * @param {string} [options.customFont=\"sans-serif\"] - Default font family.\r\n   * @param {string} [options.customFontWeight=\"normal\"] - Default font weight.\r\n   * @param {number} [options.majorRadius] - Major radius for the torus shape.\r\n   * @param {number} [options.minorRadius] - Minor radius for the torus shape.\r\n   */\r\n  constructor(canvas, options = {}) {\r\n    this.canvas = canvas;\r\n    this.ctx = canvas.getContext(\"2d\");\r\n    this.tags = [];\r\n    this.settings = Object.assign(\r\n      {\r\n        radius: 150,\r\n        speed: 1,\r\n        easing: 0.1,\r\n        enableEasing: true,\r\n        paused: false,\r\n        enableTouch: true,\r\n        enableOrientation: false,\r\n        maxVelocity: 0.5,\r\n        shape: DEFAULT_SHAPE,\r\n        enableDrag: true,\r\n        enableClick: true,\r\n        autoSpin: true,\r\n        hoverEffect: true,\r\n        clickEffect: true,\r\n        hoverScale: 1.2,\r\n        hoverColor: \"#ff0\",\r\n        hoverOpacity: 1.0,\r\n        customFont: \"sans-serif\",\r\n        customFontWeight: \"normal\",\r\n        easingProfile: \"Smooth\",\r\n        customEaseIn: 0.1,\r\n        customFriction: 0.95,\r\n        autoEasing: true,\r\n        minVelocityThreshold: 0.005,\r\n      },\r\n      options\r\n    );\r\n    this.rotation = { x: 0, y: 0 };\r\n    this.velocity = { x: 0, y: 0 };\r\n\r\n    if (this.settings.autoSpin) {\r\n      this.velocity.x = this.settings.speed * 0.1;\r\n      this.velocity.y = this.settings.speed * 0.1;\r\n    }\r\n\r\n    this.touch = { x: 0, y: 0, active: false };\r\n    this.animFrame = null;\r\n    this._events = { tagClick: [], tagHover: [], tagLeave: [] };\r\n    this._hoveredIndex = null;\r\n    this.undoStack = [];\r\n    this.redoStack = [];\r\n\r\n    this.settings.easing = Math.min(Math.max(this.settings.easing, 0.01), 0.5);\r\n    this.settings.speed = Math.min(Math.max(this.settings.speed, 0.1), 5);\r\n    this._orientationHandler = this._handleOrientation.bind(this);\r\n    this._touchStartHandler = this._onTouchStart.bind(this);\r\n    this._touchMoveHandler = this._onTouchMove.bind(this);\r\n    this._mouseMoveHandler = this._onCanvasMouseMove.bind(this);\r\n    this._mouseLeaveHandler = this._onCanvasMouseLeave.bind(this);\r\n    this._clickHandler = this._onCanvasClick.bind(this);\r\n    this._init();\r\n  }\r\n\r\n  /**\r\n   * Throttles a function to limit its execution rate.\r\n   * @private\r\n   * @param {Function} func - The function to throttle.\r\n   * @param {number} limit - The time limit in milliseconds.\r\n   * @returns {Function} The throttled function.\r\n   */\r\n  _throttle(func, limit) {\r\n    let lastFunc;\r\n    let lastRan;\r\n    return function (...args) {\r\n      const context = this;\r\n      if (!lastRan) {\r\n        func.apply(context, args);\r\n        lastRan = Date.now();\r\n      } else {\r\n        clearTimeout(lastFunc);\r\n        lastFunc = setTimeout(function () {\r\n          if (Date.now() - lastRan >= limit) {\r\n            func.apply(context, args);\r\n            lastRan = Date.now();\r\n          }\r\n        }, limit - (Date.now() - lastRan));\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initializes the Orbity instance by setting up the canvas, event listeners, and starting the animation.\r\n   * @private\r\n   */\r\n  _init() {\r\n    this._resize = this._throttle(this._resize.bind(this), 200);\r\n    this._onCanvasMouseMove = this._throttle(\r\n      this._onCanvasMouseMove.bind(this),\r\n      50\r\n    );\r\n    window.addEventListener(\"resize\", this._resize);\r\n    this._bindTouch();\r\n    this._bindMouse();\r\n    this._bindOrientation();\r\n    this._attachInteraction();\r\n    this.canvas.setAttribute(\"role\", \"img\");\r\n    this.canvas.setAttribute(\"aria-label\", \"3D tag cloud visualization\");\r\n    this._resize();\r\n    this._positionTags();\r\n    this._animate();\r\n  }\r\n\r\n  /**\r\n   * Resizes the canvas to match its container and recalculates the center and tag positions.\r\n   * @private\r\n   */\r\n  _resize() {\r\n    this.canvas.width = this.canvas.offsetWidth;\r\n    this.canvas.height = this.canvas.offsetHeight;\r\n    this.center = { x: this.canvas.width / 2, y: this.canvas.height / 2 };\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Sets the tags to be displayed in the 3D tag cloud.\r\n   * @param {Array<Object>} dataArray - Array of tag data objects.\r\n   * Each object should have the following properties:\r\n   *   - text {string}: The text of the tag.\r\n   *   - color {string}: The color of the tag (e.g., \"#fff\").\r\n   *   - fontSize {number} (optional): The font size of the tag.\r\n   */\r\n  setTags(dataArray) {\r\n    this.tags = dataArray.map((data, i) => ({\r\n      ...data,\r\n      angleX: Math.random() * 2 * Math.PI,\r\n      angleY: Math.random() * Math.PI,\r\n      index: i,\r\n      _screen: {},\r\n      _scale: 1,\r\n      _color: data.color,\r\n      _opacity: 1,\r\n    }));\r\n    this._positionTags();\r\n    this._draw();\r\n  }\r\n\r\n  /**\r\n   * Generates a random angle for tag positioning.\r\n   * @private\r\n   * @returns {number} A random angle in radians.\r\n   */\r\n  _getRandomAngle() {\r\n    return Math.random() * 2 * Math.PI;\r\n  }\r\n\r\n  /**\r\n   * Adds a single tag to the 3D tag cloud and records the action for undo/redo.\r\n   * @param {Object} tagData - Data for the new tag.\r\n   */\r\n  addTag(tagData) {\r\n    if (!this._validateTag(tagData)) return;\r\n    const newTag = {\r\n      ...tagData,\r\n      angleX: this._getRandomAngle(),\r\n      angleY: this._getRandomAngle(),\r\n      index: this.tags.length,\r\n      _screen: {},\r\n      _scale: 1,\r\n      _color: tagData.color,\r\n      _opacity: 1,\r\n    };\r\n    this.tags.push(newTag);\r\n    this.undoStack.push({ action: \"add\", tag: newTag });\r\n    this.redoStack = [];\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Removes a tag from the 3D tag cloud by its index and records the action for undo/redo.\r\n   * @param {number} index - Index of the tag to remove.\r\n   */\r\n  removeTag(index) {\r\n    if (index < 0 || index >= this.tags.length) return;\r\n    const removedTag = this.tags.splice(index, 1)[0];\r\n    this.undoStack.push({ action: \"remove\", tag: removedTag, index });\r\n    this.redoStack = [];\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Updates the data of an existing tag and records the action for undo/redo.\r\n   * @param {number} index - Index of the tag to update.\r\n   * @param {Object} data - New data for the tag.\r\n   */\r\n  updateTag(index, data) {\r\n    if (!this.tags[index]) {\r\n      console.error(`Tag at index ${index} does not exist.`);\r\n      return;\r\n    }\r\n    const oldData = { ...this.tags[index] };\r\n    Object.assign(this.tags[index], data, {\r\n      _scale: 1,\r\n      _color: data.color || this.tags[index].color,\r\n      _opacity: 1,\r\n    });\r\n    this.undoStack.push({\r\n      action: \"update\",\r\n      oldData,\r\n      newData: { ...this.tags[index] },\r\n    });\r\n    this.redoStack = [];\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Undoes the last tag-related action.\r\n   */\r\n  undo() {\r\n    if (this.undoStack.length === 0) return;\r\n    const lastAction = this.undoStack.pop();\r\n    this.redoStack.push(lastAction);\r\n\r\n    switch (lastAction.action) {\r\n      case \"add\":\r\n        this.tags.pop();\r\n        break;\r\n      case \"remove\":\r\n        this.tags.splice(lastAction.index, 0, lastAction.tag);\r\n        break;\r\n      case \"update\":\r\n        Object.assign(this.tags[lastAction.oldData.index], lastAction.oldData);\r\n        break;\r\n    }\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Redoes the last undone action.\r\n   */\r\n  redo() {\r\n    if (this.redoStack.length === 0) return;\r\n    const lastAction = this.redoStack.pop();\r\n    this.undoStack.push(lastAction);\r\n\r\n    switch (lastAction.action) {\r\n      case \"add\":\r\n        this.tags.push(lastAction.tag);\r\n        break;\r\n      case \"remove\":\r\n        this.tags.splice(lastAction.index, 1);\r\n        break;\r\n      case \"update\":\r\n        Object.assign(this.tags[lastAction.newData.index], lastAction.newData);\r\n        break;\r\n    }\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Clears all tags from the 3D tag cloud.\r\n   */\r\n  clearTags() {\r\n    this.tags = [];\r\n  }\r\n\r\n  /**\r\n   * Updates the configuration options for the Orbity instance.\r\n   * @param {Object} newOptions - New configuration options.\r\n   */\r\n  updateOptions(newOptions) {\r\n    this.settings = { ...this.settings, ...newOptions };\r\n\r\n    if (newOptions.easing !== undefined) {\r\n      if (typeof newOptions.easing !== \"number\") {\r\n        console.error(\"Invalid easing: must be a number\");\r\n        this.settings.easing = 0.1;\r\n      } else {\r\n        this.settings.easing = newOptions.easing;\r\n      }\r\n    }\r\n\r\n    if (newOptions.speed !== undefined) {\r\n      if (typeof newOptions.speed !== \"number\") {\r\n        console.error(\"Invalid speed: must be a \");\r\n        this.settings.speed = 1;\r\n      } else {\r\n        this.settings.speed = newOptions.speed;\r\n      }\r\n    }\r\n\r\n    if (newOptions.radius !== undefined) {\r\n      if (typeof newOptions.radius !== \"number\" || newOptions.radius <= 0) {\r\n        console.error(\"Invalid radius: must be a positive number.\");\r\n        this.settings.radius = 150;\r\n      }\r\n    }\r\n\r\n    if (newOptions.shape !== undefined) {\r\n      const validShapes = [\r\n        \"sphere\",\r\n        \"cube\",\r\n        \"plane\",\r\n        \"helix\",\r\n        \"ring\",\r\n        \"verticalRing\",\r\n        \"cylinder\",\r\n        \"pyramid\",\r\n        \"torus\",\r\n      ];\r\n      if (!validShapes.includes(newOptions.shape)) {\r\n        console.error(\r\n          `Invalid shape: must be one of ${validShapes.join(\", \")}.`\r\n        );\r\n        this.settings.shape = DEFAULT_SHAPE;\r\n      }\r\n    }\r\n\r\n    if (newOptions.maxVelocity !== undefined) {\r\n      if (\r\n        typeof newOptions.maxVelocity !== \"number\" ||\r\n        newOptions.maxVelocity < 0\r\n      ) {\r\n        console.error(\"Invalid maxVelocity: must be a non-negative number.\");\r\n        this.settings.maxVelocity = 0.5;\r\n      }\r\n    }\r\n\r\n    if (newOptions.radius !== undefined || newOptions.shape !== undefined) {\r\n      this._positionTags();\r\n    }\r\n\r\n    if (newOptions.enableTouch !== undefined) {\r\n      if (newOptions.enableTouch) {\r\n        this._bindTouch();\r\n      } else {\r\n        this.canvas.removeEventListener(\"touchstart\", this._touchStartHandler);\r\n        this.canvas.removeEventListener(\"touchmove\", this._touchMoveHandler);\r\n        this.canvas.removeEventListener(\"touchend\", this._bindTouch);\r\n      }\r\n    }\r\n\r\n    if (newOptions.enableOrientation !== undefined) {\r\n      if (newOptions.enableOrientation) {\r\n        this._bindOrientation();\r\n      } else {\r\n        window.removeEventListener(\r\n          \"deviceorientation\",\r\n          this._orientationHandler\r\n        );\r\n      }\r\n    }\r\n\r\n    if (newOptions.enableClick !== undefined) {\r\n      if (newOptions.enableClick) {\r\n        this.canvas.addEventListener(\"click\", this._clickHandler);\r\n      } else {\r\n        this.canvas.removeEventListener(\"click\", this._clickHandler);\r\n      }\r\n    }\r\n\r\n    if (newOptions.paused !== undefined) {\r\n      if (newOptions.paused) {\r\n        this.pause();\r\n      } else {\r\n        this.resume();\r\n      }\r\n    }\r\n\r\n    if (newOptions.easingProfile !== undefined) {\r\n      this.setEasingProfile(newOptions.easingProfile);\r\n    }\r\n    if (newOptions.autoEasing !== undefined) {\r\n      this.toggleAutoEasing(newOptions.autoEasing);\r\n    }\r\n    if (newOptions.customEaseIn !== undefined) {\r\n      this.settings.customEaseIn = newOptions.customEaseIn;\r\n    }\r\n    if (newOptions.customFriction !== undefined) {\r\n      this.settings.customFriction = newOptions.customFriction;\r\n    }\r\n    if (newOptions.minVelocityThreshold !== undefined) {\r\n      this.settings.minVelocityThreshold = newOptions.minVelocityThreshold;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates the tag data.\r\n   * @private\r\n   * @param {Object} tagData - Data for the tag.\r\n   * @returns {boolean} True if the tag data is valid, false otherwise.\r\n   */\r\n  _validateTag(tagData) {\r\n    if (!tagData.text || typeof tagData.text !== \"string\") {\r\n      console.error(\"Invalid tag: 'text' is required and must be a string.\");\r\n      return false;\r\n    }\r\n    if (!tagData.color || !/^#[0-9A-F]{6}$/i.test(tagData.color)) {\r\n      console.error(\"Invalid tag: 'color' must be a valid hex color code.\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Handles drag-like interactions for rotating the tag cloud.\r\n   * @private\r\n   */\r\n  _bindDragEvents(startEvent, moveEvent, endEvent, getPosition) {\r\n    let isDragging = false;\r\n    let lastX = 0;\r\n    let lastY = 0;\r\n\r\n    const startHandler = (e) => {\r\n      isDragging = true;\r\n      const pos = getPosition(e);\r\n      lastX = pos.x;\r\n      lastY = pos.y;\r\n\r\n      if (this.velocity.x === 0 && this.velocity.y === 0) {\r\n        this.velocity.x = this.settings.speed * 0.1;\r\n        this.velocity.y = this.settings.speed * 0.1;\r\n      }\r\n    };\r\n\r\n    const moveHandler = (e) => {\r\n      if (!isDragging) return;\r\n\r\n      const pos = getPosition(e);\r\n      const dx = pos.x - lastX;\r\n      const dy = pos.y - lastY;\r\n\r\n      if (this.settings.maxVelocity > 0) {\r\n        this.velocity.x = Math.min(\r\n          Math.max(dy * this.settings.speed, -this.settings.maxVelocity),\r\n          this.settings.maxVelocity\r\n        );\r\n        this.velocity.y = Math.min(\r\n          Math.max(dx * this.settings.speed, -this.settings.maxVelocity),\r\n          this.settings.maxVelocity\r\n        );\r\n      } else {\r\n        this.velocity.x = dy * this.settings.speed * 0.1;\r\n        this.velocity.y = dx * this.settings.speed * 0.1;\r\n      }\r\n\r\n      lastX = pos.x;\r\n      lastY = pos.y;\r\n\r\n      if (e.preventDefault) e.preventDefault();\r\n    };\r\n\r\n    const endHandler = () => {\r\n      isDragging = false;\r\n      this._applyDragEasing();\r\n    };\r\n\r\n    const leaveHandler = () => {\r\n      if (isDragging) {\r\n        isDragging = false;\r\n        this._applyDragEasing();\r\n      }\r\n    };\r\n\r\n    this.canvas.addEventListener(startEvent, startHandler);\r\n    this.canvas.addEventListener(moveEvent, moveHandler, { passive: false });\r\n    this.canvas.addEventListener(endEvent, endHandler);\r\n    this.canvas.addEventListener(\"mouseleave\", leaveHandler);\r\n  }\r\n\r\n  /**\r\n   * Handles touch interactions for rotating the tag cloud.\r\n   * @private\r\n   */\r\n  _bindTouch() {\r\n    if (!this.settings.enableTouch) return;\r\n\r\n    this._bindDragEvents(\"touchstart\", \"touchmove\", \"touchend\", (e) => ({\r\n      x: e.touches[0].clientX,\r\n      y: e.touches[0].clientY,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Handles the touch start event to initiate touch interaction.\r\n   * @private\r\n   * @param {TouchEvent} event - The touch start event.\r\n   */\r\n  _onTouchStart(event) {\r\n    if (event.touches.length === 1) {\r\n      const touch = event.touches[0];\r\n      this.touch.x = touch.clientX;\r\n      this.touch.y = touch.clientY;\r\n      this.touch.active = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the touch move event to update touch interaction.\r\n   * @private\r\n   * @param {TouchEvent} event - The touch move event.\r\n   */\r\n  _onTouchMove(event) {\r\n    if (event.touches.length === 1 && this.touch.active) {\r\n      const touch = event.touches[0];\r\n      const dx = touch.clientX - this.touch.x;\r\n      const dy = touch.clientY - this.touch.y;\r\n\r\n      if (this.settings.maxVelocity > 0) {\r\n        this.velocity.x = Math.min(\r\n          Math.max(dy * this.settings.speed, -this.settings.maxVelocity),\r\n          this.settings.maxVelocity\r\n        );\r\n        this.velocity.y = Math.min(\r\n          Math.max(dx * this.settings.speed, -this.settings.maxVelocity),\r\n          this.settings.maxVelocity\r\n        );\r\n      } else {\r\n        this.velocity.x = dy * this.settings.speed * 0.1;\r\n        this.velocity.y = dx * this.settings.speed * 0.1;\r\n      }\r\n\r\n      this.touch.x = touch.clientX;\r\n      this.touch.y = touch.clientY;\r\n\r\n      if (event.preventDefault) event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles mouse interactions for rotating the tag cloud.\r\n   * @private\r\n   */\r\n  _bindMouse() {\r\n    if (!this.settings.enableDrag) return;\r\n\r\n    this._bindDragEvents(\"mousedown\", \"mousemove\", \"mouseup\", (e) => ({\r\n      x: e.clientX,\r\n      y: e.clientY,\r\n    }));\r\n\r\n    this.canvas.addEventListener(\"mouseleave\", () => {\r\n      this._applyDragEasing();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the easing profile for the rotation animation.\r\n   * @param {string} profileName - The name of the easing profile (e.g., \"Smooth\").\r\n   */\r\n  setEasingProfile(profileName) {\r\n    if (EASING_PROFILES[profileName]) {\r\n      this.settings.easingProfile = profileName;\r\n      const { easeIn, friction } = EASING_PROFILES[profileName];\r\n      this.settings.customEaseIn = easeIn;\r\n      this.settings.customFriction = friction;\r\n    } else {\r\n      console.error(`Invalid easing profile: ${profileName}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles auto-easing for the rotation animation.\r\n   * @param {boolean} enabled - Whether to enable or disable auto-easing.\r\n   */\r\n  toggleAutoEasing(enabled) {\r\n    this.settings.autoEasing = enabled;\r\n  }\r\n\r\n  _applyDragEasing() {\r\n    const { customFriction, minVelocityThreshold } = this.settings;\r\n\r\n    const easeOut = () => {\r\n      this.velocity.x *= customFriction;\r\n      this.velocity.y *= customFriction;\r\n\r\n      if (Math.abs(this.velocity.x) < minVelocityThreshold) this.velocity.x = 0;\r\n      if (Math.abs(this.velocity.y) < minVelocityThreshold) this.velocity.y = 0;\r\n\r\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\r\n        requestAnimationFrame(easeOut);\r\n      }\r\n    };\r\n\r\n    easeOut();\r\n  }\r\n\r\n  /**\r\n   * Handles device orientation interactions for rotating the tag cloud.\r\n   * @private\r\n   */\r\n  _bindOrientation() {\r\n    if (!this.settings.enableOrientation) return;\r\n\r\n    let lastUpdate = 0;\r\n    const throttleDelay = 100;\r\n\r\n    const handleOrientation = (e) => {\r\n      const now = Date.now();\r\n      if (now - lastUpdate < throttleDelay) return;\r\n      lastUpdate = now;\r\n\r\n      const { gamma = 0, beta = 0 } = e;\r\n      this.velocity.x = gamma * 0.0005;\r\n      this.velocity.y = beta * 0.0005;\r\n    };\r\n\r\n    window.addEventListener(\"deviceorientation\", handleOrientation);\r\n  }\r\n\r\n  /**\r\n   * Handles device orientation events to update the rotation velocity.\r\n   * @private\r\n   * @param {DeviceOrientationEvent} event - The device orientation event.\r\n   */\r\n  _handleOrientation(event) {\r\n    const { beta, gamma } = event;\r\n    if (beta !== null && gamma !== null) {\r\n      this.velocity.x = gamma * 0.0005;\r\n      this.velocity.y = beta * 0.0005;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attaches mouse interaction events for the tag cloud.\r\n   * @private\r\n   */\r\n  _attachInteraction() {\r\n    if (this.settings.enableClick) {\r\n      this.canvas.addEventListener(\"click\", this._onCanvasClick.bind(this));\r\n    }\r\n    this.canvas.addEventListener(\r\n      \"mousemove\",\r\n      this._onCanvasMouseMove.bind(this)\r\n    );\r\n    this.canvas.addEventListener(\r\n      \"mouseleave\",\r\n      this._onCanvasMouseLeave.bind(this)\r\n    );\r\n  }\r\n\r\n  _onCanvasClick(e) {\r\n    const pt = this._getPointer(e);\r\n    const tag = this._getTagAt(pt);\r\n\r\n    if (tag && this.settings.clickEffect) {\r\n      tag._scale = this.settings.hoverScale * 1.1;\r\n      setTimeout(() => {\r\n        tag._scale = this.settings.hoverScale;\r\n      }, 200);\r\n    }\r\n\r\n    const dx = pt.x - this.center.x;\r\n    const dy = pt.y - this.center.y;\r\n\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n    const velocityMagnitude =\r\n      this.settings.maxVelocity > 0\r\n        ? this.settings.maxVelocity * 0.2\r\n        : this.settings.speed * 0.1;\r\n\r\n    this.velocity.x =\r\n      -(dy / distance) * velocityMagnitude || this.settings.speed * 0.1;\r\n    this.velocity.y =\r\n      -(dx / distance) * velocityMagnitude || this.settings.speed * 0.1;\r\n  }\r\n\r\n  _onCanvasMouseMove(e) {\r\n    const pt = this._getPointer(e);\r\n    const tag = this._getTagAt(pt);\r\n\r\n    if (tag && tag.index !== this._hoveredIndex) {\r\n      if (this._hoveredIndex !== null) {\r\n        const prev = this.tags[this._hoveredIndex];\r\n        prev._scale = 1;\r\n        prev._color = prev.color;\r\n        prev._opacity = 1;\r\n        this._events.tagLeave.forEach((cb) => cb(prev));\r\n      }\r\n      this._hoveredIndex = tag.index;\r\n      if (this.settings.hoverEffect) {\r\n        tag._scale = this.settings.hoverScale;\r\n        tag._color = this.settings.hoverColor || tag.color;\r\n        tag._opacity = this.settings.hoverOpacity;\r\n      }\r\n      this._events.tagHover.forEach((cb) => cb(tag));\r\n    } else if (!tag && this._hoveredIndex !== null) {\r\n      const prev = this.tags[this._hoveredIndex];\r\n      prev._scale = 1;\r\n      prev._color = prev.color;\r\n      prev._opacity = 1;\r\n      this._events.tagLeave.forEach((cb) => cb(prev));\r\n      this._hoveredIndex = null;\r\n    }\r\n  }\r\n\r\n  _onCanvasMouseLeave() {\r\n    if (this._hoveredIndex !== null) {\r\n      const prev = this.tags[this._hoveredIndex];\r\n      prev._scale = 1;\r\n      prev._color = prev.color;\r\n      prev._opacity = 1;\r\n      this._events.tagLeave.forEach((cb) => cb(prev));\r\n      this._hoveredIndex = null;\r\n    }\r\n  }\r\n\r\n  _getPointer(e) {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    return { x: e.clientX - rect.left, y: e.clientY - rect.top };\r\n  }\r\n\r\n  _getTagAt(pt) {\r\n    for (let i = this.tags.length - 1; i >= 0; i--) {\r\n      const tag = this.tags[i];\r\n      const s = tag._screen;\r\n      if (!s) continue;\r\n      const dx = pt.x - s.x;\r\n      const dy = pt.y - s.y;\r\n      if (Math.abs(dx) <= s.width / 2 && Math.abs(dy) <= s.height / 2)\r\n        return tag;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _positionTags() {\r\n    if (!this.tags.length) return;\r\n\r\n    const R = this.settings.radius;\r\n    const N = this.tags.length;\r\n    const shape = this.settings.shape || DEFAULT_SHAPE;\r\n\r\n    switch (shape) {\r\n      case \"torus\":\r\n        const majorRadius = this.settings.majorRadius || R * 0.6;\r\n        const minorRadius = this.settings.minorRadius || R * 0.3;\r\n        const majorSteps = Math.ceil(Math.sqrt(N));\r\n        const minorSteps = Math.ceil(N / majorSteps);\r\n\r\n        this.tags.forEach((tag, i) => {\r\n          const majorAngle = (i % majorSteps) * ((2 * Math.PI) / majorSteps);\r\n          const minorAngle =\r\n            Math.floor(i / majorSteps) * ((2 * Math.PI) / minorSteps);\r\n\r\n          const x =\r\n            (majorRadius + minorRadius * Math.cos(minorAngle)) *\r\n            Math.cos(majorAngle);\r\n          const y =\r\n            (majorRadius + minorRadius * Math.cos(minorAngle)) *\r\n            Math.sin(majorAngle);\r\n          const z = minorRadius * Math.sin(minorAngle);\r\n\r\n          tag.x = x;\r\n          tag.y = y;\r\n          tag.z = z;\r\n        });\r\n        break;\r\n\r\n      case \"cube\":\r\n        const side = Math.ceil(Math.cbrt(N));\r\n        const threshold = 0.1; // Threshold to avoid placing tags near the center\r\n        let validTags = 0;\r\n\r\n        this.tags.forEach((tag) => {\r\n          let x, y, z;\r\n\r\n          // Find the next valid position\r\n          do {\r\n            x = (validTags % side) - side / 2 + 0.5;\r\n            y = (Math.floor(validTags / side) % side) - side / 2 + 0.5;\r\n            z = Math.floor(validTags / (side * side)) - side / 2 + 0.5;\r\n            validTags++;\r\n          } while (\r\n            Math.abs(x) < threshold &&\r\n            Math.abs(y) < threshold &&\r\n            Math.abs(z) < threshold\r\n          );\r\n\r\n          tag.x = x * (R / side) * 2;\r\n          tag.y = y * (R / side) * 2;\r\n          tag.z = z * (R / side) * 2;\r\n        });\r\n        break;\r\n\r\n      case \"pyramid\":\r\n        const levels = Math.ceil(Math.sqrt(N));\r\n        let index = 0;\r\n        for (let level = 0; level < levels; level++) {\r\n          const levelSize = levels - level;\r\n          const y = (level / levels) * R * 2 - R;\r\n          for (let i = 0; i < levelSize && index < N; i++, index++) {\r\n            const angle = (i / levelSize) * 2 * Math.PI;\r\n            const radius = (R * (levels - level)) / levels;\r\n            this.tags[index].x = radius * Math.cos(angle);\r\n            this.tags[index].y = y;\r\n            this.tags[index].z = radius * Math.sin(angle);\r\n          }\r\n        }\r\n        break;\r\n      case \"helix\":\r\n        const turns = 2;\r\n        const spacing = (2 * R) / N;\r\n        this.tags.forEach((tag, i) => {\r\n          const angle = (i / N) * 2 * Math.PI * turns;\r\n          const height = -R + i * spacing;\r\n          tag.x = R * Math.cos(angle);\r\n          tag.y = height;\r\n          tag.z = R * Math.sin(angle);\r\n        });\r\n        break;\r\n      case \"ring\":\r\n        this.tags.forEach((tag, i) => {\r\n          const angle = (i / N) * 2 * Math.PI;\r\n          tag.x = R * Math.cos(angle);\r\n          tag.y = 0;\r\n          tag.z = R * Math.sin(angle);\r\n        });\r\n        break;\r\n      case \"verticalRing\":\r\n        this.tags.forEach((tag, i) => {\r\n          const angle = (i / N) * 2 * Math.PI;\r\n          tag.x = 0;\r\n          tag.y = R * Math.sin(angle);\r\n          tag.z = R * Math.cos(angle);\r\n        });\r\n        break;\r\n      case \"cylinder\":\r\n        const heightStep = (2 * R) / Math.ceil(N / 10); // Adjust height step for spacing\r\n        const circumferenceTags = Math.ceil(Math.sqrt(N));\r\n        this.tags.forEach((tag, i) => {\r\n          const level = Math.floor(i / circumferenceTags);\r\n          const angle =\r\n            (i % circumferenceTags) * ((2 * Math.PI) / circumferenceTags);\r\n          const height = -R + level * heightStep;\r\n          tag.x = R * Math.cos(angle);\r\n          tag.y = height;\r\n          tag.z = R * Math.sin(angle);\r\n        });\r\n        break;\r\n\r\n      case \"sphere\":\r\n      default:\r\n        const goldenRatio = (1 + Math.sqrt(5)) / 2;\r\n        const angleIncrement = Math.PI * 2 * goldenRatio;\r\n        this.tags.forEach((tag, i) => {\r\n          const t = i / N;\r\n          const inclination = Math.acos(1 - 2 * t);\r\n          const azimuth = angleIncrement * i;\r\n          tag.x = R * Math.sin(inclination) * Math.cos(azimuth);\r\n          tag.y = R * Math.sin(inclination) * Math.sin(azimuth);\r\n          tag.z = R * Math.cos(inclination);\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  _draw() {\r\n    const { ctx, canvas, center } = this;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const sortedTags = [...this.tags]\r\n      .filter(\r\n        (tag) =>\r\n          tag &&\r\n          typeof tag.text === \"string\" &&\r\n          typeof tag.x === \"number\" &&\r\n          typeof tag.y === \"number\" &&\r\n          typeof tag.z === \"number\"\r\n      )\r\n      .sort((a, b) => b.z - a.z);\r\n\r\n    for (const tag of sortedTags) {\r\n      try {\r\n        const denominator = center.x * 2 + tag.z;\r\n        const scale = denominator > 0 ? (center.x * 2) / denominator : 1;\r\n\r\n        const x = isFinite(tag.x * scale + center.x)\r\n          ? tag.x * scale + center.x\r\n          : center.x;\r\n        const y = isFinite(tag.y * scale + center.y)\r\n          ? tag.y * scale + center.y\r\n          : center.y;\r\n        const fontSize = isFinite(\r\n          (tag.fontSize || 15) * scale * (tag._scale || 1)\r\n        )\r\n          ? (tag.fontSize || 15) * scale * (tag._scale || 1)\r\n          : 15;\r\n\r\n        const text = tag.text;\r\n\r\n        const maxZ = center.x * 2;\r\n        const minZ = -center.x * 2;\r\n        const normalizedZ = (tag.z - minZ) / (maxZ - minZ);\r\n        const opacity = Math.max(0.2, Math.min(1, normalizedZ));\r\n\r\n        ctx.globalAlpha = opacity;\r\n        ctx.fillStyle = tag._color || tag.color || \"#fff\";\r\n        ctx.font = `${this.settings.customFontWeight} ${fontSize}px ${this.settings.customFont}`;\r\n        const metrics = ctx.measureText(text);\r\n\r\n        tag._screen = {\r\n          x,\r\n          y,\r\n          width: metrics.width,\r\n          height: fontSize,\r\n        };\r\n        ctx.fillText(text, x - metrics.width / 2, y + fontSize / 2);\r\n      } catch (error) {\r\n        console.error(\"Error drawing tag:\", tag, error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Animates the rotation of the tag cloud.\r\n   * @private\r\n   */\r\n  _animate() {\r\n    if (this.settings.paused) return;\r\n\r\n    if (this.settings.autoSpin) {\r\n      const { customEaseIn, autoEasing } = this.settings;\r\n      if (autoEasing) {\r\n        this.velocity.x +=\r\n          (this.settings.speed * 0.1 - this.velocity.x) * customEaseIn;\r\n        this.velocity.y +=\r\n          (this.settings.speed * 0.1 - this.velocity.y) * customEaseIn;\r\n      } else {\r\n        this.velocity.x = this.settings.speed * 0.1;\r\n        this.velocity.y = this.settings.speed * 0.1;\r\n      }\r\n    }\r\n\r\n    if (this.velocity.x !== 0 || this.velocity.y !== 0) {\r\n      if (this.settings.autoEasing) {\r\n        this.rotation.x +=\r\n          (this.velocity.x - this.rotation.x) * this.settings.easing;\r\n        this.rotation.y +=\r\n          (this.velocity.y - this.rotation.y) * this.settings.easing;\r\n      } else {\r\n        this.rotation.x += this.velocity.x;\r\n        this.rotation.y += this.velocity.y;\r\n      }\r\n\r\n      const shape = this.settings.shape || DEFAULT_SHAPE;\r\n      if (shape === \"ring\" || shape === \"helix\") {\r\n        this.rotation.x = 0;\r\n      } else if (shape === \"verticalRing\") {\r\n        this.rotation.y = 0;\r\n      }\r\n\r\n      const cosY = Math.cos(this.rotation.y),\r\n        sinY = Math.sin(this.rotation.y);\r\n      const cosX = Math.cos(this.rotation.x),\r\n        sinX = Math.sin(this.rotation.x);\r\n\r\n      this.tags.forEach((tag) => {\r\n        let { x, y, z } = tag;\r\n\r\n        let nx = x * cosY - z * sinY;\r\n        let nz = x * sinY + z * cosY;\r\n        let ny = y * cosX - nz * sinX;\r\n        nz = y * sinX + nz * cosX;\r\n        tag.x = nx;\r\n        tag.y = ny;\r\n        tag.z = nz;\r\n      });\r\n    }\r\n\r\n    this._draw();\r\n    this.animFrame = requestAnimationFrame(this._animate.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Pauses the animation of the tag cloud.\r\n   */\r\n  pause() {\r\n    this.settings.paused = true;\r\n    if (this.animFrame) cancelAnimationFrame(this.animFrame);\r\n    this._events.pause?.forEach((cb) => cb());\r\n  }\r\n\r\n  /**\r\n   * Resumes the animation of the tag cloud.\r\n   */\r\n  resume() {\r\n    this.settings.paused = false;\r\n    this._animate();\r\n    this._events.resume?.forEach((cb) => cb());\r\n  }\r\n\r\n  /**\r\n   * Destroys the Orbity instance, removing all event listeners and clearing the canvas.\r\n   */\r\n  destroy() {\r\n    this.pause();\r\n    window.removeEventListener(\"resize\", this._resize);\r\n    this.canvas.removeEventListener(\"touchstart\", this._touchStartHandler);\r\n    this.canvas.removeEventListener(\"touchmove\", this._touchMoveHandler);\r\n    this.canvas.removeEventListener(\"touchend\", this._bindTouch);\r\n    this.canvas.removeEventListener(\"mousedown\", this._bindMouse);\r\n    this.canvas.removeEventListener(\"mousemove\", this._onCanvasMouseMove);\r\n    this.canvas.removeEventListener(\"mouseup\", this._bindMouse);\r\n    this.canvas.removeEventListener(\"mouseleave\", this._onCanvasMouseLeave);\r\n    this.canvas.removeEventListener(\"click\", this._onCanvasClick);\r\n    window.removeEventListener(\"deviceorientation\", this._orientationHandler);\r\n    if (this.canvas.parentNode) {\r\n      this.canvas.replaceWith(this.canvas.cloneNode(true));\r\n    }\r\n    this.tags = [];\r\n  }\r\n}\r\nexport default Orbity;\r\n"],"names":["DEFAULT_SHAPE","EASING_PROFILES","Snappy","easeIn","friction","Smooth","Marathon","constructor","canvas","options","this","ctx","getContext","tags","settings","Object","assign","radius","speed","easing","enableEasing","paused","enableTouch","enableOrientation","maxVelocity","shape","enableDrag","enableClick","autoSpin","hoverEffect","clickEffect","hoverScale","hoverColor","hoverOpacity","customFont","customFontWeight","easingProfile","customEaseIn","customFriction","autoEasing","minVelocityThreshold","rotation","x","y","velocity","touch","active","animFrame","_events","tagClick","tagHover","tagLeave","_hoveredIndex","undoStack","redoStack","Math","min","max","_orientationHandler","_handleOrientation","bind","_touchStartHandler","_onTouchStart","_touchMoveHandler","_onTouchMove","_mouseMoveHandler","_onCanvasMouseMove","_mouseLeaveHandler","_onCanvasMouseLeave","_clickHandler","_onCanvasClick","_init","_throttle","func","limit","lastFunc","lastRan","args","context","clearTimeout","setTimeout","Date","now","apply","_resize","window","addEventListener","_bindTouch","_bindMouse","_bindOrientation","_attachInteraction","setAttribute","_positionTags","_animate","width","offsetWidth","height","offsetHeight","center","setTags","dataArray","map","data","i","angleX","random","PI","angleY","index","_screen","_scale","_color","color","_opacity","_draw","_getRandomAngle","addTag","tagData","_validateTag","newTag","length","push","action","tag","removeTag","removedTag","splice","updateTag","console","error","oldData","newData","undo","lastAction","pop","redo","clearTags","updateOptions","newOptions","undefined","validShapes","includes","join","removeEventListener","pause","resume","setEasingProfile","toggleAutoEasing","text","test","_bindDragEvents","startEvent","moveEvent","endEvent","getPosition","isDragging","lastX","lastY","e","pos","dx","dy","preventDefault","passive","_applyDragEasing","touches","clientX","clientY","event","profileName","enabled","easeOut","abs","requestAnimationFrame","lastUpdate","gamma","beta","pt","_getPointer","_getTagAt","distance","sqrt","velocityMagnitude","prev","forEach","cb","rect","getBoundingClientRect","left","top","s","R","N","majorRadius","minorRadius","majorSteps","ceil","minorSteps","majorAngle","minorAngle","floor","cos","sin","z","side","cbrt","threshold","validTags","levels","level","levelSize","angle","turns","spacing","heightStep","circumferenceTags","goldenRatio","angleIncrement","t","inclination","acos","azimuth","clearRect","sortedTags","filter","sort","a","b","denominator","scale","isFinite","fontSize","maxZ","minZ","normalizedZ","opacity","globalAlpha","fillStyle","font","metrics","measureText","fillText","cosY","sinY","cosX","sinX","nx","nz","ny","cancelAnimationFrame","destroy","parentNode","replaceWith","cloneNode"],"mappings":"uOAIA,MAAMA,EAAgB,SAGhBC,EAAkB,CACtBC,OAAQ,CAAEC,OAAQ,GAAKC,SAAU,IACjCC,OAAQ,CAAEF,OAAQ,GAAKC,SAAU,KACjCE,SAAU,CAAEH,OAAQ,IAAMC,SAAU,aAGtC,MAyBE,WAAAG,CAAYC,EAAQC,EAAU,IAC5BC,KAAKF,OAASA,EACdE,KAAKC,IAAMH,EAAOI,WAAW,MAC7BF,KAAKG,KAAO,GACZH,KAAKI,SAAWC,OAAOC,OACrB,CACEC,OAAQ,IACRC,MAAO,EACPC,OAAQ,GACRC,cAAc,EACdC,QAAQ,EACRC,aAAa,EACbC,mBAAmB,EACnBC,YAAa,GACbC,MAAOzB,EACP0B,YAAY,EACZC,aAAa,EACbC,UAAU,EACVC,aAAa,EACbC,aAAa,EACbC,WAAY,IACZC,WAAY,OACZC,aAAc,EACdC,WAAY,aACZC,iBAAkB,SAClBC,cAAe,SACfC,aAAc,GACdC,eAAgB,IAChBC,YAAY,EACZC,qBAAsB,MAExB/B,GAEFC,KAAK+B,SAAW,CAAEC,EAAG,EAAGC,EAAG,GAC3BjC,KAAKkC,SAAW,CAAEF,EAAG,EAAGC,EAAG,GAEvBjC,KAAKI,SAASc,WAChBlB,KAAKkC,SAASF,EAA0B,GAAtBhC,KAAKI,SAASI,MAChCR,KAAKkC,SAASD,EAA0B,GAAtBjC,KAAKI,SAASI,OAGlCR,KAAKmC,MAAQ,CAAEH,EAAG,EAAGC,EAAG,EAAGG,QAAQ,GACnCpC,KAAKqC,UAAY,KACjBrC,KAAKsC,QAAU,CAAEC,SAAU,GAAIC,SAAU,GAAIC,SAAU,IACvDzC,KAAK0C,cAAgB,KACrB1C,KAAK2C,UAAY,GACjB3C,KAAK4C,UAAY,GAEjB5C,KAAKI,SAASK,OAASoC,KAAKC,IAAID,KAAKE,IAAI/C,KAAKI,SAASK,OAAQ,KAAO,IACtET,KAAKI,SAASI,MAAQqC,KAAKC,IAAID,KAAKE,IAAI/C,KAAKI,SAASI,MAAO,IAAM,GACnER,KAAKgD,oBAAsBhD,KAAKiD,mBAAmBC,KAAKlD,MACxDA,KAAKmD,mBAAqBnD,KAAKoD,cAAcF,KAAKlD,MAClDA,KAAKqD,kBAAoBrD,KAAKsD,aAAaJ,KAAKlD,MAChDA,KAAKuD,kBAAoBvD,KAAKwD,mBAAmBN,KAAKlD,MACtDA,KAAKyD,mBAAqBzD,KAAK0D,oBAAoBR,KAAKlD,MACxDA,KAAK2D,cAAgB3D,KAAK4D,eAAeV,KAAKlD,MAC9CA,KAAK6D,OACN,CASD,SAAAC,CAAUC,EAAMC,GACd,IAAIC,EACAC,EACJ,OAAO,YAAaC,GAClB,MAAMC,EAAUpE,KACXkE,GAIHG,aAAaJ,GACbA,EAAWK,YAAW,WAChBC,KAAKC,MAAQN,GAAWF,IAC1BD,EAAKU,MAAML,EAASD,GACpBD,EAAUK,KAAKC,MAElB,GAAER,GAASO,KAAKC,MAAQN,MATzBH,EAAKU,MAAML,EAASD,GACpBD,EAAUK,KAAKC,MAUvB,CACG,CAMD,KAAAX,GACE7D,KAAK0E,QAAU1E,KAAK8D,UAAU9D,KAAK0E,QAAQxB,KAAKlD,MAAO,KACvDA,KAAKwD,mBAAqBxD,KAAK8D,UAC7B9D,KAAKwD,mBAAmBN,KAAKlD,MAC7B,IAEF2E,OAAOC,iBAAiB,SAAU5E,KAAK0E,SACvC1E,KAAK6E,aACL7E,KAAK8E,aACL9E,KAAK+E,mBACL/E,KAAKgF,qBACLhF,KAAKF,OAAOmF,aAAa,OAAQ,OACjCjF,KAAKF,OAAOmF,aAAa,aAAc,8BACvCjF,KAAK0E,UACL1E,KAAKkF,gBACLlF,KAAKmF,UACN,CAMD,OAAAT,GACE1E,KAAKF,OAAOsF,MAAQpF,KAAKF,OAAOuF,YAChCrF,KAAKF,OAAOwF,OAAStF,KAAKF,OAAOyF,aACjCvF,KAAKwF,OAAS,CAAExD,EAAGhC,KAAKF,OAAOsF,MAAQ,EAAGnD,EAAGjC,KAAKF,OAAOwF,OAAS,GAClEtF,KAAKkF,eACN,CAUD,OAAAO,CAAQC,GACN1F,KAAKG,KAAOuF,EAAUC,KAAI,CAACC,EAAMC,KAAO,IACnCD,EACHE,OAAwB,EAAhBjD,KAAKkD,SAAelD,KAAKmD,GACjCC,OAAQpD,KAAKkD,SAAWlD,KAAKmD,GAC7BE,MAAOL,EACPM,QAAS,CAAE,EACXC,OAAQ,EACRC,OAAQT,EAAKU,MACbC,SAAU,MAEZvG,KAAKkF,gBACLlF,KAAKwG,OACN,CAOD,eAAAC,GACE,OAAuB,EAAhB5D,KAAKkD,SAAelD,KAAKmD,EACjC,CAMD,MAAAU,CAAOC,GACL,IAAK3G,KAAK4G,aAAaD,GAAU,OACjC,MAAME,EAAS,IACVF,EACHb,OAAQ9F,KAAKyG,kBACbR,OAAQjG,KAAKyG,kBACbP,MAAOlG,KAAKG,KAAK2G,OACjBX,QAAS,CAAE,EACXC,OAAQ,EACRC,OAAQM,EAAQL,MAChBC,SAAU,GAEZvG,KAAKG,KAAK4G,KAAKF,GACf7G,KAAK2C,UAAUoE,KAAK,CAAEC,OAAQ,MAAOC,IAAKJ,IAC1C7G,KAAK4C,UAAY,GACjB5C,KAAKkF,eACN,CAMD,SAAAgC,CAAUhB,GACR,GAAIA,EAAQ,GAAKA,GAASlG,KAAKG,KAAK2G,OAAQ,OAC5C,MAAMK,EAAanH,KAAKG,KAAKiH,OAAOlB,EAAO,GAAG,GAC9ClG,KAAK2C,UAAUoE,KAAK,CAAEC,OAAQ,SAAUC,IAAKE,EAAYjB,UACzDlG,KAAK4C,UAAY,GACjB5C,KAAKkF,eACN,CAOD,SAAAmC,CAAUnB,EAAON,GACf,IAAK5F,KAAKG,KAAK+F,GAEb,YADAoB,QAAQC,MAAM,gBAAgBrB,qBAGhC,MAAMsB,EAAU,IAAKxH,KAAKG,KAAK+F,IAC/B7F,OAAOC,OAAON,KAAKG,KAAK+F,GAAQN,EAAM,CACpCQ,OAAQ,EACRC,OAAQT,EAAKU,OAAStG,KAAKG,KAAK+F,GAAOI,MACvCC,SAAU,IAEZvG,KAAK2C,UAAUoE,KAAK,CAClBC,OAAQ,SACRQ,UACAC,QAAS,IAAKzH,KAAKG,KAAK+F,MAE1BlG,KAAK4C,UAAY,GACjB5C,KAAKkF,eACN,CAKD,IAAAwC,GACE,GAA8B,IAA1B1H,KAAK2C,UAAUmE,OAAc,OACjC,MAAMa,EAAa3H,KAAK2C,UAAUiF,MAGlC,OAFA5H,KAAK4C,UAAUmE,KAAKY,GAEZA,EAAWX,QACjB,IAAK,MACHhH,KAAKG,KAAKyH,MACV,MACF,IAAK,SACH5H,KAAKG,KAAKiH,OAAOO,EAAWzB,MAAO,EAAGyB,EAAWV,KACjD,MACF,IAAK,SACH5G,OAAOC,OAAON,KAAKG,KAAKwH,EAAWH,QAAQtB,OAAQyB,EAAWH,SAGlExH,KAAKkF,eACN,CAKD,IAAA2C,GACE,GAA8B,IAA1B7H,KAAK4C,UAAUkE,OAAc,OACjC,MAAMa,EAAa3H,KAAK4C,UAAUgF,MAGlC,OAFA5H,KAAK2C,UAAUoE,KAAKY,GAEZA,EAAWX,QACjB,IAAK,MACHhH,KAAKG,KAAK4G,KAAKY,EAAWV,KAC1B,MACF,IAAK,SACHjH,KAAKG,KAAKiH,OAAOO,EAAWzB,MAAO,GACnC,MACF,IAAK,SACH7F,OAAOC,OAAON,KAAKG,KAAKwH,EAAWF,QAAQvB,OAAQyB,EAAWF,SAGlEzH,KAAKkF,eACN,CAKD,SAAA4C,GACE9H,KAAKG,KAAO,EACb,CAMD,aAAA4H,CAAcC,GA4BZ,GA3BAhI,KAAKI,SAAW,IAAKJ,KAAKI,YAAa4H,QAEbC,IAAtBD,EAAWvH,SACoB,iBAAtBuH,EAAWvH,QACpB6G,QAAQC,MAAM,oCACdvH,KAAKI,SAASK,OAAS,IAEvBT,KAAKI,SAASK,OAASuH,EAAWvH,aAIbwH,IAArBD,EAAWxH,QACmB,iBAArBwH,EAAWxH,OACpB8G,QAAQC,MAAM,6BACdvH,KAAKI,SAASI,MAAQ,GAEtBR,KAAKI,SAASI,MAAQwH,EAAWxH,YAIXyH,IAAtBD,EAAWzH,SACoB,iBAAtByH,EAAWzH,QAAuByH,EAAWzH,QAAU,KAChE+G,QAAQC,MAAM,8CACdvH,KAAKI,SAASG,OAAS,UAIF0H,IAArBD,EAAWjH,MAAqB,CAClC,MAAMmH,EAAc,CAClB,SACA,OACA,QACA,QACA,OACA,eACA,WACA,UACA,SAEGA,EAAYC,SAASH,EAAWjH,SACnCuG,QAAQC,MACN,iCAAiCW,EAAYE,KAAK,UAEpDpI,KAAKI,SAASW,MAAQzB,EAEzB,MAE8B2I,IAA3BD,EAAWlH,cAEuB,iBAA3BkH,EAAWlH,aAClBkH,EAAWlH,YAAc,KAEzBwG,QAAQC,MAAM,uDACdvH,KAAKI,SAASU,YAAc,SAINmH,IAAtBD,EAAWzH,aAA6C0H,IAArBD,EAAWjH,OAChDf,KAAKkF,qBAGwB+C,IAA3BD,EAAWpH,cACToH,EAAWpH,YACbZ,KAAK6E,cAEL7E,KAAKF,OAAOuI,oBAAoB,aAAcrI,KAAKmD,oBACnDnD,KAAKF,OAAOuI,oBAAoB,YAAarI,KAAKqD,mBAClDrD,KAAKF,OAAOuI,oBAAoB,WAAYrI,KAAK6E,mBAIhBoD,IAAjCD,EAAWnH,oBACTmH,EAAWnH,kBACbb,KAAK+E,mBAELJ,OAAO0D,oBACL,oBACArI,KAAKgD,2BAKoBiF,IAA3BD,EAAW/G,cACT+G,EAAW/G,YACbjB,KAAKF,OAAO8E,iBAAiB,QAAS5E,KAAK2D,eAE3C3D,KAAKF,OAAOuI,oBAAoB,QAASrI,KAAK2D,qBAIxBsE,IAAtBD,EAAWrH,SACTqH,EAAWrH,OACbX,KAAKsI,QAELtI,KAAKuI,eAIwBN,IAA7BD,EAAWtG,eACb1B,KAAKwI,iBAAiBR,EAAWtG,oBAELuG,IAA1BD,EAAWnG,YACb7B,KAAKyI,iBAAiBT,EAAWnG,iBAEHoG,IAA5BD,EAAWrG,eACb3B,KAAKI,SAASuB,aAAeqG,EAAWrG,mBAERsG,IAA9BD,EAAWpG,iBACb5B,KAAKI,SAASwB,eAAiBoG,EAAWpG,qBAEJqG,IAApCD,EAAWlG,uBACb9B,KAAKI,SAAS0B,qBAAuBkG,EAAWlG,qBAEnD,CAQD,YAAA8E,CAAaD,GACX,OAAKA,EAAQ+B,MAAgC,iBAAjB/B,EAAQ+B,QAI/B/B,EAAQL,QAAU,kBAAkBqC,KAAKhC,EAAQL,UACpDgB,QAAQC,MAAM,yDACP,IALPD,QAAQC,MAAM,0DACP,EAOV,CAMD,eAAAqB,CAAgBC,EAAYC,EAAWC,EAAUC,GAC/C,IAAIC,GAAa,EACbC,EAAQ,EACRC,EAAQ,EAqDZnJ,KAAKF,OAAO8E,iBAAiBiE,GAnDPO,IACpBH,GAAa,EACb,MAAMI,EAAML,EAAYI,GACxBF,EAAQG,EAAIrH,EACZmH,EAAQE,EAAIpH,EAEY,IAApBjC,KAAKkC,SAASF,GAA+B,IAApBhC,KAAKkC,SAASD,IACzCjC,KAAKkC,SAASF,EAA0B,GAAtBhC,KAAKI,SAASI,MAChCR,KAAKkC,SAASD,EAA0B,GAAtBjC,KAAKI,SAASI,MACjC,IA2CHR,KAAKF,OAAO8E,iBAAiBkE,GAxCRM,IACnB,IAAKH,EAAY,OAEjB,MAAMI,EAAML,EAAYI,GAClBE,EAAKD,EAAIrH,EAAIkH,EACbK,EAAKF,EAAIpH,EAAIkH,EAEfnJ,KAAKI,SAASU,YAAc,GAC9Bd,KAAKkC,SAASF,EAAIa,KAAKC,IACrBD,KAAKE,IAAIwG,EAAKvJ,KAAKI,SAASI,OAAQR,KAAKI,SAASU,aAClDd,KAAKI,SAASU,aAEhBd,KAAKkC,SAASD,EAAIY,KAAKC,IACrBD,KAAKE,IAAIuG,EAAKtJ,KAAKI,SAASI,OAAQR,KAAKI,SAASU,aAClDd,KAAKI,SAASU,eAGhBd,KAAKkC,SAASF,EAAIuH,EAAKvJ,KAAKI,SAASI,MAAQ,GAC7CR,KAAKkC,SAASD,EAAIqH,EAAKtJ,KAAKI,SAASI,MAAQ,IAG/C0I,EAAQG,EAAIrH,EACZmH,EAAQE,EAAIpH,EAERmH,EAAEI,gBAAgBJ,EAAEI,gBAAgB,GAgBW,CAAEC,SAAS,IAChEzJ,KAAKF,OAAO8E,iBAAiBmE,GAdV,KACjBE,GAAa,EACbjJ,KAAK0J,kBAAkB,IAazB1J,KAAKF,OAAO8E,iBAAiB,cAVR,KACfqE,IACFA,GAAa,EACbjJ,KAAK0J,mBACN,GAOJ,CAMD,UAAA7E,GACO7E,KAAKI,SAASQ,aAEnBZ,KAAK4I,gBAAgB,aAAc,YAAa,YAAaQ,IAAO,CAClEpH,EAAGoH,EAAEO,QAAQ,GAAGC,QAChB3H,EAAGmH,EAAEO,QAAQ,GAAGE,WAEnB,CAOD,aAAAzG,CAAc0G,GACZ,GAA6B,IAAzBA,EAAMH,QAAQ7C,OAAc,CAC9B,MAAM3E,EAAQ2H,EAAMH,QAAQ,GAC5B3J,KAAKmC,MAAMH,EAAIG,EAAMyH,QACrB5J,KAAKmC,MAAMF,EAAIE,EAAM0H,QACrB7J,KAAKmC,MAAMC,QAAS,CACrB,CACF,CAOD,YAAAkB,CAAawG,GACX,GAA6B,IAAzBA,EAAMH,QAAQ7C,QAAgB9G,KAAKmC,MAAMC,OAAQ,CACnD,MAAMD,EAAQ2H,EAAMH,QAAQ,GACtBL,EAAKnH,EAAMyH,QAAU5J,KAAKmC,MAAMH,EAChCuH,EAAKpH,EAAM0H,QAAU7J,KAAKmC,MAAMF,EAElCjC,KAAKI,SAASU,YAAc,GAC9Bd,KAAKkC,SAASF,EAAIa,KAAKC,IACrBD,KAAKE,IAAIwG,EAAKvJ,KAAKI,SAASI,OAAQR,KAAKI,SAASU,aAClDd,KAAKI,SAASU,aAEhBd,KAAKkC,SAASD,EAAIY,KAAKC,IACrBD,KAAKE,IAAIuG,EAAKtJ,KAAKI,SAASI,OAAQR,KAAKI,SAASU,aAClDd,KAAKI,SAASU,eAGhBd,KAAKkC,SAASF,EAAIuH,EAAKvJ,KAAKI,SAASI,MAAQ,GAC7CR,KAAKkC,SAASD,EAAIqH,EAAKtJ,KAAKI,SAASI,MAAQ,IAG/CR,KAAKmC,MAAMH,EAAIG,EAAMyH,QACrB5J,KAAKmC,MAAMF,EAAIE,EAAM0H,QAEjBC,EAAMN,gBAAgBM,EAAMN,gBACjC,CACF,CAMD,UAAA1E,GACO9E,KAAKI,SAASY,aAEnBhB,KAAK4I,gBAAgB,YAAa,YAAa,WAAYQ,IAAO,CAChEpH,EAAGoH,EAAEQ,QACL3H,EAAGmH,EAAES,YAGP7J,KAAKF,OAAO8E,iBAAiB,cAAc,KACzC5E,KAAK0J,kBAAkB,IAE1B,CAMD,gBAAAlB,CAAiBuB,GACf,GAAIxK,EAAgBwK,GAAc,CAChC/J,KAAKI,SAASsB,cAAgBqI,EAC9B,MAAMtK,OAAEA,EAAMC,SAAEA,GAAaH,EAAgBwK,GAC7C/J,KAAKI,SAASuB,aAAelC,EAC7BO,KAAKI,SAASwB,eAAiBlC,CACrC,MACM4H,QAAQC,MAAM,2BAA2BwC,IAE5C,CAMD,gBAAAtB,CAAiBuB,GACfhK,KAAKI,SAASyB,WAAamI,CAC5B,CAED,gBAAAN,GACE,MAAM9H,eAAEA,EAAcE,qBAAEA,GAAyB9B,KAAKI,SAEhD6J,EAAU,KACdjK,KAAKkC,SAASF,GAAKJ,EACnB5B,KAAKkC,SAASD,GAAKL,EAEfiB,KAAKqH,IAAIlK,KAAKkC,SAASF,GAAKF,IAAsB9B,KAAKkC,SAASF,EAAI,GACpEa,KAAKqH,IAAIlK,KAAKkC,SAASD,GAAKH,IAAsB9B,KAAKkC,SAASD,EAAI,GAEhD,IAApBjC,KAAKkC,SAASF,GAA+B,IAApBhC,KAAKkC,SAASD,GACzCkI,sBAAsBF,EACvB,EAGHA,GACD,CAMD,gBAAAlF,GACE,IAAK/E,KAAKI,SAASS,kBAAmB,OAEtC,IAAIuJ,EAAa,EAajBzF,OAAOC,iBAAiB,qBAVGwE,IACzB,MAAM5E,EAAMD,KAAKC,MACjB,GAAIA,EAAM4F,EAJU,IAIkB,OACtCA,EAAa5F,EAEb,MAAM6F,MAAEA,EAAQ,EAACC,KAAEA,EAAO,GAAMlB,EAChCpJ,KAAKkC,SAASF,EAAY,KAARqI,EAClBrK,KAAKkC,SAASD,EAAW,KAAPqI,CAAa,GAIlC,CAOD,kBAAArH,CAAmB6G,GACjB,MAAMQ,KAAEA,EAAID,MAAEA,GAAUP,EACX,OAATQ,GAA2B,OAAVD,IACnBrK,KAAKkC,SAASF,EAAY,KAARqI,EAClBrK,KAAKkC,SAASD,EAAW,KAAPqI,EAErB,CAMD,kBAAAtF,GACMhF,KAAKI,SAASa,aAChBjB,KAAKF,OAAO8E,iBAAiB,QAAS5E,KAAK4D,eAAeV,KAAKlD,OAEjEA,KAAKF,OAAO8E,iBACV,YACA5E,KAAKwD,mBAAmBN,KAAKlD,OAE/BA,KAAKF,OAAO8E,iBACV,aACA5E,KAAK0D,oBAAoBR,KAAKlD,MAEjC,CAED,cAAA4D,CAAewF,GACb,MAAMmB,EAAKvK,KAAKwK,YAAYpB,GACtBnC,EAAMjH,KAAKyK,UAAUF,GAEvBtD,GAAOjH,KAAKI,SAASgB,cACvB6F,EAAIb,OAAoC,IAA3BpG,KAAKI,SAASiB,WAC3BiD,YAAW,KACT2C,EAAIb,OAASpG,KAAKI,SAASiB,UAAU,GACpC,MAGL,MAAMiI,EAAKiB,EAAGvI,EAAIhC,KAAKwF,OAAOxD,EACxBuH,EAAKgB,EAAGtI,EAAIjC,KAAKwF,OAAOvD,EAExByI,EAAW7H,KAAK8H,KAAKrB,EAAKA,EAAKC,EAAKA,GACpCqB,EACJ5K,KAAKI,SAASU,YAAc,EACI,GAA5Bd,KAAKI,SAASU,YACQ,GAAtBd,KAAKI,SAASI,MAEpBR,KAAKkC,SAASF,GACVuH,EAAKmB,EAAYE,GAA2C,GAAtB5K,KAAKI,SAASI,MACxDR,KAAKkC,SAASD,GACVqH,EAAKoB,EAAYE,GAA2C,GAAtB5K,KAAKI,SAASI,KACzD,CAED,kBAAAgD,CAAmB4F,GACjB,MAAMmB,EAAKvK,KAAKwK,YAAYpB,GACtBnC,EAAMjH,KAAKyK,UAAUF,GAE3B,GAAItD,GAAOA,EAAIf,QAAUlG,KAAK0C,cAAe,CAC3C,GAA2B,OAAvB1C,KAAK0C,cAAwB,CAC/B,MAAMmI,EAAO7K,KAAKG,KAAKH,KAAK0C,eAC5BmI,EAAKzE,OAAS,EACdyE,EAAKxE,OAASwE,EAAKvE,MACnBuE,EAAKtE,SAAW,EAChBvG,KAAKsC,QAAQG,SAASqI,SAASC,GAAOA,EAAGF,IAC1C,CACD7K,KAAK0C,cAAgBuE,EAAIf,MACrBlG,KAAKI,SAASe,cAChB8F,EAAIb,OAASpG,KAAKI,SAASiB,WAC3B4F,EAAIZ,OAASrG,KAAKI,SAASkB,YAAc2F,EAAIX,MAC7CW,EAAIV,SAAWvG,KAAKI,SAASmB,cAE/BvB,KAAKsC,QAAQE,SAASsI,SAASC,GAAOA,EAAG9D,IAC1C,MAAM,IAAKA,GAA8B,OAAvBjH,KAAK0C,cAAwB,CAC9C,MAAMmI,EAAO7K,KAAKG,KAAKH,KAAK0C,eAC5BmI,EAAKzE,OAAS,EACdyE,EAAKxE,OAASwE,EAAKvE,MACnBuE,EAAKtE,SAAW,EAChBvG,KAAKsC,QAAQG,SAASqI,SAASC,GAAOA,EAAGF,KACzC7K,KAAK0C,cAAgB,IACtB,CACF,CAED,mBAAAgB,GACE,GAA2B,OAAvB1D,KAAK0C,cAAwB,CAC/B,MAAMmI,EAAO7K,KAAKG,KAAKH,KAAK0C,eAC5BmI,EAAKzE,OAAS,EACdyE,EAAKxE,OAASwE,EAAKvE,MACnBuE,EAAKtE,SAAW,EAChBvG,KAAKsC,QAAQG,SAASqI,SAASC,GAAOA,EAAGF,KACzC7K,KAAK0C,cAAgB,IACtB,CACF,CAED,WAAA8H,CAAYpB,GACV,MAAM4B,EAAOhL,KAAKF,OAAOmL,wBACzB,MAAO,CAAEjJ,EAAGoH,EAAEQ,QAAUoB,EAAKE,KAAMjJ,EAAGmH,EAAES,QAAUmB,EAAKG,IACxD,CAED,SAAAV,CAAUF,GACR,IAAK,IAAI1E,EAAI7F,KAAKG,KAAK2G,OAAS,EAAGjB,GAAK,EAAGA,IAAK,CAC9C,MAAMoB,EAAMjH,KAAKG,KAAK0F,GAChBuF,EAAInE,EAAId,QACd,IAAKiF,EAAG,SACR,MAAM9B,EAAKiB,EAAGvI,EAAIoJ,EAAEpJ,EACduH,EAAKgB,EAAGtI,EAAImJ,EAAEnJ,EACpB,GAAIY,KAAKqH,IAAIZ,IAAO8B,EAAEhG,MAAQ,GAAKvC,KAAKqH,IAAIX,IAAO6B,EAAE9F,OAAS,EAC5D,OAAO2B,CACV,CACD,OAAO,IACR,CAED,aAAA/B,GACE,IAAKlF,KAAKG,KAAK2G,OAAQ,OAEvB,MAAMuE,EAAIrL,KAAKI,SAASG,OAClB+K,EAAItL,KAAKG,KAAK2G,OAGpB,OAFc9G,KAAKI,SAASW,OAASzB,GAGnC,IAAK,QACH,MAAMiM,EAAcvL,KAAKI,SAASmL,aAAmB,GAAJF,EAC3CG,EAAcxL,KAAKI,SAASoL,aAAmB,GAAJH,EAC3CI,EAAa5I,KAAK6I,KAAK7I,KAAK8H,KAAKW,IACjCK,EAAa9I,KAAK6I,KAAKJ,EAAIG,GAEjCzL,KAAKG,KAAK2K,SAAQ,CAAC7D,EAAKpB,KACtB,MAAM+F,EAAc/F,EAAI4F,GAAgB,EAAI5I,KAAKmD,GAAMyF,GACjDI,EACJhJ,KAAKiJ,MAAMjG,EAAI4F,IAAgB,EAAI5I,KAAKmD,GAAM2F,GAE1C3J,GACHuJ,EAAcC,EAAc3I,KAAKkJ,IAAIF,IACtChJ,KAAKkJ,IAAIH,GACL3J,GACHsJ,EAAcC,EAAc3I,KAAKkJ,IAAIF,IACtChJ,KAAKmJ,IAAIJ,GACLK,EAAIT,EAAc3I,KAAKmJ,IAAIH,GAEjC5E,EAAIjF,EAAIA,EACRiF,EAAIhF,EAAIA,EACRgF,EAAIgF,EAAIA,CAAC,IAEX,MAEF,IAAK,OACH,MAAMC,EAAOrJ,KAAK6I,KAAK7I,KAAKsJ,KAAKb,IAC3Bc,EAAY,GAClB,IAAIC,EAAY,EAEhBrM,KAAKG,KAAK2K,SAAS7D,IACjB,IAAIjF,EAAGC,EAAGgK,EAGV,GACEjK,EAAKqK,EAAYH,EAAQA,EAAO,EAAI,GACpCjK,EAAKY,KAAKiJ,MAAMO,EAAYH,GAAQA,EAAQA,EAAO,EAAI,GACvDD,EAAIpJ,KAAKiJ,MAAMO,GAAaH,EAAOA,IAASA,EAAO,EAAI,GACvDG,UAEAxJ,KAAKqH,IAAIlI,GAAKoK,GACdvJ,KAAKqH,IAAIjI,GAAKmK,GACdvJ,KAAKqH,IAAI+B,GAAKG,GAGhBnF,EAAIjF,EAAIA,GAAKqJ,EAAIa,GAAQ,EACzBjF,EAAIhF,EAAIA,GAAKoJ,EAAIa,GAAQ,EACzBjF,EAAIgF,EAAIA,GAAKZ,EAAIa,GAAQ,CAAC,IAE5B,MAEF,IAAK,UACH,MAAMI,EAASzJ,KAAK6I,KAAK7I,KAAK8H,KAAKW,IACnC,IAAIpF,EAAQ,EACZ,IAAK,IAAIqG,EAAQ,EAAGA,EAAQD,EAAQC,IAAS,CAC3C,MAAMC,EAAYF,EAASC,EACrBtK,EAAKsK,EAAQD,EAAUjB,EAAI,EAAIA,EACrC,IAAK,IAAIxF,EAAI,EAAGA,EAAI2G,GAAatG,EAAQoF,EAAGzF,IAAKK,IAAS,CACxD,MAAMuG,EAAS5G,EAAI2G,EAAa,EAAI3J,KAAKmD,GACnCzF,EAAU8K,GAAKiB,EAASC,GAAUD,EACxCtM,KAAKG,KAAK+F,GAAOlE,EAAIzB,EAASsC,KAAKkJ,IAAIU,GACvCzM,KAAKG,KAAK+F,GAAOjE,EAAIA,EACrBjC,KAAKG,KAAK+F,GAAO+F,EAAI1L,EAASsC,KAAKmJ,IAAIS,EACxC,CACF,CACD,MACF,IAAK,QACH,MAAMC,EAAQ,EACRC,EAAW,EAAItB,EAAKC,EAC1BtL,KAAKG,KAAK2K,SAAQ,CAAC7D,EAAKpB,KACtB,MAAM4G,EAAS5G,EAAIyF,EAAK,EAAIzI,KAAKmD,GAAK0G,EAChCpH,EAAcO,EAAI8G,EAARtB,EAChBpE,EAAIjF,EAAIqJ,EAAIxI,KAAKkJ,IAAIU,GACrBxF,EAAIhF,EAAIqD,EACR2B,EAAIgF,EAAIZ,EAAIxI,KAAKmJ,IAAIS,EAAM,IAE7B,MACF,IAAK,OACHzM,KAAKG,KAAK2K,SAAQ,CAAC7D,EAAKpB,KACtB,MAAM4G,EAAS5G,EAAIyF,EAAK,EAAIzI,KAAKmD,GACjCiB,EAAIjF,EAAIqJ,EAAIxI,KAAKkJ,IAAIU,GACrBxF,EAAIhF,EAAI,EACRgF,EAAIgF,EAAIZ,EAAIxI,KAAKmJ,IAAIS,EAAM,IAE7B,MACF,IAAK,eACHzM,KAAKG,KAAK2K,SAAQ,CAAC7D,EAAKpB,KACtB,MAAM4G,EAAS5G,EAAIyF,EAAK,EAAIzI,KAAKmD,GACjCiB,EAAIjF,EAAI,EACRiF,EAAIhF,EAAIoJ,EAAIxI,KAAKmJ,IAAIS,GACrBxF,EAAIgF,EAAIZ,EAAIxI,KAAKkJ,IAAIU,EAAM,IAE7B,MACF,IAAK,WACH,MAAMG,EAAc,EAAIvB,EAAKxI,KAAK6I,KAAKJ,EAAI,IACrCuB,EAAoBhK,KAAK6I,KAAK7I,KAAK8H,KAAKW,IAC9CtL,KAAKG,KAAK2K,SAAQ,CAAC7D,EAAKpB,KACtB,MAAM0G,EAAQ1J,KAAKiJ,MAAMjG,EAAIgH,GACvBJ,EACH5G,EAAIgH,GAAuB,EAAIhK,KAAKmD,GAAM6G,GACvCvH,EAAciH,EAAQK,EAAZvB,EAChBpE,EAAIjF,EAAIqJ,EAAIxI,KAAKkJ,IAAIU,GACrBxF,EAAIhF,EAAIqD,EACR2B,EAAIgF,EAAIZ,EAAIxI,KAAKmJ,IAAIS,EAAM,IAE7B,MAGF,QACE,MAAMK,GAAe,EAAIjK,KAAK8H,KAAK,IAAM,EACnCoC,EAA2B,EAAVlK,KAAKmD,GAAS8G,EACrC9M,KAAKG,KAAK2K,SAAQ,CAAC7D,EAAKpB,KACtB,MAAMmH,EAAInH,EAAIyF,EACR2B,EAAcpK,KAAKqK,KAAK,EAAI,EAAIF,GAChCG,EAAUJ,EAAiBlH,EACjCoB,EAAIjF,EAAIqJ,EAAIxI,KAAKmJ,IAAIiB,GAAepK,KAAKkJ,IAAIoB,GAC7ClG,EAAIhF,EAAIoJ,EAAIxI,KAAKmJ,IAAIiB,GAAepK,KAAKmJ,IAAImB,GAC7ClG,EAAIgF,EAAIZ,EAAIxI,KAAKkJ,IAAIkB,EAAY,IAIxC,CAED,KAAAzG,GACE,MAAMvG,IAAEA,EAAGH,OAAEA,EAAM0F,OAAEA,GAAWxF,KAChCC,EAAImN,UAAU,EAAG,EAAGtN,EAAOsF,MAAOtF,EAAOwF,QAEzC,MAAM+H,EAAa,IAAIrN,KAAKG,MACzBmN,QACErG,GACCA,GACoB,iBAAbA,EAAIyB,MACM,iBAAVzB,EAAIjF,GACM,iBAAViF,EAAIhF,GACM,iBAAVgF,EAAIgF,IAEdsB,MAAK,CAACC,EAAGC,IAAMA,EAAExB,EAAIuB,EAAEvB,IAE1B,IAAK,MAAMhF,KAAOoG,EAChB,IACE,MAAMK,EAAyB,EAAXlI,EAAOxD,EAAQiF,EAAIgF,EACjC0B,EAAQD,EAAc,EAAgB,EAAXlI,EAAOxD,EAAS0L,EAAc,EAEzD1L,EAAI4L,SAAS3G,EAAIjF,EAAI2L,EAAQnI,EAAOxD,GACtCiF,EAAIjF,EAAI2L,EAAQnI,EAAOxD,EACvBwD,EAAOxD,EACLC,EAAI2L,SAAS3G,EAAIhF,EAAI0L,EAAQnI,EAAOvD,GACtCgF,EAAIhF,EAAI0L,EAAQnI,EAAOvD,EACvBuD,EAAOvD,EACL4L,EAAWD,UACd3G,EAAI4G,UAAY,IAAMF,GAAS1G,EAAIb,QAAU,KAE3Ca,EAAI4G,UAAY,IAAMF,GAAS1G,EAAIb,QAAU,GAC9C,GAEEsC,EAAOzB,EAAIyB,KAEXoF,EAAkB,EAAXtI,EAAOxD,EACd+L,EAAmB,GAAXvI,EAAOxD,EACfgM,GAAe/G,EAAIgF,EAAI8B,IAASD,EAAOC,GACvCE,EAAUpL,KAAKE,IAAI,GAAKF,KAAKC,IAAI,EAAGkL,IAE1C/N,EAAIiO,YAAcD,EAClBhO,EAAIkO,UAAYlH,EAAIZ,QAAUY,EAAIX,OAAS,OAC3CrG,EAAImO,KAAO,GAAGpO,KAAKI,SAASqB,oBAAoBoM,OAAc7N,KAAKI,SAASoB,aAC5E,MAAM6M,EAAUpO,EAAIqO,YAAY5F,GAEhCzB,EAAId,QAAU,CACZnE,IACAC,IACAmD,MAAOiJ,EAAQjJ,MACfE,OAAQuI,GAEV5N,EAAIsO,SAAS7F,EAAM1G,EAAIqM,EAAQjJ,MAAQ,EAAGnD,EAAI4L,EAAW,EAC1D,CAAC,MAAOtG,GACPD,QAAQC,MAAM,qBAAsBN,EAAKM,EAC1C,CAEJ,CAMD,QAAApC,GACE,IAAInF,KAAKI,SAASO,OAAlB,CAEA,GAAIX,KAAKI,SAASc,SAAU,CAC1B,MAAMS,aAAEA,EAAYE,WAAEA,GAAe7B,KAAKI,SACtCyB,GACF7B,KAAKkC,SAASF,IACW,GAAtBhC,KAAKI,SAASI,MAAcR,KAAKkC,SAASF,GAAKL,EAClD3B,KAAKkC,SAASD,IACW,GAAtBjC,KAAKI,SAASI,MAAcR,KAAKkC,SAASD,GAAKN,IAElD3B,KAAKkC,SAASF,EAA0B,GAAtBhC,KAAKI,SAASI,MAChCR,KAAKkC,SAASD,EAA0B,GAAtBjC,KAAKI,SAASI,MAEnC,CAED,GAAwB,IAApBR,KAAKkC,SAASF,GAA+B,IAApBhC,KAAKkC,SAASD,EAAS,CAC9CjC,KAAKI,SAASyB,YAChB7B,KAAK+B,SAASC,IACXhC,KAAKkC,SAASF,EAAIhC,KAAK+B,SAASC,GAAKhC,KAAKI,SAASK,OACtDT,KAAK+B,SAASE,IACXjC,KAAKkC,SAASD,EAAIjC,KAAK+B,SAASE,GAAKjC,KAAKI,SAASK,SAEtDT,KAAK+B,SAASC,GAAKhC,KAAKkC,SAASF,EACjChC,KAAK+B,SAASE,GAAKjC,KAAKkC,SAASD,GAGnC,MAAMlB,EAAQf,KAAKI,SAASW,OAASzB,EACvB,SAAVyB,GAA8B,UAAVA,EACtBf,KAAK+B,SAASC,EAAI,EACC,iBAAVjB,IACTf,KAAK+B,SAASE,EAAI,GAGpB,MAAMuM,EAAO3L,KAAKkJ,IAAI/L,KAAK+B,SAASE,GAClCwM,EAAO5L,KAAKmJ,IAAIhM,KAAK+B,SAASE,GAC1ByM,EAAO7L,KAAKkJ,IAAI/L,KAAK+B,SAASC,GAClC2M,EAAO9L,KAAKmJ,IAAIhM,KAAK+B,SAASC,GAEhChC,KAAKG,KAAK2K,SAAS7D,IACjB,IAAIjF,EAAEA,EAACC,EAAEA,EAACgK,EAAEA,GAAMhF,EAEd2H,EAAK5M,EAAIwM,EAAOvC,EAAIwC,EACpBI,EAAK7M,EAAIyM,EAAOxC,EAAIuC,EACpBM,EAAK7M,EAAIyM,EAAOG,EAAKF,EACzBE,EAAK5M,EAAI0M,EAAOE,EAAKH,EACrBzH,EAAIjF,EAAI4M,EACR3H,EAAIhF,EAAI6M,EACR7H,EAAIgF,EAAI4C,CAAE,GAEb,CAED7O,KAAKwG,QACLxG,KAAKqC,UAAY8H,sBAAsBnK,KAAKmF,SAASjC,KAAKlD,MApDzB,CAqDlC,CAKD,KAAAsI,GACEtI,KAAKI,SAASO,QAAS,EACnBX,KAAKqC,WAAW0M,qBAAqB/O,KAAKqC,WAC9CrC,KAAKsC,QAAQgG,OAAOwC,SAASC,GAAOA,KACrC,CAKD,MAAAxC,GACEvI,KAAKI,SAASO,QAAS,EACvBX,KAAKmF,WACLnF,KAAKsC,QAAQiG,QAAQuC,SAASC,GAAOA,KACtC,CAKD,OAAAiE,GACEhP,KAAKsI,QACL3D,OAAO0D,oBAAoB,SAAUrI,KAAK0E,SAC1C1E,KAAKF,OAAOuI,oBAAoB,aAAcrI,KAAKmD,oBACnDnD,KAAKF,OAAOuI,oBAAoB,YAAarI,KAAKqD,mBAClDrD,KAAKF,OAAOuI,oBAAoB,WAAYrI,KAAK6E,YACjD7E,KAAKF,OAAOuI,oBAAoB,YAAarI,KAAK8E,YAClD9E,KAAKF,OAAOuI,oBAAoB,YAAarI,KAAKwD,oBAClDxD,KAAKF,OAAOuI,oBAAoB,UAAWrI,KAAK8E,YAChD9E,KAAKF,OAAOuI,oBAAoB,aAAcrI,KAAK0D,qBACnD1D,KAAKF,OAAOuI,oBAAoB,QAASrI,KAAK4D,gBAC9Ce,OAAO0D,oBAAoB,oBAAqBrI,KAAKgD,qBACjDhD,KAAKF,OAAOmP,YACdjP,KAAKF,OAAOoP,YAAYlP,KAAKF,OAAOqP,WAAU,IAEhDnP,KAAKG,KAAO,EACb"}