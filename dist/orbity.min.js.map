{"version":3,"file":"orbity.min.js","sources":["../src/orbity.js"],"sourcesContent":["/* Orbity.js is inspired by tagcanvas.js \r\nlink to tagcanvas.js: https://www.goat1000.com/tagcanvas.php\r\nThanks to the original author for the inspiration! */\r\n\r\nconst DEFAULT_SHAPE = \"sphere\";\r\n\r\nconst EASING_PROFILES = {\r\n  Snappy: { easeIn: 0.2, friction: 0.9 },\r\n  Smooth: { easeIn: 0.1, friction: 0.95 },\r\n  Marathon: { easeIn: 0.05, friction: 0.99 },\r\n};\r\n\r\nclass Orbity {\r\n  /**\r\n   * Creates an instance of Orbity.\r\n   * @param {HTMLCanvasElement} canvas - The canvas element where the 3D tag cloud will be rendered.\r\n   * @param {Object} options - Configuration options for the tag cloud.\r\n   * @param {number} [options.radius=150] - Radius of the 3D sphere or other shapes.\r\n   * @param {number} [options.speed=0.002] - Speed of rotation.\r\n   * @param {number} [options.easing=0.05] - Easing factor for smooth rotation.\r\n   * @param {boolean} [options.paused=false] - Whether the animation starts paused.\r\n   * @param {boolean} [options.enableTouch=true] - Enable touch interaction.\r\n   * @param {boolean} [options.enableOrientation=false] - Enable device orientation interaction.\r\n   * @param {number} [options.maxVelocity=0.05] - Maximum velocity for rotation.\r\n   * @param {string} [options.shape=DEFAULT_SHAPE] - Shape of the tag cloud (e.g., \"sphere\", \"cube\", \"plane\", \"helix\", \"ring\", \"verticalRing\", \"cylinder\", \"pyramid\", \"torus\").\r\n   * @param {boolean} [options.enableDrag=true] - Enable drag interaction.\r\n   * @param {boolean} [options.enableClick=true] - Enable click interaction.\r\n   * @param {boolean} [options.hoverEffect=true] - Enable/disable hover effects.\r\n   * @param {boolean} [options.clickEffect=true] - Enable/disable click effects.\r\n   * @param {number} [options.hoverScale=1.2] - Scale factor for hover effect.\r\n   * @param {string} [options.hoverColor=\"#ff0\"] - Color change on hover.\r\n   * @param {number} [options.hoverOpacity=1.0] - Opacity change on hover.\r\n   * @param {string} [options.customFont=\"sans-serif\"] - Default font family.\r\n   * @param {string} [options.customFontWeight=\"normal\"] - Default font weight.\r\n   * @param {number} [options.majorRadius] - Major radius for the torus shape.\r\n   * @param {number} [options.minorRadius] - Minor radius for the torus shape.\r\n   */\r\n  constructor(canvas, options = {}) {\r\n    this.canvas = canvas;\r\n    this.ctx = canvas.getContext(\"2d\");\r\n    this.tags = [];\r\n    this.settings = Object.assign(\r\n      {\r\n        radius: 150,\r\n        speed: 1,\r\n        easing: 0.1,\r\n        enableEasing: true,\r\n        paused: false,\r\n        enableTouch: true,\r\n        enableOrientation: false,\r\n        maxVelocity: 0.5,\r\n        shape: DEFAULT_SHAPE,\r\n        enableDrag: true,\r\n        enableClick: true,\r\n        autoSpin: true,\r\n        hoverEffect: true,\r\n        clickEffect: true,\r\n        hoverScale: 1.2,\r\n        hoverColor: \"#ff0\",\r\n        hoverOpacity: 1.0,\r\n        customFont: \"sans-serif\",\r\n        customFontWeight: \"normal\",\r\n        easingProfile: \"Smooth\",\r\n        customEaseIn: 0.1,\r\n        customFriction: 0.95,\r\n        autoEasing: true,\r\n        minVelocityThreshold: 0.005,\r\n        dragSensitivity: 2,\r\n      },\r\n      options\r\n    );\r\n    this.rotation = { x: 0, y: 0 };\r\n    this.velocity = { x: 0, y: 0 };\r\n\r\n    if (this.settings.autoSpin) {\r\n      this.velocity.x = this.settings.speed;\r\n      this.velocity.y = this.settings.speed;\r\n    }\r\n\r\n    this.touch = { x: 0, y: 0, active: false };\r\n    this.animFrame = null;\r\n    this._events = { tagClick: [], tagHover: [], tagLeave: [] };\r\n    this._hoveredIndex = null;\r\n    this.undoStack = [];\r\n    this.redoStack = [];\r\n\r\n    this.settings.easing = Math.min(Math.max(this.settings.easing, 0.01), 0.5);\r\n    this.settings.speed = Math.min(Math.max(this.settings.speed, 0.001), 5);\r\n    this._orientationHandler = this._handleOrientation.bind(this);\r\n    this._touchStartHandler = this._onTouchStart.bind(this);\r\n    this._touchMoveHandler = this._onTouchMove.bind(this);\r\n    this._mouseMoveHandler = this._onCanvasMouseMove.bind(this);\r\n    this._mouseLeaveHandler = this._onCanvasMouseLeave.bind(this);\r\n    this._clickHandler = this._onCanvasClick.bind(this);\r\n    this._keyboardHandler = this._onKeyboard.bind(this);\r\n    this._init();\r\n  }\r\n\r\n  /**\r\n   * Throttles a function to limit its execution rate.\r\n   * @private\r\n   * @param {Function} func - The function to throttle.\r\n   * @param {number} limit - The time limit in milliseconds.\r\n   * @returns {Function} The throttled function.\r\n   */\r\n  _throttle(func, limit) {\r\n    let lastFunc;\r\n    let lastRan;\r\n    return function (...args) {\r\n      const context = this;\r\n      if (!lastRan) {\r\n        func.apply(context, args);\r\n        lastRan = Date.now();\r\n      } else {\r\n        clearTimeout(lastFunc);\r\n        lastFunc = setTimeout(function () {\r\n          if (Date.now() - lastRan >= limit) {\r\n            func.apply(context, args);\r\n            lastRan = Date.now();\r\n          }\r\n        }, limit - (Date.now() - lastRan));\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initializes the Orbity instance by setting up the canvas, event listeners, and starting the animation.\r\n   * @private\r\n   */\r\n  _init() {\r\n    this._resize = this._throttle(this._resize.bind(this), 200);\r\n    this._onCanvasMouseMove = this._throttle(\r\n      this._onCanvasMouseMove.bind(this),\r\n      50\r\n    );\r\n    window.addEventListener(\"resize\", this._resize);\r\n    this._bindTouch();\r\n    this._bindMouse();\r\n    this._bindOrientation();\r\n    this._attachInteraction();\r\n    this.canvas.setAttribute(\"role\", \"region\");\r\n    this.canvas.setAttribute(\"aria-label\", \"3D tag cloud visualization\");\r\n    this.canvas.setAttribute(\"tabindex\", \"0\");\r\n    this.canvas.addEventListener(\"keydown\", this._keyboardHandler);\r\n    this._resize();\r\n    this._positionTags();\r\n    this._animate();\r\n  }\r\n\r\n  /**\r\n   * Resizes the canvas to match its container and recalculates the center and tag positions.\r\n   * @private\r\n   */\r\n  _resize() {\r\n    this.canvas.width = this.canvas.offsetWidth;\r\n    this.canvas.height = this.canvas.offsetHeight;\r\n    this.center = { x: this.canvas.width / 2, y: this.canvas.height / 2 };\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Sets the tags to be displayed in the 3D tag cloud.\r\n   * @param {Array<Object>} dataArray - Array of tag data objects.\r\n   * Each object should have the following properties:\r\n   *   - text {string}: The text of the tag.\r\n   *   - color {string}: The color of the tag (e.g., \"#fff\").\r\n   *   - fontSize {number} (optional): The font size of the tag.\r\n   */\r\n  setTags(dataArray) {\r\n    this.tags = dataArray.map((data, i) => ({\r\n      ...data,\r\n      angleX: Math.random() * 2 * Math.PI,\r\n      angleY: Math.random() * Math.PI,\r\n      index: i,\r\n      _screen: {},\r\n      _scale: 1,\r\n      _color: data.color,\r\n      _opacity: 1,\r\n      _img: data.imageUrl ? null : undefined,\r\n      _svg: data.svg ? null : undefined,\r\n    }));\r\n    this._reindexTags();\r\n    this._positionTags();\r\n    this._draw();\r\n  }\r\n\r\n  /**\r\n   * Generates a random angle for tag positioning.\r\n   * @private\r\n   * @returns {number} A random angle in radians.\r\n   */\r\n  _getRandomAngle() {\r\n    return Math.random() * 2 * Math.PI;\r\n  }\r\n\r\n  /**\r\n   * Adds a single tag to the 3D tag cloud and records the action for undo/redo.\r\n   * @param {Object} tagData - Data for the new tag.\r\n   */\r\n  addTag(tagData) {\r\n    if (!this._validateTag(tagData)) return;\r\n    const newTag = {\r\n      ...tagData,\r\n      angleX: this._getRandomAngle(),\r\n      angleY: this._getRandomAngle(),\r\n      index: this.tags.length,\r\n      _screen: {},\r\n      _scale: 1,\r\n      _color: tagData.color,\r\n      _opacity: 1,\r\n      _img: tagData.imageUrl ? null : undefined,\r\n      _svg: tagData.svg ? null : undefined,\r\n    };\r\n    this.tags.push(newTag);\r\n    this.undoStack.push({ action: \"add\", tag: { ...newTag } });\r\n    this.redoStack = [];\r\n    this._reindexTags();\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Removes a tag from the 3D tag cloud by its index and records the action for undo/redo.\r\n   * @param {number} index - Index of the tag to remove.\r\n   */\r\n  removeTag(index) {\r\n    if (index < 0 || index >= this.tags.length) return;\r\n    const removedTag = this.tags.splice(index, 1)[0];\r\n    this.undoStack.push({ action: \"remove\", tag: { ...removedTag }, index });\r\n    this.redoStack = [];\r\n    this._reindexTags();\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Updates the data of an existing tag and records the action for undo/redo.\r\n   * @param {number} index - Index of the tag to update.\r\n   * @param {Object} data - New data for the tag.\r\n   */\r\n  updateTag(index, data) {\r\n    if (!this.tags[index]) {\r\n      console.error(`Tag at index ${index} does not exist.`);\r\n      return;\r\n    }\r\n    const oldData = { ...this.tags[index] };\r\n    Object.assign(this.tags[index], data, {\r\n      _scale: 1,\r\n      _color: data.color || this.tags[index].color,\r\n      _opacity: 1,\r\n    });\r\n    this.undoStack.push({\r\n      action: \"update\",\r\n      oldData,\r\n      newData: { ...this.tags[index] },\r\n    });\r\n    this.redoStack = [];\r\n    this._reindexTags();\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Undoes the last tag-related action.\r\n   */\r\n  undo() {\r\n    if (this.undoStack.length === 0) return;\r\n    const lastAction = this.undoStack.pop();\r\n    this.redoStack.push(lastAction);\r\n\r\n    switch (lastAction.action) {\r\n      case \"add\":\r\n        this.tags.pop();\r\n        break;\r\n      case \"remove\":\r\n        this.tags.splice(lastAction.index, 0, { ...lastAction.tag });\r\n        break;\r\n      case \"update\":\r\n        Object.assign(this.tags[lastAction.oldData.index], lastAction.oldData);\r\n        break;\r\n    }\r\n    this._reindexTags();\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Redoes the last undone action.\r\n   */\r\n  redo() {\r\n    if (this.redoStack.length === 0) return;\r\n    const lastAction = this.redoStack.pop();\r\n    this.undoStack.push(lastAction);\r\n\r\n    switch (lastAction.action) {\r\n      case \"add\":\r\n        this.tags.push({ ...lastAction.tag });\r\n        break;\r\n      case \"remove\":\r\n        this.tags.splice(lastAction.index, 1);\r\n        break;\r\n      case \"update\":\r\n        Object.assign(this.tags[lastAction.newData.index], lastAction.newData);\r\n        break;\r\n    }\r\n    this._reindexTags();\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Clears all tags from the 3D tag cloud.\r\n   */\r\n  clearTags() {\r\n    this.tags = [];\r\n    this._reindexTags();\r\n    this._positionTags();\r\n  }\r\n\r\n  /**\r\n   * Updates the configuration options for the Orbity instance.\r\n   * @param {Object} newOptions - New configuration options.\r\n   */\r\n  updateOptions(newOptions) {\r\n    this.settings = { ...this.settings, ...newOptions };\r\n\r\n    if (newOptions.easing !== undefined) {\r\n      if (typeof newOptions.easing !== \"number\") {\r\n        console.error(\"Invalid easing: must be a number\");\r\n        this.settings.easing = 0.1;\r\n      } else {\r\n        this.settings.easing = newOptions.easing;\r\n      }\r\n    }\r\n\r\n    if (newOptions.speed !== undefined) {\r\n      if (typeof newOptions.speed !== \"number\") {\r\n        console.error(\"Invalid speed: must be a \");\r\n        this.settings.speed = 1;\r\n      } else {\r\n        this.settings.speed = newOptions.speed;\r\n      }\r\n    }\r\n\r\n    if (newOptions.radius !== undefined) {\r\n      if (typeof newOptions.radius !== \"number\" || newOptions.radius <= 0) {\r\n        console.error(\"Invalid radius: must be a positive number.\");\r\n        this.settings.radius = 150;\r\n      }\r\n    }\r\n\r\n    if (newOptions.shape !== undefined) {\r\n      const validShapes = [\r\n        \"sphere\",\r\n        \"cube\",\r\n        \"plane\",\r\n        \"helix\",\r\n        \"ring\",\r\n        \"verticalRing\",\r\n        \"cylinder\",\r\n        \"pyramid\",\r\n        \"torus\",\r\n      ];\r\n      if (!validShapes.includes(newOptions.shape)) {\r\n        console.error(\r\n          `Invalid shape: must be one of ${validShapes.join(\", \")}.`\r\n        );\r\n        this.settings.shape = DEFAULT_SHAPE;\r\n      }\r\n    }\r\n\r\n    if (newOptions.maxVelocity !== undefined) {\r\n      if (\r\n        typeof newOptions.maxVelocity !== \"number\" ||\r\n        newOptions.maxVelocity < 0\r\n      ) {\r\n        console.error(\"Invalid maxVelocity: must be a non-negative number.\");\r\n        this.settings.maxVelocity = 0.5;\r\n      }\r\n    }\r\n\r\n    if (newOptions.radius !== undefined || newOptions.shape !== undefined) {\r\n      this._positionTags();\r\n    }\r\n\r\n    if (newOptions.enableTouch !== undefined) {\r\n      if (newOptions.enableTouch) {\r\n        this._bindTouch();\r\n      } else {\r\n        this.canvas.removeEventListener(\"touchstart\", this._touchStartHandler);\r\n        this.canvas.removeEventListener(\"touchmove\", this._touchMoveHandler);\r\n        this.canvas.removeEventListener(\"touchend\", this._bindTouch);\r\n      }\r\n    }\r\n\r\n    if (newOptions.enableOrientation !== undefined) {\r\n      if (newOptions.enableOrientation) {\r\n        this._bindOrientation();\r\n      } else {\r\n        window.removeEventListener(\r\n          \"deviceorientation\",\r\n          this._orientationHandler\r\n        );\r\n      }\r\n    }\r\n\r\n    if (newOptions.enableClick !== undefined) {\r\n      if (newOptions.enableClick) {\r\n        this.canvas.addEventListener(\"click\", this._clickHandler);\r\n      } else {\r\n        this.canvas.removeEventListener(\"click\", this._clickHandler);\r\n      }\r\n    }\r\n\r\n    if (newOptions.paused !== undefined) {\r\n      if (newOptions.paused) {\r\n        this.pause();\r\n      } else {\r\n        this.resume();\r\n      }\r\n    }\r\n\r\n    if (newOptions.easingProfile !== undefined) {\r\n      this.setEasingProfile(newOptions.easingProfile);\r\n    }\r\n    if (newOptions.autoEasing !== undefined) {\r\n      this.toggleAutoEasing(newOptions.autoEasing);\r\n    }\r\n    if (newOptions.customEaseIn !== undefined) {\r\n      this.settings.customEaseIn = newOptions.customEaseIn;\r\n    }\r\n    if (newOptions.customFriction !== undefined) {\r\n      this.settings.customFriction = newOptions.customFriction;\r\n    }\r\n    if (newOptions.minVelocityThreshold !== undefined) {\r\n      this.settings.minVelocityThreshold = newOptions.minVelocityThreshold;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates the tag data.\r\n   * @private\r\n   * @param {Object} tagData - Data for the tag.\r\n   * @returns {boolean} True if the tag data is valid, false otherwise.\r\n   */\r\n  _validateTag(tagData) {\r\n    if (!tagData.text || typeof tagData.text !== \"string\") {\r\n      console.error(\"Invalid tag: 'text' is required and must be a string.\");\r\n      return false;\r\n    }\r\n    if (!tagData.color || !/^#[0-9A-F]{6}$/i.test(tagData.color)) {\r\n      console.error(\"Invalid tag: 'color' must be a valid hex color code.\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Handles drag-like interactions for rotating the tag cloud.\r\n   * @private\r\n   */\r\n  _bindDragEvents(startEvent, moveEvent, endEvent, getPosition) {\r\n    if (!this._dragHandlers) this._dragHandlers = {};\r\n\r\n    if (this._dragHandlers[startEvent]) {\r\n      this.canvas.removeEventListener(\r\n        startEvent,\r\n        this._dragHandlers[startEvent]\r\n      );\r\n      this.canvas.removeEventListener(moveEvent, this._dragHandlers[moveEvent]);\r\n      this.canvas.removeEventListener(endEvent, this._dragHandlers[endEvent]);\r\n      this.canvas.removeEventListener(\r\n        \"mouseleave\",\r\n        this._dragHandlers.mouseleave\r\n      );\r\n      if (this._dragHandlers.windowMouseUp) {\r\n        window.removeEventListener(\"mouseup\", this._dragHandlers.windowMouseUp);\r\n      }\r\n    }\r\n\r\n    let isDragging = false;\r\n    let lastX = 0;\r\n    let lastY = 0;\r\n\r\n    const startHandler = (e) => {\r\n      if (!this.settings.enableDrag) return;\r\n      isDragging = true;\r\n      const pos = getPosition(e);\r\n      lastX = pos.x;\r\n      lastY = pos.y;\r\n\r\n      if (this.velocity.x === 0 && this.velocity.y === 0) {\r\n        this.velocity.x = this.settings.speed;\r\n        this.velocity.y = this.settings.speed;\r\n      }\r\n      if (endEvent === \"mouseup\") {\r\n        window.addEventListener(\"mouseup\", endHandler);\r\n        this._dragHandlers.windowMouseUp = endHandler;\r\n      }\r\n    };\r\n\r\n    const moveHandler = (e) => {\r\n      if (!this.settings.enableDrag || !isDragging) return;\r\n\r\n      const pos = getPosition(e);\r\n      const dx = (pos.x - lastX) * (this.settings.dragSensitivity || 1);\r\n      const dy = (pos.y - lastY) * (this.settings.dragSensitivity || 1);\r\n\r\n      if (this.settings.maxVelocity > 0) {\r\n        this.velocity.x = Math.min(\r\n          Math.max(dy * this.settings.speed, -this.settings.maxVelocity),\r\n          this.settings.maxVelocity\r\n        );\r\n        this.velocity.y = Math.min(\r\n          Math.max(dx * this.settings.speed, -this.settings.maxVelocity),\r\n          this.settings.maxVelocity\r\n        );\r\n      } else {\r\n        this.velocity.x = dy * this.settings.speed;\r\n        this.velocity.y = dx * this.settings.speed;\r\n      }\r\n\r\n      lastX = pos.x;\r\n      lastY = pos.y;\r\n\r\n      if (e.preventDefault) e.preventDefault();\r\n    };\r\n\r\n    const endHandler = () => {\r\n      if (!this.settings.enableDrag) return;\r\n      isDragging = false;\r\n      this._applyDragEasing();\r\n    };\r\n\r\n    const leaveHandler = () => {\r\n      if (!this.settings.enableDrag) return;\r\n      if (isDragging) {\r\n        isDragging = false;\r\n        this._applyDragEasing();\r\n      }\r\n    };\r\n\r\n    this.canvas.addEventListener(startEvent, startHandler);\r\n    this.canvas.addEventListener(moveEvent, moveHandler, { passive: false });\r\n    this.canvas.addEventListener(endEvent, endHandler);\r\n    this.canvas.addEventListener(\"mouseleave\", leaveHandler);\r\n\r\n    this._dragHandlers[startEvent] = startHandler;\r\n    this._dragHandlers[moveEvent] = moveHandler;\r\n    this._dragHandlers[endEvent] = endHandler;\r\n    this._dragHandlers.mouseleave = leaveHandler;\r\n  }\r\n\r\n  /**\r\n   * Handles touch interactions for rotating the tag cloud.\r\n   * @private\r\n   */\r\n  _bindTouch() {\r\n    if (!this.settings.enableTouch) return;\r\n\r\n    this._bindDragEvents(\"touchstart\", \"touchmove\", \"touchend\", (e) => ({\r\n      x: e.touches[0].clientX,\r\n      y: e.touches[0].clientY,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Handles the touch start event to initiate touch interaction.\r\n   * @private\r\n   * @param {TouchEvent} event - The touch start event.\r\n   */\r\n  _onTouchStart(event) {\r\n    if (event.touches.length === 1) {\r\n      const touch = event.touches[0];\r\n      this.touch.x = touch.clientX;\r\n      this.touch.y = touch.clientY;\r\n      this.touch.active = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the touch move event to update touch interaction.\r\n   * @private\r\n   * @param {TouchEvent} event - The touch move event.\r\n   */\r\n  _onTouchMove(event) {\r\n    if (event.touches.length === 1 && this.touch.active) {\r\n      const touch = event.touches[0];\r\n      const dx =\r\n        (touch.clientX - this.touch.x) * (this.settings.dragSensitivity || 1);\r\n      const dy =\r\n        (touch.clientY - this.touch.y) * (this.settings.dragSensitivity || 1);\r\n\r\n      if (this.settings.maxVelocity > 0) {\r\n        this.velocity.x = Math.min(\r\n          Math.max(dy * this.settings.speed, -this.settings.maxVelocity),\r\n          this.settings.maxVelocity\r\n        );\r\n        this.velocity.y = Math.min(\r\n          Math.max(dx * this.settings.speed, -this.settings.maxVelocity),\r\n          this.settings.maxVelocity\r\n        );\r\n      } else {\r\n        this.velocity.x = dy * this.settings.speed * 0.1;\r\n        this.velocity.y = dx * this.settings.speed * 0.1;\r\n      }\r\n\r\n      this.touch.x = touch.clientX;\r\n      this.touch.y = touch.clientY;\r\n\r\n      if (event.preventDefault) event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles mouse interactions for rotating the tag cloud.\r\n   * @private\r\n   */\r\n  _bindMouse() {\r\n    this._bindDragEvents(\"mousedown\", \"mousemove\", \"mouseup\", (e) => ({\r\n      x: e.clientX,\r\n      y: e.clientY,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Sets the easing profile for the rotation animation.\r\n   * @param {string} profileName - The name of the easing profile (e.g., \"Smooth\").\r\n   */\r\n  setEasingProfile(profileName) {\r\n    if (profileName === \"Custom\") {\r\n      this.settings.easingProfile = profileName;\r\n      return;\r\n    }\r\n    if (EASING_PROFILES[profileName]) {\r\n      this.settings.easingProfile = profileName;\r\n      const { easeIn, friction } = EASING_PROFILES[profileName];\r\n      this.settings.customEaseIn = easeIn;\r\n      this.settings.customFriction = friction;\r\n    } else {\r\n      console.error(`Invalid easing profile: ${profileName}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles auto-easing for the rotation animation.\r\n   * @param {boolean} enabled - Whether to enable or disable auto-easing.\r\n   */\r\n  toggleAutoEasing(enabled) {\r\n    this.settings.autoEasing = enabled;\r\n  }\r\n\r\n  _applyDragEasing() {\r\n    const { customFriction, minVelocityThreshold } = this.settings;\r\n\r\n    const easeOut = () => {\r\n      this.velocity.x *= customFriction;\r\n      this.velocity.y *= customFriction;\r\n\r\n      if (Math.abs(this.velocity.x) < minVelocityThreshold) this.velocity.x = 0;\r\n      if (Math.abs(this.velocity.y) < minVelocityThreshold) this.velocity.y = 0;\r\n\r\n      if (this.velocity.x !== 0 || this.velocity.y !== 0) {\r\n        requestAnimationFrame(easeOut);\r\n      }\r\n    };\r\n\r\n    easeOut();\r\n  }\r\n\r\n  /**\r\n   * Handles device orientation interactions for rotating the tag cloud.\r\n   * @private\r\n   */\r\n  _bindOrientation() {\r\n    if (!this.settings.enableOrientation) return;\r\n\r\n    let lastUpdate = 0;\r\n    const throttleDelay = 100;\r\n\r\n    const handleOrientation = (e) => {\r\n      const now = Date.now();\r\n      if (now - lastUpdate < throttleDelay) return;\r\n      lastUpdate = now;\r\n\r\n      const { gamma = 0, beta = 0 } = e;\r\n      this.velocity.x = gamma * 0.0005;\r\n      this.velocity.y = beta * 0.0005;\r\n    };\r\n\r\n    window.addEventListener(\"deviceorientation\", handleOrientation);\r\n  }\r\n\r\n  /**\r\n   * Handles device orientation events to update the rotation velocity.\r\n   * @private\r\n   * @param {DeviceOrientationEvent} event - The device orientation event.\r\n   */\r\n  _handleOrientation(event) {\r\n    const { beta, gamma } = event;\r\n    if (beta !== null && gamma !== null) {\r\n      this.velocity.x = gamma * 0.0005;\r\n      this.velocity.y = beta * 0.0005;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attaches mouse interaction events for the tag cloud.\r\n   * @private\r\n   */\r\n  _attachInteraction() {\r\n    if (this.settings.enableClick) {\r\n      this.canvas.addEventListener(\"click\", this._onCanvasClick.bind(this));\r\n    }\r\n    this.canvas.addEventListener(\r\n      \"mousemove\",\r\n      this._onCanvasMouseMove.bind(this)\r\n    );\r\n    this.canvas.addEventListener(\r\n      \"mouseleave\",\r\n      this._onCanvasMouseLeave.bind(this)\r\n    );\r\n  }\r\n\r\n  _onCanvasClick(e) {\r\n    const pt = this._getPointer(e);\r\n    const tag = this._getTagAt(pt);\r\n\r\n    if (tag && this.settings.clickEffect) {\r\n      tag._scale = this.settings.hoverScale * 1.1;\r\n      setTimeout(() => {\r\n        tag._scale = this.settings.hoverScale;\r\n      }, 200);\r\n    }\r\n\r\n    const dx = pt.x - this.center.x;\r\n    const dy = pt.y - this.center.y;\r\n\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n    const velocityMagnitude =\r\n      this.settings.maxVelocity > 0\r\n        ? this.settings.maxVelocity * 0.2\r\n        : this.settings.speed * 0.1;\r\n\r\n    this.velocity.x =\r\n      -(dy / distance) * velocityMagnitude || this.settings.speed * 0.1;\r\n    this.velocity.y =\r\n      -(dx / distance) * velocityMagnitude || this.settings.speed * 0.1;\r\n  }\r\n\r\n  _onCanvasMouseMove(e) {\r\n    const pt = this._getPointer(e);\r\n    const tag = this._getTagAt(pt);\r\n\r\n    if (tag && tag.index !== this._hoveredIndex) {\r\n      if (this._hoveredIndex !== null) {\r\n        const prev = this.tags[this._hoveredIndex];\r\n        prev._scale = 1;\r\n        prev._color = prev.color;\r\n        prev._opacity = 1;\r\n        this._events.tagLeave.forEach((cb) => cb(prev));\r\n      }\r\n      this._hoveredIndex = tag.index;\r\n      if (this.settings.hoverEffect) {\r\n        tag._scale = this.settings.hoverScale;\r\n        tag._color = this.settings.hoverColor || tag.color;\r\n        tag._opacity = this.settings.hoverOpacity;\r\n      }\r\n      this._events.tagHover.forEach((cb) => cb(tag));\r\n    } else if (!tag && this._hoveredIndex !== null) {\r\n      const prev = this.tags[this._hoveredIndex];\r\n      prev._scale = 1;\r\n      prev._color = prev.color;\r\n      prev._opacity = 1;\r\n      this._events.tagLeave.forEach((cb) => cb(prev));\r\n      this._hoveredIndex = null;\r\n    }\r\n  }\r\n\r\n  _onCanvasMouseLeave() {\r\n    if (this._hoveredIndex !== null) {\r\n      const prev = this.tags[this._hoveredIndex];\r\n      prev._scale = 1;\r\n      prev._color = prev.color;\r\n      prev._opacity = 1;\r\n      this._events.tagLeave.forEach((cb) => cb(prev));\r\n      this._hoveredIndex = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles keyboard events for accessibility and navigation.\r\n   * @private\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  _onKeyboard(event) {\r\n    switch (event.key) {\r\n      case \"ArrowLeft\":\r\n        this.rotation.y -= 0.1;\r\n        event.preventDefault();\r\n        break;\r\n      case \"ArrowRight\":\r\n        this.rotation.y += 0.1;\r\n        event.preventDefault();\r\n        break;\r\n      case \"ArrowUp\":\r\n        this.rotation.x -= 0.1;\r\n        event.preventDefault();\r\n        break;\r\n      case \"ArrowDown\":\r\n        this.rotation.x += 0.1;\r\n        event.preventDefault();\r\n        break;\r\n      case \"Home\":\r\n        this.rotation.x = 0;\r\n        this.rotation.y = 0;\r\n        event.preventDefault();\r\n        break;\r\n      case \"End\":\r\n        this.rotation.x = 0;\r\n        this.rotation.y = 0;\r\n        event.preventDefault();\r\n        break;\r\n      case \" \":\r\n      case \"Spacebar\":\r\n        if (this.settings.paused) {\r\n          this.resume();\r\n        } else {\r\n          this.pause();\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  _getPointer(e) {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    return { x: e.clientX - rect.left, y: e.clientY - rect.top };\r\n  }\r\n\r\n  _getTagAt(pt) {\r\n    for (let i = this.tags.length - 1; i >= 0; i--) {\r\n      const tag = this.tags[i];\r\n      const s = tag._screen;\r\n      if (!s) continue;\r\n      const dx = pt.x - s.x;\r\n      const dy = pt.y - s.y;\r\n      if (Math.abs(dx) <= s.width / 2 && Math.abs(dy) <= s.height / 2)\r\n        return tag;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _positionTags() {\r\n    if (!this.tags.length) return;\r\n\r\n    const R = this.settings.radius;\r\n    const N = this.tags.length;\r\n    const shape = this.settings.shape || DEFAULT_SHAPE;\r\n\r\n    switch (shape) {\r\n      case \"torus\":\r\n        const majorRadius = this.settings.majorRadius || R * 0.6;\r\n        const minorRadius = this.settings.minorRadius || R * 0.3;\r\n        const majorSteps = Math.ceil(Math.sqrt(N));\r\n        const minorSteps = Math.ceil(N / majorSteps);\r\n\r\n        this.tags.forEach((tag, i) => {\r\n          const majorAngle = (i % majorSteps) * ((2 * Math.PI) / majorSteps);\r\n          const minorAngle =\r\n            Math.floor(i / majorSteps) * ((2 * Math.PI) / minorSteps);\r\n\r\n          const x =\r\n            (majorRadius + minorRadius * Math.cos(minorAngle)) *\r\n            Math.cos(majorAngle);\r\n          const y =\r\n            (majorRadius + minorRadius * Math.cos(minorAngle)) *\r\n            Math.sin(majorAngle);\r\n          const z = minorRadius * Math.sin(minorAngle);\r\n\r\n          tag.x = x;\r\n          tag.y = y;\r\n          tag.z = z;\r\n        });\r\n        break;\r\n\r\n      case \"cube\":\r\n        const side = Math.ceil(Math.cbrt(N));\r\n        const threshold = 0.1;\r\n        let validTags = 0;\r\n\r\n        this.tags.forEach((tag) => {\r\n          let x, y, z;\r\n\r\n          do {\r\n            x = (validTags % side) - side / 2 + 0.5;\r\n            y = (Math.floor(validTags / side) % side) - side / 2 + 0.5;\r\n            z = Math.floor(validTags / (side * side)) - side / 2 + 0.5;\r\n            validTags++;\r\n          } while (\r\n            Math.abs(x) < threshold &&\r\n            Math.abs(y) < threshold &&\r\n            Math.abs(z) < threshold\r\n          );\r\n\r\n          tag.x = x * (R / side) * 2;\r\n          tag.y = y * (R / side) * 2;\r\n          tag.z = z * (R / side) * 2;\r\n        });\r\n        break;\r\n\r\n      case \"pyramid\":\r\n        const levels = Math.ceil(Math.sqrt(N));\r\n        let index = 0;\r\n        for (let level = 0; level < levels; level++) {\r\n          const levelSize = levels - level;\r\n          const y = (level / levels) * R * 2 - R;\r\n          for (let i = 0; i < levelSize && index < N; i++, index++) {\r\n            const angle = (i / levelSize) * 2 * Math.PI;\r\n            const radius = (R * (levels - level)) / levels;\r\n            this.tags[index].x = radius * Math.cos(angle);\r\n            this.tags[index].y = y;\r\n            this.tags[index].z = radius * Math.sin(angle);\r\n          }\r\n        }\r\n        break;\r\n      case \"helix\":\r\n        const turns = 2;\r\n        const spacing = (2 * R) / N;\r\n        this.tags.forEach((tag, i) => {\r\n          const angle = (i / N) * 2 * Math.PI * turns;\r\n          const height = -R + i * spacing;\r\n          tag.x = R * Math.cos(angle);\r\n          tag.y = height;\r\n          tag.z = R * Math.sin(angle);\r\n        });\r\n        break;\r\n      case \"ring\":\r\n        this.tags.forEach((tag, i) => {\r\n          const angle = (i / N) * 2 * Math.PI;\r\n          tag.x = R * Math.cos(angle);\r\n          tag.y = 0;\r\n          tag.z = R * Math.sin(angle);\r\n        });\r\n        break;\r\n      case \"verticalRing\":\r\n        this.tags.forEach((tag, i) => {\r\n          const angle = (i / N) * 2 * Math.PI;\r\n          tag.x = 0;\r\n          tag.y = R * Math.sin(angle);\r\n          tag.z = R * Math.cos(angle);\r\n        });\r\n        break;\r\n      case \"cylinder\":\r\n        const heightStep = (2 * R) / Math.ceil(N / 10);\r\n        const circumferenceTags = Math.ceil(Math.sqrt(N));\r\n        this.tags.forEach((tag, i) => {\r\n          const level = Math.floor(i / circumferenceTags);\r\n          const angle =\r\n            (i % circumferenceTags) * ((2 * Math.PI) / circumferenceTags);\r\n          const height = -R + level * heightStep;\r\n          tag.x = R * Math.cos(angle);\r\n          tag.y = height;\r\n          tag.z = R * Math.sin(angle);\r\n        });\r\n        break;\r\n\r\n      case \"plane\":\r\n        const gridCols = Math.ceil(Math.sqrt(N));\r\n        const gridRows = Math.ceil(N / gridCols);\r\n        const spacingX = (2 * R) / (gridCols - 1 || 1);\r\n        const spacingZ = (2 * R) / (gridRows - 1 || 1);\r\n        this.tags.forEach((tag, i) => {\r\n          const col = i % gridCols;\r\n          const row = Math.floor(i / gridCols);\r\n          tag.x = -R + col * spacingX;\r\n          tag.y = 0;\r\n          tag.z = -R + row * spacingZ;\r\n        });\r\n        break;\r\n\r\n      case \"sphere\":\r\n      default:\r\n        const goldenRatio = (1 + Math.sqrt(5)) / 2;\r\n        const angleIncrement = Math.PI * 2 * goldenRatio;\r\n        this.tags.forEach((tag, i) => {\r\n          const t = i / N;\r\n          const inclination = Math.acos(1 - 2 * t);\r\n          const azimuth = angleIncrement * i;\r\n          tag.x = R * Math.sin(inclination) * Math.cos(azimuth);\r\n          tag.y = R * Math.sin(inclination) * Math.sin(azimuth);\r\n          tag.z = R * Math.cos(inclination);\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  _draw() {\r\n    const { ctx, canvas, center } = this;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    const sortedTags = [...this.tags]\r\n      .filter(\r\n        (tag) =>\r\n          tag &&\r\n          (typeof tag.text === \"string\" || tag.imageUrl || tag.svg) &&\r\n          typeof tag.x === \"number\" &&\r\n          typeof tag.y === \"number\" &&\r\n          typeof tag.z === \"number\"\r\n      )\r\n      .sort((a, b) => b.z - a.z);\r\n    for (const tag of sortedTags) {\r\n      try {\r\n        const denominator = center.x * 2 + tag.z;\r\n        const scale = denominator > 0 ? (center.x * 2) / denominator : 1;\r\n        const x = isFinite(tag.x * scale + center.x)\r\n          ? tag.x * scale + center.x\r\n          : center.x;\r\n        const y = isFinite(tag.y * scale + center.y)\r\n          ? tag.y * scale + center.y\r\n          : center.y;\r\n        const fontSize = isFinite(\r\n          (tag.fontSize || 15) * scale * (tag._scale || 1)\r\n        )\r\n          ? (tag.fontSize || 15) * scale * (tag._scale || 1)\r\n          : 15;\r\n        const maxZ = center.x * 2;\r\n        const minZ = -center.x * 2;\r\n        const normalizedZ = (tag.z - minZ) / (maxZ - minZ);\r\n        const opacity = Math.max(0.2, Math.min(1, 1 - normalizedZ));\r\n        ctx.globalAlpha = opacity;\r\n        if (this._focusedIndex === tag.index) {\r\n          ctx.save();\r\n          ctx.strokeStyle = \"#ffc845\";\r\n          ctx.lineWidth = 3;\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, fontSize, 0, 2 * Math.PI);\r\n          ctx.stroke();\r\n          ctx.restore();\r\n        }\r\n        if (tag.imageUrl) {\r\n          if (!tag._img) {\r\n            tag._img = new window.Image();\r\n            tag._img.src = tag.imageUrl;\r\n            tag._img.onload = () => this._draw();\r\n          }\r\n          if (tag._img.complete && tag._img.naturalWidth) {\r\n            ctx.drawImage(\r\n              tag._img,\r\n              x - fontSize / 2,\r\n              y - fontSize / 2,\r\n              fontSize,\r\n              fontSize\r\n            );\r\n            tag._screen = {\r\n              x,\r\n              y,\r\n              width: fontSize,\r\n              height: fontSize,\r\n            };\r\n            continue;\r\n          }\r\n        }\r\n        if (tag.svg) {\r\n          if (!tag._svg) {\r\n            const svg = new window.Image();\r\n            const svgBlob = new Blob([tag.svg], { type: \"image/svg+xml\" });\r\n            tag._svgUrl = URL.createObjectURL(svgBlob);\r\n            svg.src = tag._svgUrl;\r\n            svg.onload = () => {\r\n              tag._svg = svg;\r\n              this._draw();\r\n            };\r\n          }\r\n          if (tag._svg && tag._svg.complete && tag._svg.naturalWidth) {\r\n            ctx.drawImage(\r\n              tag._svg,\r\n              x - fontSize / 2,\r\n              y - fontSize / 2,\r\n              fontSize,\r\n              fontSize\r\n            );\r\n            tag._screen = {\r\n              x,\r\n              y,\r\n              width: fontSize,\r\n              height: fontSize,\r\n            };\r\n            continue;\r\n          }\r\n        }\r\n        if (tag.text) {\r\n          ctx.fillStyle = tag._color || tag.color || \"#fff\";\r\n          ctx.font = `${this.settings.customFontWeight} ${fontSize}px ${this.settings.customFont}`;\r\n          const metrics = ctx.measureText(tag.text);\r\n          tag._screen = {\r\n            x,\r\n            y,\r\n            width: metrics.width,\r\n            height: fontSize,\r\n          };\r\n          ctx.fillText(tag.text, x - metrics.width / 2, y + fontSize / 2);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error drawing tag:\", tag, error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Animates the rotation of the tag cloud.\r\n   * @private\r\n   */\r\n  _animate() {\r\n    if (this.settings.paused) return;\r\n\r\n    if (this.settings.autoSpin && !this.settings.paused) {\r\n      if (this.settings.autoEasing) {\r\n        this.velocity.x +=\r\n          (this.settings.speed - this.velocity.x) * this.settings.customEaseIn;\r\n        this.velocity.y +=\r\n          (this.settings.speed - this.velocity.y) * this.settings.customEaseIn;\r\n      } else {\r\n        this.velocity.x = this.settings.speed * 0.1;\r\n        this.velocity.y = this.settings.speed * 0.1;\r\n      }\r\n      if (this.settings.maxVelocity > 0) {\r\n        this.velocity.x = Math.max(\r\n          -this.settings.maxVelocity,\r\n          Math.min(this.velocity.x, this.settings.maxVelocity)\r\n        );\r\n        this.velocity.y = Math.max(\r\n          -this.settings.maxVelocity,\r\n          Math.min(this.velocity.y, this.settings.maxVelocity)\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this.velocity.x !== 0 || this.velocity.y !== 0) {\r\n      if (this.settings.autoEasing) {\r\n        this.rotation.x +=\r\n          (this.velocity.x - this.rotation.x) * this.settings.easing;\r\n        this.rotation.y +=\r\n          (this.velocity.y - this.rotation.y) * this.settings.easing;\r\n      } else {\r\n        this.rotation.x += this.velocity.x;\r\n        this.rotation.y += this.velocity.y;\r\n      }\r\n\r\n      const shape = this.settings.shape || DEFAULT_SHAPE;\r\n      if (shape === \"ring\" || shape === \"helix\") {\r\n        this.rotation.x = 0;\r\n      } else if (shape === \"verticalRing\") {\r\n        this.rotation.y = 0;\r\n      }\r\n\r\n      const cosY = Math.cos(this.rotation.y),\r\n        sinY = Math.sin(this.rotation.y);\r\n      const cosX = Math.cos(this.rotation.x),\r\n        sinX = Math.sin(this.rotation.x);\r\n\r\n      this.tags.forEach((tag) => {\r\n        let { x, y, z } = tag;\r\n\r\n        let nx = x * cosY - z * sinY;\r\n        let nz = x * sinY + z * cosY;\r\n        let ny = y * cosX - nz * sinX;\r\n        nz = y * sinX + nz * cosX;\r\n        tag.x = nx;\r\n        tag.y = ny;\r\n        tag.z = nz;\r\n      });\r\n    }\r\n\r\n    this._draw();\r\n    this.animFrame = requestAnimationFrame(this._animate.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Pauses the animation of the tag cloud.\r\n   */\r\n  pause() {\r\n    this.settings.paused = true;\r\n    if (this.animFrame) {\r\n      cancelAnimationFrame(this.animFrame);\r\n      this.animFrame = null;\r\n    }\r\n    this._events.pause?.forEach((cb) => cb());\r\n  }\r\n\r\n  /**\r\n   * Resumes the animation of the tag cloud.\r\n   */\r\n  resume() {\r\n    if (!this.settings.paused) return;\r\n    this.settings.paused = false;\r\n    this._animate();\r\n    this._events.resume?.forEach((cb) => cb());\r\n  }\r\n\r\n  /**\r\n   * Destroys the Orbity instance, removing all event listeners and clearing the canvas.\r\n   */\r\n  destroy() {\r\n    this.pause();\r\n    window.removeEventListener(\"resize\", this._resize);\r\n    this.canvas.removeEventListener(\"touchstart\", this._touchStartHandler);\r\n    this.canvas.removeEventListener(\"touchmove\", this._touchMoveHandler);\r\n    this.canvas.removeEventListener(\"touchend\", this._bindTouch);\r\n    this.canvas.removeEventListener(\"mousedown\", this._bindMouse);\r\n    this.canvas.removeEventListener(\"mousemove\", this._onCanvasMouseMove);\r\n    this.canvas.removeEventListener(\"mouseup\", this._bindMouse);\r\n    this.canvas.removeEventListener(\"mouseleave\", this._onCanvasMouseLeave);\r\n    this.canvas.removeEventListener(\"click\", this._onCanvasClick);\r\n    window.removeEventListener(\"deviceorientation\", this._orientationHandler);\r\n    this.canvas.removeEventListener(\"keydown\", this._keyboardHandler);\r\n    if (this.canvas.parentNode) {\r\n      this.canvas.replaceWith(this.canvas.cloneNode(true));\r\n    }\r\n    this.tags = [];\r\n  }\r\n\r\n  /**\r\n   * Updates the index property of each tag to match its position in the tags array.\r\n   * @private\r\n   */\r\n  _reindexTags() {\r\n    this.tags.forEach((tag, i) => {\r\n      tag.index = i;\r\n    });\r\n  }\r\n}\r\nexport default Orbity;\r\n"],"names":["DEFAULT_SHAPE","EASING_PROFILES","Snappy","easeIn","friction","Smooth","Marathon","constructor","canvas","options","this","ctx","getContext","tags","settings","Object","assign","radius","speed","easing","enableEasing","paused","enableTouch","enableOrientation","maxVelocity","shape","enableDrag","enableClick","autoSpin","hoverEffect","clickEffect","hoverScale","hoverColor","hoverOpacity","customFont","customFontWeight","easingProfile","customEaseIn","customFriction","autoEasing","minVelocityThreshold","dragSensitivity","rotation","x","y","velocity","touch","active","animFrame","_events","tagClick","tagHover","tagLeave","_hoveredIndex","undoStack","redoStack","Math","min","max","_orientationHandler","_handleOrientation","bind","_touchStartHandler","_onTouchStart","_touchMoveHandler","_onTouchMove","_mouseMoveHandler","_onCanvasMouseMove","_mouseLeaveHandler","_onCanvasMouseLeave","_clickHandler","_onCanvasClick","_keyboardHandler","_onKeyboard","_init","_throttle","func","limit","lastFunc","lastRan","args","context","clearTimeout","setTimeout","Date","now","apply","_resize","window","addEventListener","_bindTouch","_bindMouse","_bindOrientation","_attachInteraction","setAttribute","_positionTags","_animate","width","offsetWidth","height","offsetHeight","center","setTags","dataArray","map","data","i","angleX","random","PI","angleY","index","_screen","_scale","_color","color","_opacity","_img","imageUrl","undefined","_svg","svg","_reindexTags","_draw","_getRandomAngle","addTag","tagData","_validateTag","newTag","length","push","action","tag","removeTag","removedTag","splice","updateTag","console","error","oldData","newData","undo","lastAction","pop","redo","clearTags","updateOptions","newOptions","validShapes","includes","join","removeEventListener","pause","resume","setEasingProfile","toggleAutoEasing","text","test","_bindDragEvents","startEvent","moveEvent","endEvent","getPosition","_dragHandlers","mouseleave","windowMouseUp","isDragging","lastX","lastY","startHandler","e","pos","endHandler","moveHandler","dx","dy","preventDefault","_applyDragEasing","leaveHandler","passive","touches","clientX","clientY","event","profileName","enabled","easeOut","abs","requestAnimationFrame","lastUpdate","gamma","beta","pt","_getPointer","_getTagAt","distance","sqrt","velocityMagnitude","prev","forEach","cb","key","rect","getBoundingClientRect","left","top","s","R","N","majorRadius","minorRadius","majorSteps","ceil","minorSteps","majorAngle","minorAngle","floor","cos","sin","z","side","cbrt","threshold","validTags","levels","level","levelSize","angle","turns","spacing","heightStep","circumferenceTags","gridCols","gridRows","spacingX","spacingZ","col","row","goldenRatio","angleIncrement","t","inclination","acos","azimuth","clearRect","sortedTags","filter","sort","a","b","denominator","scale","isFinite","fontSize","maxZ","minZ","normalizedZ","opacity","globalAlpha","_focusedIndex","save","strokeStyle","lineWidth","beginPath","arc","stroke","restore","Image","src","onload","complete","naturalWidth","drawImage","svgBlob","Blob","type","_svgUrl","URL","createObjectURL","fillStyle","font","metrics","measureText","fillText","cosY","sinY","cosX","sinX","nx","nz","ny","cancelAnimationFrame","destroy","parentNode","replaceWith","cloneNode"],"mappings":"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"}